var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/injectables/ApiService.html",[0,0.907,1,1.239]],["body/injectables/ApiService.html",[0,0.892,1,1.219,2,1.349,3,0.208,4,0.183,5,0.183,6,1.107,7,0.208,8,0.447,9,0.984,10,1.142,11,2.285,12,2.285,13,0.892,14,3.189,15,3.189,16,3.189,17,2.566,18,2.566,19,3.189,20,3.189,21,0.419,22,2.071,23,2.566,24,1.451,25,3.189,26,1.394,27,0.031,28,0.647,29,0.539,30,1.288,31,2.285,32,1.873,33,2.135,34,2.071,35,2.324,36,0.821,37,2.47,38,0.763,39,1.803,40,0.695,41,1.325,42,1.835,43,1.962,44,1.622,45,1.962,46,2.358,47,0.787,48,1.486,49,0.787,50,0.955,51,1.113,52,2.166,53,1.102,54,3.075,55,2.324,56,2.566,57,2.101,58,1.873,59,2.071,60,1.235,61,1.042,62,1.433,63,3.172,64,0.751,65,1.559,66,1.808,67,1.808,68,1.129,69,0.964,70,1.433,71,1.873,72,0.889,73,2.864,74,2.864,75,2.566,76,2.071,77,1.176,78,1.542,79,2.755,80,1.321,81,1.321,82,2.566,83,1.873,84,1.559,85,2.566,86,1.222,87,2.566,88,2.062,89,2.566,90,2.566,91,2.062,92,1.704,93,1.042,94,1.873,95,1.32,96,1.873,97,1.433,98,2.871,99,2.071,100,2.334,101,2.566,102,1.451,103,2.566,104,2.071,105,0.892,106,1.873,107,2.538,108,2.071,109,3.049,110,2.927,111,2.566,112,1.621,113,1.873,114,1.61,115,2.566,116,1.321,117,1.61,118,1.834,119,1.873,120,1.873,121,2.771,122,1.271,123,2.071,124,1.32,125,1.32,126,1.042,127,1.129,128,1.321,129,1.873,130,2.285,131,1.873,132,1.433,133,1.433,134,1.873,135,2.566,136,1.873,137,1.873,138,2.071,139,0.474,140,0.183,141,1.217,142,1.107,143,0.535,144,1.107,145,1.013,146,1.217,147,1.217,148,1.433,149,1.61,150,2.334,151,0.884,152,1.013,153,1.873,154,1.013,155,1.042,156,1.217,157,0.02,158,1.217,159,1.217,160,1.217,161,1.873,162,1.219,163,1.217,164,1.217,165,1.013,166,0.857,167,1.747,168,1.433,169,0.792,170,0.732,171,0.208,172,0.208,173,0.857,174,2.938,175,3.449,176,1.426,177,2.771,178,1.217,179,1.217,180,1.217,181,1.217,182,1.217,183,1.217,184,1.217,185,0.29,186,0.419,187,1.217,188,1.061,189,1.217,190,2.771,191,2.566,192,1.217,193,1.873,194,2.771,195,1.747,196,2.771,197,0.857,198,1.797,199,1.873,200,1.873,201,1.704,202,0.801,203,2.566,204,1.217,205,1.217,206,1.042,207,1.107,208,1.217,209,0.732,210,1.873,211,1.873,212,1.107,213,1.217,214,1.217,215,0.419,216,1.217,217,1.217,218,1.217,219,1.217,220,1.217,221,1.219,222,1.107,223,1.217,224,1.217,225,1.217,226,1.873,227,1.217,228,0.792,229,1.217,230,1.873,231,1.217,232,1.217,233,1.217,234,0.857,235,1.217,236,1.217,237,0.93,238,0.677,239,1.217,240,0.93,241,0.93,242,0.93,243,1.217,244,1.217,245,1.217,246,1.217,247,1.217,248,1.217,249,1.217,250,1.217,251,1.217,252,1.217,253,1.217,254,1.217,255,0.015]],["title/components/AppComponent.html",[256,0.176,257,0.713]],["body/components/AppComponent.html",[3,0.385,4,0.338,5,0.338,7,0.385,8,0.691,10,0.842,13,1.379,21,0.774,24,1.49,26,1.07,27,0.031,28,0.618,29,0.548,30,0.989,36,0.772,38,0.712,47,0.691,49,0.691,50,0.998,53,0.71,64,0.623,72,0.537,80,1.491,81,1.491,95,2.041,102,1.275,112,1.491,139,0.496,140,0.338,149,2.041,155,1.883,157,0.023,170,1.742,171,0.385,172,0.385,173,1.584,185,0.808,186,0.998,215,1.166,228,2.085,255,0.023,256,0.296,257,1.268,258,1.379,259,1.157,260,1.157,261,1.157,262,1.157,263,3.205,264,4.929,265,4.211,266,1.884,267,4.929,268,2.896,269,4.929,270,4.13,271,4.827,272,4.929,273,4.929,274,4.13,275,4.929,276,2.411,277,4.929,278,4.13,279,4.929,280,4.929,281,2.896,282,3.21,283,1.177,284,1.07,285,1.884,286,2.451,287,1.157,288,1.988,289,1.839,290,1.491,291,5.454,292,1.491,293,4.929,294,2.667,295,2.588,296,1.719,297,1.343,298,4.929,299,3.825,300,1.177,301,1.207,302,4.13,303,3.825,304,3.205,305,0.913,306,0.913,307,1.65,308,2.045,309,2.045,310,0.989,311,1.491,312,1.157,313,1.742,314,1.157,315,1.157,316,0.774,317,1.157,318,0.842,319,1.157,320,1.491,321,0.842,322,1.157,323,0.842,324,1.157,325,0.842,326,0.913,327,0.842,328,1.157,329,0.774,330,1.157,331,0.774,332,1.157,333,0.774,334,1.157,335,0.774,336,1.07,337,1.157,338,0.774,339,1.157,340,0.774,341,1.07,342,1.157,343,1.157]],["title/modules/AppModule.html",[344,2.11,345,2.11]],["body/modules/AppModule.html",[3,0.391,4,0.343,5,0.343,27,0.031,139,0.669,140,0.343,142,2.077,157,0.023,171,0.391,172,0.391,255,0.023,257,1.431,289,1.087,297,1.349,304,3.255,310,1.005,316,1.241,318,1.349,321,1.349,323,1.349,325,1.349,326,1.189,327,1.349,329,1.241,331,1.241,333,1.241,335,1.241,338,1.241,340,1.241,344,2.53,345,4.414,346,2.283,347,2.53,348,4.604,349,2.469,350,4.604,351,2.84,352,3.255,353,3.255,354,3.255,355,3.255,356,3.255,357,3.601,358,4.172,359,3.255,360,2.84,361,3.885,362,4.172,363,4.172,364,4.979,365,3.255,366,2.84,367,4.979,368,3.885,369,3.885,370,3.885,371,3.885,372,4.979,373,2.84,374,3.885,375,2.077,376,3.64,377,3.255,378,3.255,379,3.255,380,2.53,381,3.255,382,3.255,383,3.255,384,3.255,385,2.53,386,3.255,387,3.255,388,2.53,389,3.255,390,4.979,391,4.979,392,2.077,393,3.885,394,2.283]],["title/modules/AppRoutingModule.html",[344,2.11,357,1.904]],["body/modules/AppRoutingModule.html",[3,0.447,4,0.393,5,0.393,27,0.031,40,0.563,139,0.66,140,0.393,157,0.025,171,0.447,172,0.447,186,0.901,202,0.756,255,0.025,256,0.348,316,1.097,329,1.097,331,1.097,333,1.097,335,1.097,336,1.245,338,1.097,340,1.097,341,1.245,346,2.614,351,3.253,357,3.184,362,3.728,363,4.54,377,3.728,378,3.728,379,3.728,380,2.898,381,3.728,382,3.728,383,3.728,384,3.728,385,2.898,386,3.728,387,3.728,388,2.898,389,3.728,395,4.449,396,4.449,397,5.419,398,3.806,399,1.999,400,4.272,401,4.449,402,6.526,403,5.419,404,2.974,405,4.449,406,4.449,407,4.449,408,5.419,409,1.999,410,3.253,411,2.176,412,4.449,413,4.449,414,4.449,415,4.449,416,4.449,417,4.449]],["title/injectables/AuthService.html",[0,0.907,297,0.713]],["body/injectables/AuthService.html",[0,1.177,2,1.968,3,0.304,4,0.267,5,0.267,7,0.304,8,0.59,9,0.822,10,1.066,13,1.177,21,0.98,24,1.587,26,1.465,27,0.031,28,0.593,29,0.617,30,1.354,36,0.382,38,0.675,40,0.532,41,0.852,49,0.735,51,0.612,53,1.059,54,2.368,68,0.781,69,0.914,72,0.929,86,0.845,118,1.945,122,1.712,125,1.742,126,1.583,139,0.423,140,0.267,143,0.781,151,0.612,155,1.376,157,0.019,169,1.155,170,1.068,171,0.423,172,0.304,176,0.914,185,0.424,188,1.139,202,1.053,206,1.712,209,1.068,255,0.019,283,1.465,294,2.86,297,0.926,300,1.25,301,1.255,309,1.615,409,2.176,410,3.076,411,2.788,418,1.968,419,3.809,420,4.057,421,4.387,422,3.828,423,4.057,424,4.208,425,4.208,426,4.057,427,4.208,428,3.022,429,3.526,430,3.022,431,3.126,432,3.41,433,3.022,434,3.526,435,3.022,436,2.532,437,3.022,438,3.828,439,3.022,440,4.387,441,3.526,442,4.387,443,3.022,444,4.387,445,4.387,446,3.022,447,3.022,448,3.022,449,2.532,450,1.775,451,1.968,452,2.209,453,1.968,454,2.209,455,1.478,456,1.615,457,2.74,458,2.845,459,2.74,460,3.076,461,3.153,462,2.532,463,2.532,464,3.526,465,2.532,466,2.532,467,2.532,468,2.532,469,1.478,470,2.532,471,1.251,472,2.532,473,2.532,474,4.387,475,2.532,476,2.532,477,2.532,478,2.532,479,2.532,480,2.209,481,2.532,482,2.209,483,1.478,484,1.968,485,2.532,486,2.058,487,1.608,488,3.703,489,2.391,490,4.387,491,4.387,492,2.532,493,4.387,494,2.532,495,4.057,496,2.532,497,2.532,498,2.002,499,2.058,500,2.532,501,2.532,502,3.526,503,2.532,504,2.472,505,2.532,506,4.057,507,1.968,508,1.968,509,2.532,510,2.209,511,1.891,512,2.532,513,4.387,514,3.526,515,2.532,516,2.472,517,3.526,518,2.532,519,3.526,520,2.532,521,3.526,522,2.532,523,2.249,524,1.968,525,2.74,526,2.058,527,2.532,528,4.057,529,2.532,530,3.526,531,2.532,532,2.532,533,2.532,534,2.532]],["title/components/CategoryComponent.html",[256,0.176,316,0.656]],["body/components/CategoryComponent.html",[1,1.646,3,0.203,4,0.178,5,0.178,7,0.203,8,0.438,9,0.991,10,0.947,13,0.874,21,0.632,24,1.638,26,1.303,27,0.031,28,0.582,29,0.624,30,1.204,36,0.65,37,1.403,38,0.686,39,1.883,40,0.738,41,0.774,42,1.611,44,1.204,47,0.438,49,0.721,50,0.997,51,0.997,52,1.646,53,1.013,60,1.248,61,1.611,62,1.403,64,0.785,72,0.882,73,2.747,74,2.747,77,0.944,78,1.854,79,2.45,80,1.765,81,1.765,84,2.105,86,1.204,88,1.782,91,1.782,102,0.807,105,1.069,116,1.156,124,1.583,128,1.302,139,0.517,140,0.178,143,0.521,145,0.986,154,2.105,155,1.736,157,0.014,162,1.193,171,0.203,172,0.203,176,0.944,185,0.808,186,1.04,188,0.915,195,1.934,197,2.04,198,1.821,202,0.991,212,2.043,215,0.871,221,1.964,234,1.293,238,1.021,255,0.014,256,0.207,257,0.443,258,0.874,259,0.609,260,0.609,261,0.609,262,0.609,266,1.193,283,0.745,284,0.564,285,1.193,286,1.717,287,0.609,288,1.803,289,1.668,290,0.944,292,0.944,294,2.278,295,1.934,297,1.131,300,1.436,301,0.943,305,0.481,306,0.481,307,1.156,308,1.077,309,1.077,310,0.521,311,0.944,312,0.609,313,1.302,314,0.609,315,0.609,316,0.871,317,0.609,318,0.443,319,0.609,320,0.944,321,0.443,322,0.609,323,0.443,324,0.609,325,0.947,326,0.913,327,0.443,328,0.609,329,0.408,330,0.609,331,0.408,332,0.609,333,0.408,334,0.609,335,0.408,336,0.564,337,0.609,338,0.408,339,0.609,340,0.408,341,0.564,342,0.609,343,0.609,349,0.905,375,1.077,376,1.473,399,0.905,483,1.527,486,0.986,487,0.77,489,1.78,535,1.473,536,1.669,537,3.147,538,3.122,539,4.128,540,3.122,541,1.293,542,3.122,543,2.033,544,3.122,545,2.529,546,1.782,547,1.834,548,2.489,549,2.043,550,3.822,551,3.822,552,3.122,553,3.822,554,2.043,555,3.822,556,3.822,557,3.903,558,4.658,559,3.203,560,2.794,561,3.822,562,3.203,563,3.203,564,3.822,565,3.822,566,3.122,567,4.305,568,4.305,569,3.122,570,3.122,571,2.105,572,2.616,573,4.305,574,2.015,575,4.305,576,2.309,577,2.794,578,3.122,579,2.616,580,3.122,581,2.015,582,3.122,583,2.015,584,2.015,585,3.122,586,2.015,587,3.122,588,2.015,589,2.015,590,2.015,591,2.616,592,2.015,593,2.015,594,2.015,595,2.278,596,2.015,597,2.015,598,2.015,599,2.015,600,2.015,601,2.015,602,2.015,603,2.015,604,1.312,605,2.616,606,2.015,607,2.015,608,2.015,609,2.015,610,2.015,611,2.015,612,1.312,613,4.927,614,2.015,615,1.473,616,0.834,617,1.312,618,1.077,619,1.473,620,1.688,621,1.669,622,3.122,623,2.015,624,2.015,625,3.822,626,2.015,627,2.015,628,2.015,629,2.015,630,2.015,631,3.122,632,3.122,633,3.122,634,3.822,635,4.305,636,4.658,637,4.658,638,3.822,639,3.986,640,3.757,641,1.669,642,3.203,643,1.669,644,2.033,645,3.122,646,3.122,647,3.122,648,3.122,649,2.015,650,2.015,651,2.015,652,2.616,653,2.015,654,2.015,655,2.015,656,3.122,657,2.015,658,2.015,659,2.015,660,1.077,661,1.473,662,3.122,663,3.122,664,2.015,665,2.015,666,2.015,667,2.015,668,2.015,669,2.015,670,2.015,671,2.015,672,3.122,673,3.122,674,2.015,675,2.015,676,3.203,677,2.015,678,2.015,679,2.015,680,1.688,681,2.015,682,1.688,683,2.015,684,1.688,685,1.688,686,3.122,687,2.015,688,3.122,689,2.015,690,1.688,691,2.015,692,2.616,693,1.688,694,1.688,695,3.122,696,2.015,697,3.122,698,2.015,699,1.312,700,1.473,701,1.312,702,1.688,703,1.688,704,1.184,705,1.688,706,1.688,707,2.015,708,3.122,709,1.834,710,3.122,711,3.122,712,2.015,713,2.015,714,1.077,715,2.015,716,1.688,717,2.015,718,1.688,719,1.834,720,2.015,721,2.015,722,1.688,723,1.184,724,2.616,725,2.616,726,2.616,727,1.184,728,2.015,729,1.077,730,2.616,731,1.527,732,2.616,733,2.616,734,2.616]],["title/components/ConfirmationModalComponent.html",[256,0.176,318,0.713]],["body/components/ConfirmationModalComponent.html",[3,0.315,4,0.277,5,0.277,7,0.315,8,0.606,9,0.839,13,1.208,21,1,24,1.628,27,0.031,28,0.489,29,0.58,36,0.706,38,0.713,40,0.625,41,1.077,47,0.606,49,0.904,50,1,51,1,53,1.036,64,0.546,72,0.809,80,1.494,81,1.494,86,1.382,124,1.788,125,1.299,127,0.811,128,1.688,139,0.315,140,0.277,157,0.02,171,0.315,172,0.315,176,1.306,185,0.606,202,0.533,215,0.874,228,2.133,255,0.02,256,0.268,257,0.69,258,1.208,259,0.949,260,0.949,261,0.949,262,0.949,283,1.27,284,0.878,285,1.651,287,0.949,288,1.939,289,1.794,290,1.306,292,1.306,300,1.476,301,0.635,305,0.749,306,0.749,307,1.494,310,0.811,311,1.306,312,0.949,313,1.609,314,0.949,315,0.949,316,0.635,317,0.949,318,1.171,319,1.821,320,1.306,321,0.69,322,0.949,323,0.69,324,0.949,325,0.69,326,0.749,327,0.69,328,0.949,329,0.635,330,0.949,331,0.635,332,0.949,333,0.635,334,0.949,335,0.635,336,0.878,337,0.949,338,0.635,339,0.949,340,0.635,341,0.878,342,0.949,343,0.949,349,2.219,394,3.725,489,2.133,536,2.308,541,1.788,548,3.978,604,2.043,612,2.043,619,2.293,700,3.157,701,3.634,702,3.618,703,3.618,735,4.129,736,2.043,737,4.319,738,4.216,739,4.319,740,4.319,741,2.537,742,4.319,743,4.319,744,5.58,745,3.618,746,4.319,747,4.319,748,3.126,749,4.939,750,4.138,751,3.618,752,4.138,753,4.138,754,4.458,755,4.458,756,5.321,757,5.321,758,4.458,759,3.157,760,5.58,761,3.157,762,4.138,763,4.319,764,3.216,765,3.137,766,3.618,767,3.618,768,3.137,769,3.137,770,3.61,771,3.137,772,3.137,773,3.137,774,3.137,775,3.137,776,3.137,777,4.138,778,4.319,779,3.137,780,3.89,781,3.157,782,3.137,783,3.137,784,2.628,785,2.628,786,2.293,787,3.137,788,3.137,789,2.628,790,4.138,791,2.628,792,2.628,793,3.618,794,3.137,795,2.628,796,4.138,797,2.628,798,2.628,799,1.534,800,2.628,801,2.628,802,4.319,803,3.137,804,4.319,805,4.939,806,2.293,807,3.137]],["title/components/FooterComponent.html",[256,0.176,321,0.713]],["body/components/FooterComponent.html",[3,0.434,4,0.381,5,0.381,27,0.031,28,0.602,36,0.673,38,0.713,40,0.673,47,0.746,49,0.746,60,1.171,64,0.673,95,2.202,112,1.609,139,0.434,140,0.381,157,0.024,171,0.434,172,0.434,215,1.077,255,0.024,256,0.313,257,0.95,258,1.488,259,1.306,260,1.306,261,1.306,262,1.306,278,4.457,284,1.208,287,1.306,288,2.015,289,1.863,290,1.609,292,1.609,301,0.874,305,1.031,306,1.031,307,1.744,310,1.116,311,1.609,312,1.306,313,1.82,314,1.306,315,1.306,316,0.874,317,1.306,318,0.95,319,1.306,320,1.609,321,1.324,322,1.306,323,0.95,324,1.306,325,0.95,326,1.031,327,0.95,328,1.306,329,0.874,330,1.306,331,0.874,332,1.306,333,0.874,334,1.306,335,0.874,336,1.208,337,1.306,338,0.874,339,1.306,340,0.874,341,1.208,342,1.306,343,1.306,731,2.602,808,3.617,809,5.32,810,4.457,811,5.32,812,5.32,813,5.766,814,5.32,815,4.317,816,5.32,817,5.32,818,5.32,819,5.32]],["title/interfaces/Game.html",[64,0.41,151,0.656]],["body/interfaces/Game.html",[0,1.045,3,0.257,4,0.226,5,0.226,7,0.257,8,0.524,9,0.434,21,0.518,27,0.031,28,0.55,29,0.595,33,2.119,35,1.059,36,0.804,38,0.723,39,1.687,40,0.736,41,1.267,42,2.069,43,1.983,44,1.045,46,2.318,47,0.873,48,1.428,49,0.899,50,1.25,51,1.179,52,0.904,55,1.059,57,2.129,60,1.256,61,1.221,64,0.787,66,1.547,67,1.059,68,1.255,69,1.13,70,1.149,72,0.928,78,1.866,86,0.716,88,1.059,91,1.059,93,0.836,102,0.661,105,1.235,112,1.13,114,2.306,116,0.774,117,2.138,118,1.906,122,1.961,126,1.221,127,1.335,132,1.983,139,0.257,140,0.226,148,1.149,149,1.059,151,0.983,157,0.017,162,2.061,166,1.059,167,2.659,168,2.181,169,0.978,170,0.904,171,0.444,172,0.376,173,1.059,185,0.781,186,0.756,188,0.82,197,1.547,202,0.97,206,0.836,221,2.061,228,2.061,234,2.233,237,2.423,238,1.587,240,1.149,241,2.423,242,2.423,255,0.017,266,1.428,268,2.195,283,1.462,300,1.054,305,0.892,306,0.611,450,1.503,455,1.251,456,1.367,471,1.059,483,2.159,488,2.594,489,1.687,498,0.978,504,1.503,511,1.679,523,1.367,526,1.251,543,1.666,545,2.852,546,2.483,576,2.32,641,2.359,660,1.367,714,1.367,723,2.195,727,3.034,731,1.827,741,2.594,820,1.547,821,1.503,822,3.227,823,2.731,824,2.594,825,1.503,826,1.666,827,1.87,828,2.731,829,1.87,830,2.433,831,1.87,832,2.731,833,4.577,834,2.731,835,1.87,836,3.162,837,1.666,838,1.666,839,1.87,840,1.87,841,1.87,842,1.87,843,1.87,844,1.666,845,1.367,846,2.195,847,2.731,848,1.503,849,1.87,850,1.87,851,1.666,852,1.87,853,1.87,854,1.87,855,1.87,856,1.87,857,1.87,858,1.666,859,1.87,860,1.87,861,1.87,862,1.666,863,1.87,864,3.793,865,1.87,866,1.87,867,3.227,868,1.87,869,2.433,870,2.731,871,2.731,872,2.731,873,1.503,874,1.87,875,1.87,876,1.87,877,1.87,878,1.87,879,1.87,880,3.227,881,2.731,882,1.87,883,1.87,884,1.87,885,2.731,886,1.87,887,2.731,888,1.503,889,2.731,890,3.549,891,1.87,892,1.87,893,1.87,894,1.87,895,1.87,896,1.87,897,2.731,898,1.87,899,1.87,900,2.731,901,2.731,902,1.87,903,1.87,904,1.87,905,1.87,906,1.87,907,1.87,908,1.87,909,1.87,910,1.87,911,3.227,912,1.87,913,1.87,914,1.503,915,1.87,916,1.87,917,2.731,918,1.87,919,1.87,920,1.87,921,1.87,922,1.87]],["title/interfaces/GameAchievement.html",[57,1.239,151,0.656]],["body/interfaces/GameAchievement.html",[0,1.06,3,0.262,4,0.23,5,0.23,7,0.262,8,0.531,9,0.443,21,0.528,27,0.031,28,0.634,29,0.546,33,2.068,35,1.079,36,0.802,38,0.727,39,1.448,40,0.74,41,1.278,42,2.074,43,2.005,44,1.06,46,2.327,47,0.875,48,1.448,49,0.901,50,1.254,51,1.162,52,0.921,55,1.079,57,2.075,60,1.263,61,0.852,64,0.784,66,1.569,67,1.079,68,1.267,69,1.146,70,1.171,72,0.927,78,1.876,86,0.729,88,1.079,91,1.079,93,0.852,102,0.674,105,1.249,112,0.788,114,2.376,116,0.788,117,2.376,118,1.918,122,1.913,126,1.238,127,1.346,132,2.005,139,0.262,140,0.23,148,1.171,149,1.079,151,0.992,157,0.017,162,1.706,166,1.569,167,2.671,168,2.517,169,0.996,170,0.921,171,0.449,172,0.381,173,1.079,185,0.762,186,0.767,188,0.829,197,1.569,202,0.975,206,0.852,221,1.706,228,1.706,234,1.848,237,2.005,238,1.601,240,1.171,241,2.005,242,2.005,255,0.017,266,1.448,268,2.226,283,1.467,300,1.065,305,0.904,306,0.622,450,1.532,455,1.275,456,1.393,471,1.079,483,2.183,488,2.622,489,1.706,498,0.996,504,1.532,511,1.702,523,1.393,526,1.275,543,1.698,545,2.878,546,2.493,576,2.338,641,2.385,660,1.393,714,1.393,723,2.226,727,3.057,731,1.853,741,2.622,820,1.569,821,1.532,822,3.262,823,1.906,824,2.622,825,1.532,826,1.698,827,1.906,828,2.77,829,1.906,830,2.467,831,1.906,832,2.77,833,4.59,834,2.77,835,1.906,836,3.19,837,1.698,838,1.698,839,1.906,840,1.906,841,1.906,842,1.906,843,1.906,844,1.698,845,1.393,846,2.226,847,2.77,848,1.532,849,1.906,850,1.906,851,1.698,852,1.906,853,1.906,854,1.906,855,1.906,856,1.906,857,1.906,858,1.698,859,1.906,860,1.906,861,1.906,862,1.698,863,1.906,864,3.811,865,1.906,866,1.906,867,3.262,868,1.906,869,2.467,870,2.77,871,2.77,872,2.77,873,1.532,874,1.906,875,1.906,876,1.906,877,1.906,878,1.906,879,1.906,880,3.262,881,2.77,882,1.906,883,1.906,884,1.906,885,2.77,886,1.906,887,2.77,888,1.532,889,2.77,890,3.581,891,1.906,892,1.906,893,1.906,894,1.906,895,1.906,896,1.906,897,2.77,898,1.906,899,1.906,900,2.77,901,2.77,902,1.906,903,1.906,904,1.906,905,1.906,906,1.906,907,1.906,908,1.906,909,1.906,910,1.906,911,3.262,912,1.906,913,1.906,914,1.532,915,1.906,916,1.906,917,2.77,918,1.906,919,1.906,920,1.906,921,1.906,922,1.906]],["title/components/GameCardComponent.html",[256,0.176,323,0.713]],["body/components/GameCardComponent.html",[3,0.325,4,0.286,5,0.286,7,0.325,21,1.016,24,1.59,27,0.031,28,0.5,29,0.61,36,0.682,38,0.687,40,0.558,42,1.903,47,0.619,50,0.893,51,1.178,61,1.762,64,0.814,68,1.141,77,1.334,80,0.979,81,0.979,105,1.234,118,1.559,122,1.442,127,1.141,128,1.334,139,0.444,140,0.286,157,0.02,166,1.826,171,0.325,172,0.325,176,1.761,185,0.756,186,0.893,215,1.091,255,0.02,256,0.272,257,0.712,258,1.234,259,0.979,260,0.979,261,0.979,262,0.979,284,0.905,287,0.979,288,1.948,289,1.802,290,1.334,292,1.334,301,0.655,305,0.772,306,0.772,307,1.518,310,0.837,311,1.334,312,0.979,313,1.63,314,0.979,315,0.979,316,0.655,317,0.979,318,0.712,319,0.979,320,1.334,321,0.712,322,0.979,323,1.186,324,0.979,325,0.712,326,0.772,327,0.712,328,0.979,329,0.655,330,0.979,331,0.655,332,0.979,333,0.655,334,0.979,335,0.655,336,0.905,337,0.979,338,0.655,339,0.979,340,0.655,341,0.905,342,0.979,343,0.979,373,4.547,536,2.881,545,3.167,546,2.41,547,3.167,617,2.107,618,3.324,660,2.358,661,3.225,704,2.592,714,2.358,748,2.592,759,3.225,761,3.225,770,4.657,780,3.669,781,4.355,799,2.157,810,3.696,826,2.873,845,2.881,846,3.167,848,2.592,888,2.592,923,2.711,924,4.412,925,4.412,926,4.412,927,3.225,928,4.517,929,4.412,930,4.412,931,4.412,932,4.412,933,3.696,934,4.412,935,4.412,936,3.696,937,4.412,938,5.02,939,4.412,940,5.02,941,5.02,942,4.206,943,5.02,944,5.02,945,5.02,946,5.02,947,4.412,948,3.236,949,3.236,950,3.236,951,3.236,952,3.236,953,3.236,954,3.236,955,3.696,956,4.412,957,4.517,958,4.412,959,3.696,960,3.696,961,4.517,962,3.696,963,3.696,964,4.412,965,4.517,966,4.412]],["title/components/GameDetailModalComponent.html",[256,0.176,325,0.713]],["body/components/GameDetailModalComponent.html",[3,0.234,4,0.205,5,0.205,7,0.234,8,0.488,9,0.843,10,0.766,13,0.974,21,0.705,24,1.518,26,0.974,27,0.031,28,0.525,29,0.558,30,0.9,33,1.962,35,0.962,36,0.628,37,1.564,38,0.731,39,2.298,40,0.743,41,1.171,42,2.001,46,1.595,47,0.824,48,1.771,49,0.924,50,1.307,51,1.093,53,1.031,55,1.441,60,1.188,61,1.765,62,1.564,63,1.86,64,0.78,66,1.441,68,0.9,69,1.053,72,0.488,77,1.053,78,1.364,80,1.262,81,1.262,97,1.044,100,1.86,102,1.283,114,2.394,117,0.962,127,1.198,128,1.576,139,0.42,140,0.205,155,1.622,157,0.016,171,0.234,172,0.234,174,2.653,176,1.053,185,0.797,186,0.845,188,0.432,198,1.622,202,0.843,215,0.845,238,1.138,255,0.016,256,0.226,257,0.511,258,0.974,259,0.703,260,0.703,261,1.053,262,0.703,266,1.33,281,3.263,282,2.267,283,1.289,284,0.65,287,0.703,288,1.851,289,1.712,290,1.053,292,1.053,294,1.702,297,1.222,300,1.42,301,0.47,305,0.555,306,0.555,307,1.262,310,0.601,311,1.053,312,0.703,313,1.402,314,0.703,315,0.703,316,0.47,317,0.703,318,0.511,319,0.703,320,1.053,321,0.511,322,0.703,323,0.511,324,0.703,325,1.02,326,1.558,327,0.511,328,0.703,329,0.47,330,0.703,331,0.47,332,0.703,333,0.47,334,0.703,335,0.47,336,0.65,337,0.703,338,0.47,339,0.703,340,0.47,341,0.65,342,0.703,343,0.703,349,1.875,375,3.179,419,3.392,469,1.702,484,2.267,486,1.137,487,0.888,489,1.897,526,1.137,536,2.231,541,1.441,546,1.441,548,3.873,576,2.552,604,1.514,612,1.514,616,0.962,617,1.514,618,3.179,619,1.699,660,2.477,661,3.388,699,1.514,700,3.051,701,3.018,705,1.947,714,1.86,718,2.916,719,2.045,727,2.723,736,1.514,741,2.045,745,1.947,750,3.496,751,2.916,752,3.496,753,3.496,754,3.883,755,3.883,758,3.883,759,2.545,761,2.545,770,3.051,777,3.496,780,2.545,781,2.545,784,2.916,785,1.947,786,1.699,789,1.947,790,3.496,791,1.947,792,2.916,793,3.496,795,1.947,796,4.158,797,1.947,798,1.947,799,2.041,800,1.947,801,1.947,806,2.545,824,2.916,825,2.045,836,1.514,837,1.514,838,1.514,844,2.267,845,2.477,862,2.267,864,1.514,873,2.452,888,2.045,914,2.723,955,2.916,959,2.916,960,2.916,967,3.481,968,3.481,969,4.173,970,2.324,971,3.481,972,3.481,973,3.481,974,2.916,975,2.324,976,2.324,977,2.324,978,2.324,979,3.481,980,2.916,981,3.481,982,4.963,983,5.554,984,2.324,985,2.916,986,4.173,987,3.481,988,4.173,989,4.173,990,2.324,991,2.324,992,2.324,993,3.481,994,2.324,995,2.324,996,2.324,997,2.324,998,2.324,999,2.324,1000,2.324,1001,2.324,1002,2.324,1003,2.324,1004,2.324,1005,1.947,1006,1.365,1007,2.324,1008,4.173,1009,4.173,1010,4.173,1011,2.324,1012,2.916,1013,2.324,1014,2.324,1015,2.324,1016,2.324,1017,2.324,1018,2.324,1019,3.481,1020,3.481,1021,3.481,1022,3.481,1023,2.916]],["title/injectables/GameService.html",[0,0.907,576,1.456]],["body/injectables/GameService.html",[0,1.003,2,1.575,3,0.243,4,0.214,5,0.214,7,0.243,9,0.726,13,1.003,21,0.865,24,1.367,26,1.412,27,0.031,28,0.65,29,0.532,30,1.305,33,2.028,35,1.002,36,0.808,38,0.734,39,1.371,40,0.749,41,1.264,42,2.063,43,2.124,44,1.003,46,2.194,47,0.841,48,1.807,49,0.896,50,1.238,51,1.182,52,0.855,53,0.937,55,1.002,57,1.929,60,1.304,61,0.791,64,0.798,66,1.485,67,1.002,68,1.222,69,1.085,70,1.087,72,0.924,78,1.937,86,1.003,88,1.002,91,1.002,93,0.791,102,0.927,105,1.322,112,0.732,114,2.266,116,0.732,117,2.09,118,1.868,122,1.789,126,1.172,127,1.415,132,1.92,139,0.243,140,0.214,148,1.087,149,1.002,151,0.957,157,0.016,162,1.634,166,1.002,167,2.459,168,2.124,169,0.925,170,0.855,171,0.43,172,0.361,173,1.485,185,0.742,186,0.726,188,0.794,197,1.957,202,0.975,206,0.791,221,1.634,228,1.634,234,1.769,237,1.92,238,1.545,240,1.087,241,1.92,242,1.92,255,0.016,266,1.634,268,2.107,283,1.46,284,0.677,300,1.262,305,0.856,306,0.578,431,2.698,432,1.575,450,2.107,455,1.183,456,1.293,471,1.485,483,2.312,488,2.511,489,1.634,498,0.925,504,1.421,511,1.611,523,1.293,526,1.183,543,1.575,545,2.966,546,2.532,576,2.525,641,2.698,660,1.293,714,1.293,723,2.107,727,2.777,731,1.754,741,2.511,820,1.002,821,1.421,822,2.622,823,1.768,824,2.966,825,1.421,826,1.575,827,1.768,828,3.124,829,1.768,830,2.336,831,1.768,832,3.124,833,4.537,834,2.622,835,1.768,836,3.078,837,1.575,838,1.575,839,1.768,840,1.768,841,1.768,842,1.768,843,1.768,844,1.575,845,1.293,846,2.107,847,2.622,848,1.421,849,1.768,850,1.768,851,2.336,852,2.622,853,2.622,854,1.768,855,2.622,856,2.622,857,2.622,858,2.336,859,2.622,860,2.622,861,2.622,862,2.336,863,1.768,864,3.804,865,2.622,866,2.622,867,3.455,868,2.622,869,2.336,870,2.622,871,2.622,872,2.622,873,1.421,874,2.622,875,1.768,876,1.768,877,2.622,878,3.124,879,3.124,880,3.124,881,2.622,882,1.768,883,1.768,884,1.768,885,2.622,886,1.768,887,2.622,888,1.421,889,2.622,890,3.455,891,1.768,892,1.768,893,1.768,894,1.768,895,1.768,896,1.768,897,2.622,898,1.768,899,1.768,900,2.622,901,2.622,902,1.768,903,1.768,904,1.768,905,1.768,906,1.768,907,1.768,908,1.768,909,1.768,910,1.768,911,3.124,912,1.768,913,1.768,914,1.421,915,1.768,916,2.622,917,3.455,918,1.768,919,1.768,920,1.768,921,2.622,922,1.768,942,3.005,1024,3.586,1025,3.586,1026,3.586,1027,3.586,1028,2.419,1029,2.419,1030,2.419,1031,2.419,1032,2.419,1033,2.419]],["title/components/HeaderComponent.html",[256,0.176,327,0.713]],["body/components/HeaderComponent.html",[3,0.379,4,0.333,5,0.333,7,0.379,8,0.685,9,0.641,10,0.83,13,1.367,21,0.764,24,1.401,26,1.056,27,0.031,28,0.614,29,0.491,30,0.976,36,0.769,38,0.724,40,0.618,47,0.685,49,0.804,50,1.16,53,0.701,64,0.618,112,1.733,139,0.545,140,0.333,157,0.022,171,0.379,172,0.379,185,0.685,215,0.989,255,0.022,256,0.294,257,0.83,258,1.367,259,1.141,260,1.141,261,1.141,262,1.141,265,3.572,274,4.094,276,3.027,281,2.871,282,3.182,283,1.368,284,1.056,287,1.141,288,1.985,289,1.836,290,1.478,292,1.478,296,1.696,297,1.395,300,1.167,301,0.764,305,0.901,306,0.901,307,1.639,310,0.976,311,1.478,312,1.141,313,1.733,314,1.141,315,1.141,316,0.764,317,1.141,318,0.83,319,1.141,320,1.478,321,0.83,322,1.141,323,0.83,324,1.141,325,0.83,326,0.901,327,1.261,328,1.141,329,0.764,330,1.141,331,0.764,332,1.141,333,0.764,334,1.141,335,0.764,336,1.056,337,1.141,338,0.764,339,1.141,340,0.764,341,1.056,342,1.141,343,1.141,399,1.696,404,2.39,409,2.196,419,3.182,422,4.19,487,1.868,498,1.868,507,3.182,525,3.732,546,2.023,547,2.871,616,1.562,704,3.367,730,4.094,748,2.871,799,2.39,806,3.572,851,3.182,927,3.572,1034,3.162,1035,4.886,1036,4.886,1037,4.886,1038,4.886,1039,4.886,1040,4.886,1041,5.419,1042,4.886,1043,3.774,1044,3.774,1045,3.774,1046,3.774,1047,3.774,1048,2.759,1049,4.094,1050,4.094,1051,4.094,1052,4.094,1053,4.094,1054,4.094,1055,4.886,1056,4.094]],["title/components/HomeComponent.html",[256,0.176,329,0.656]],["body/components/HomeComponent.html",[1,2.017,3,0.309,4,0.272,5,0.272,7,0.309,8,0.598,9,1.018,10,0.938,13,1.192,21,0.863,24,1.549,26,1.192,27,0.031,28,0.704,29,0.591,30,1.102,36,0.769,37,1.915,38,0.741,47,0.598,50,0.623,51,0.863,52,1.728,53,0.908,60,0.938,64,0.539,72,0.84,77,1.289,78,1.725,79,2.371,80,1.289,81,0.931,86,1.192,95,2.185,97,2.197,105,1.476,112,1.289,128,0.931,139,0.531,140,0.272,143,0.796,144,2.278,154,1.505,157,0.019,171,0.309,172,0.309,185,0.598,186,1.068,188,1.13,195,1.382,198,1.598,201,2.278,215,0.863,255,0.019,256,0.265,257,0.677,258,1.192,259,0.931,260,0.931,261,0.931,262,0.931,265,3.115,283,1.017,284,0.861,285,1.629,286,2.197,287,0.931,288,1.934,289,1.789,290,1.289,292,1.289,295,2.371,296,1.382,297,1.262,300,1.26,301,0.623,305,0.735,306,0.735,307,1.479,310,0.796,311,1.289,312,0.931,313,1.596,314,0.931,315,0.931,316,0.623,317,0.931,318,0.677,319,0.931,320,1.289,321,0.677,322,0.931,323,0.677,324,0.931,325,0.677,326,0.735,327,0.677,328,0.931,329,1.068,330,0.931,331,0.623,332,0.931,333,0.623,334,0.931,335,0.623,336,0.861,337,0.931,338,0.623,339,0.931,340,0.623,341,0.861,342,0.931,343,0.931,404,2.084,432,2.004,537,3.115,539,3.57,541,1.764,557,2.578,560,3.574,571,2.581,577,3.858,595,2.391,615,2.249,616,1.274,620,2.578,639,3.115,640,3.574,642,2.578,748,1.808,799,2.084,824,1.808,927,4.38,936,3.57,1049,3.57,1050,3.57,1051,3.57,1057,2.578,1058,4.262,1059,4.262,1060,3.115,1061,4.262,1062,4.262,1063,4.262,1064,4.889,1065,4.262,1066,4.889,1067,4.889,1068,4.096,1069,4.262,1070,4.262,1071,4.262,1072,3.077,1073,3.077,1074,3.077,1075,3.077,1076,3.077,1077,3.077,1078,5.733,1079,4.262,1080,3.077,1081,3.077,1082,4.262,1083,3.077,1084,3.077,1085,6.321,1086,6.321,1087,4.262,1088,4.262,1089,4.262,1090,4.262,1091,4.262,1092,4.262,1093,4.262,1094,4.262,1095,3.077,1096,3.077,1097,3.077,1098,3.077,1099,3.077,1100,6.222,1101,3.077,1102,3.077,1103,3.077,1104,3.077,1105,3.077,1106,3.077,1107,4.262,1108,3.077,1109,3.077,1110,3.077,1111,3.077,1112,3.077,1113,3.077,1114,3.077,1115,5.278,1116,4.262,1117,4.262]],["title/components/LoginComponent.html",[256,0.176,331,0.656]],["body/components/LoginComponent.html",[3,0.322,4,0.283,5,0.283,7,0.322,8,0.615,9,0.986,10,1.277,13,1.226,21,0.887,24,1.587,26,0.896,27,0.031,28,0.565,29,0.584,30,0.828,36,0.554,38,0.71,40,0.711,41,0.887,44,0.896,47,0.615,49,0.753,51,0.887,53,0.927,60,1.099,64,0.554,67,1.326,72,0.753,77,1.624,80,1.51,81,1.51,112,1.325,116,1.325,139,0.584,140,0.283,143,0.828,157,0.02,171,0.322,172,0.322,185,0.753,188,0.595,202,0.744,209,1.897,215,0.887,255,0.02,256,0.271,257,0.705,258,1.226,259,0.969,260,0.969,261,0.969,262,0.969,266,2.052,276,2.906,283,1.386,284,0.896,285,1.675,286,2.244,287,0.969,288,1.945,289,1.799,290,1.325,292,1.325,295,2.412,296,1.439,297,1.277,300,1.386,301,0.648,305,0.765,306,0.765,307,1.51,310,0.828,311,1.325,312,0.969,313,1.624,314,0.969,315,0.969,316,0.648,317,0.969,318,0.705,319,0.969,320,1.325,321,0.705,322,0.969,323,0.705,324,0.969,325,0.705,326,0.765,327,0.705,328,0.969,329,0.648,330,0.969,331,1.087,332,0.969,333,0.648,334,0.969,335,0.648,336,0.896,337,0.969,338,0.648,339,0.969,340,0.648,341,0.896,342,0.969,343,0.969,392,1.712,399,1.439,404,2.442,409,2.244,411,2.839,431,3.005,469,1.567,471,2.223,486,2.143,487,2.149,498,2.219,499,2.959,508,2.086,523,1.712,524,2.086,541,1.814,546,1.326,549,2.669,554,2.669,571,2.626,595,2.442,616,1.326,621,1.712,643,1.712,709,1.882,719,2.574,729,1.712,731,1.567,1006,3.154,1118,2.684,1119,4.243,1120,4.382,1121,4.382,1122,3.671,1123,3.203,1124,3.203,1125,3.203,1126,3.203,1127,4.994,1128,4.382,1129,4.994,1130,4.994,1131,3.925,1132,3.252,1133,3.496,1134,4.382,1135,3.204,1136,3.204,1137,3.204,1138,2.934,1139,3.204,1140,3.204,1141,3.204,1142,3.204,1143,2.086,1144,2.934,1145,2.342,1146,2.086,1147,2.086,1148,3.204,1149,2.086,1150,2.853,1151,3.204,1152,3.204,1153,4.994,1154,2.086,1155,3.204,1156,3.204,1157,2.086,1158,2.086,1159,3.204,1160,2.086,1161,2.086,1162,3.496,1163,3.496,1164,4.382,1165,4.382,1166,3.671,1167,3.671,1168,3.671,1169,3.671]],["title/components/MyLibraryComponent.html",[256,0.176,333,0.656]],["body/components/MyLibraryComponent.html",[1,1.606,3,0.194,4,0.17,5,0.17,7,0.194,8,0.423,9,0.821,10,0.817,13,0.843,21,0.61,24,1.635,26,1.414,27,0.031,28,0.609,29,0.626,30,1.307,33,2.065,36,0.639,38,0.698,40,0.739,41,0.61,42,1.71,44,1.039,45,1.354,46,1.152,47,0.423,48,2.055,49,0.799,50,1.135,51,0.39,52,0.68,53,1.021,60,1.253,61,1.373,62,0.865,64,0.73,68,0.498,72,0.82,78,1.832,79,0.865,80,1.747,81,1.747,84,1.474,86,1.353,93,0.629,97,0.865,102,0.779,105,0.843,116,1.123,122,1.214,124,0.797,127,0.498,128,1.123,139,0.508,140,0.17,143,0.498,145,0.942,150,1.029,155,1.931,157,0.014,171,0.194,172,0.194,185,0.786,186,0.61,188,0.971,195,0.865,198,1.49,202,0.967,207,1.029,215,0.752,221,0.736,238,1.214,255,0.014,256,0.202,257,0.424,258,0.843,259,0.582,260,0.582,261,0.582,262,0.582,268,1.771,270,1.613,281,2.468,282,1.254,283,1.003,284,0.539,285,1.152,286,1.668,287,0.582,288,1.786,289,1.652,290,0.911,292,0.911,294,1.816,295,1.887,296,0.865,297,1.064,300,1.464,301,0.923,305,0.46,306,0.46,307,1.123,308,1.029,309,2.874,310,0.498,311,0.911,312,0.582,313,1.27,314,0.582,315,0.582,316,0.39,317,0.582,318,0.924,319,0.582,320,0.911,321,0.424,322,0.582,323,0.424,324,0.582,325,0.924,326,0.886,327,0.424,328,0.582,329,0.39,330,0.582,331,0.39,332,0.582,333,0.85,334,0.582,335,0.39,336,0.539,337,0.582,338,0.39,339,0.582,340,0.39,341,0.539,342,0.582,343,0.582,375,1.029,376,2.203,380,4.13,394,1.131,461,1.963,471,1.248,482,2.203,483,0.942,486,2.365,487,1.999,489,1.743,510,2.203,511,1.887,536,1.611,537,3.071,541,1.248,546,2.321,547,2.468,548,3.149,549,1.985,554,1.985,559,3.111,560,2.714,562,3.111,563,3.111,571,2.054,572,2.525,576,2.35,577,2.714,591,2.525,595,1.816,604,1.963,605,2.525,612,1.254,615,1.408,616,0.797,617,1.254,618,1.029,621,1.611,639,1.408,640,2.203,643,1.029,652,2.525,676,2.525,680,1.613,682,2.525,684,1.613,685,1.613,690,3.111,692,2.525,693,1.613,694,1.613,699,2.736,704,1.771,716,1.613,719,1.771,722,1.613,723,2.468,724,1.613,725,1.613,726,1.613,729,1.029,731,2.054,732,2.525,733,2.525,734,2.525,735,1.254,738,3.071,748,1.131,762,2.525,764,1.963,766,1.613,767,1.613,786,1.408,799,1.474,825,2.468,830,3.502,845,2.437,846,2.182,848,3.293,858,1.963,869,2.418,928,4.051,933,1.613,961,2.525,962,3.111,963,2.525,965,3.111,1005,3.82,1006,2.468,1012,4.505,1056,3.111,1060,1.408,1068,3.111,1168,2.525,1170,5.313,1171,1.613,1172,3.014,1173,3.713,1174,4.201,1175,3.014,1176,3.014,1177,3.014,1178,3.014,1179,3.014,1180,3.014,1181,3.713,1182,3.014,1183,3.713,1184,3.713,1185,3.713,1186,3.713,1187,3.713,1188,3.713,1189,4.201,1190,3.014,1191,3.014,1192,3.014,1193,3.014,1194,4.201,1195,3.014,1196,3.014,1197,1.926,1198,3.014,1199,1.926,1200,3.014,1201,1.926,1202,3.014,1203,1.926,1204,3.014,1205,1.926,1206,1.926,1207,1.926,1208,1.926,1209,3.014,1210,1.926,1211,1.926,1212,1.926,1213,1.926,1214,3.014,1215,1.926,1216,1.926,1217,1.926,1218,1.926,1219,1.926,1220,1.926,1221,1.926,1222,1.926,1223,1.926,1224,1.926,1225,1.926,1226,1.926,1227,1.926,1228,1.926,1229,1.613,1230,3.014,1231,3.014,1232,1.926,1233,4.201,1234,1.926,1235,4.201,1236,1.926,1237,4.201,1238,1.926,1239,1.926,1240,1.926,1241,1.926,1242,3.014,1243,3.014,1244,3.014,1245,4.201,1246,3.014,1247,3.713,1248,3.014,1249,1.613,1250,3.014,1251,1.926,1252,1.926,1253,1.926,1254,3.713,1255,1.926,1256,1.926,1257,1.926,1258,1.926,1259,1.926,1260,1.926,1261,1.926,1262,3.014,1263,4.201,1264,1.926,1265,1.926,1266,1.926,1267,1.926,1268,1.926,1269,1.926,1270,1.926,1271,1.926,1272,1.926,1273,1.926,1274,1.926,1275,1.926,1276,1.926,1277,1.926,1278,1.926,1279,1.926,1280,1.926,1281,1.926,1282,1.926,1283,1.926,1284,1.926,1285,1.926,1286,1.926,1287,1.926,1288,3.014,1289,3.014,1290,3.014,1291,3.014,1292,3.014,1293,2.203,1294,3.014,1295,3.014,1296,3.014]],["title/interfaces/RawgAchievementApi.html",[107,1.585,151,0.656]],["body/interfaces/RawgAchievementApi.html",[0,1.036,1,0.965,3,0.254,4,0.223,5,0.223,6,1.35,7,0.254,8,0.519,9,0.82,10,0.964,11,1.484,12,1.484,17,1.484,18,1.484,23,2.175,27,0.031,28,0.644,29,0.517,31,2.175,32,1.484,33,2.138,35,2.127,36,0.815,37,2.308,38,0.758,39,1.675,40,0.702,41,1.304,42,1.755,43,1.663,44,1.502,45,1.663,46,2.402,47,0.798,48,1.415,49,0.753,50,0.887,51,1.087,52,2.159,53,1.03,54,2.988,55,2.223,56,2.175,57,1.964,58,1.484,60,1.131,61,0.826,62,1.135,63,2.965,64,0.734,65,1.235,66,1.533,67,1.533,68,0.957,69,0.764,70,1.135,71,1.484,72,0.909,73,2.87,74,2.87,75,2.175,77,1.12,78,1.432,79,2.745,82,2.575,83,1.484,84,1.235,85,2.175,86,1.036,87,2.175,88,1.814,89,2.175,90,2.175,91,1.814,92,1.35,93,0.826,94,1.484,95,1.046,96,1.484,97,1.135,98,2.713,100,1.979,101,2.175,102,1.329,103,2.175,105,0.707,106,1.484,107,2.513,109,2.835,110,2.835,111,2.175,112,1.46,113,1.484,114,1.533,115,2.175,116,1.12,117,1.533,118,1.815,119,1.484,120,1.484,121,2.575,122,0.826,124,1.046,125,1.046,126,0.826,127,1.133,128,1.12,129,1.484,130,2.175,131,1.484,132,1.135,133,1.135,134,1.484,135,2.575,136,1.484,137,1.484,139,0.517,140,0.223,141,1.484,142,1.35,143,0.653,144,1.35,145,1.235,146,1.484,147,1.484,148,1.663,149,1.814,150,2.579,151,0.977,152,1.235,153,2.175,154,1.235,155,1.21,156,1.484,157,0.022,158,1.484,159,1.484,160,1.484,161,2.175,162,1.415,163,1.484,164,1.484,165,1.235,166,1.046,167,2.412,168,2.308,169,0.965,170,0.892,171,0.254,172,0.254,173,1.046,174,3.103,175,3.59,176,1.554,177,3.019,178,1.484,179,1.484,180,1.484,181,1.484,182,1.484,183,1.484,184,1.484,185,0.354,186,0.511,187,1.484,188,1.111,189,1.484,190,3.019,191,2.835,192,1.484,193,2.175,194,3.019,195,1.969,196,3.019,197,1.046,198,1.897,199,2.175,200,2.175,201,1.979,202,0.873,203,2.835,204,1.484,205,1.484,206,1.21,207,1.35,208,1.484,209,0.892,210,2.175,211,2.175,212,1.35,213,1.484,214,1.484,215,0.511,216,1.484,217,1.484,218,1.484,219,1.484,220,1.484,221,1.415,222,1.35,223,1.484,224,1.484,225,1.484,226,2.175,227,1.484,228,0.965,229,1.484,230,2.175,231,1.484,232,1.484,233,1.484,234,1.046,235,1.484,236,1.484,237,1.135,238,0.826,239,1.484,240,1.135,241,1.135,242,1.135,243,1.484,244,1.484,245,1.484,246,1.484,247,1.484,248,1.484,249,1.484,250,1.484,251,1.484,252,1.484,253,1.484,254,1.484,255,0.017,820,1.046]],["title/interfaces/RawgAchievementsApiResponse.html",[151,0.656,165,1.585]],["body/interfaces/RawgAchievementsApiResponse.html",[0,1.045,1,0.978,3,0.257,4,0.226,5,0.226,6,1.367,7,0.257,8,0.524,9,0.825,10,0.971,11,1.503,12,1.503,17,1.503,18,1.503,23,2.195,27,0.031,28,0.585,29,0.376,31,2.195,32,1.503,33,2.143,35,2.138,36,0.816,37,2.32,38,0.759,39,1.687,40,0.704,41,1.306,42,1.763,43,1.679,44,1.509,45,1.679,46,2.361,47,0.724,48,1.428,49,0.757,50,0.894,51,1.092,52,2.164,53,1.034,54,2.995,55,2.233,56,2.195,57,1.974,58,1.503,60,1.136,61,0.836,62,1.149,63,2.977,64,0.736,65,1.251,66,1.547,67,1.547,68,0.966,69,0.774,70,1.149,71,1.503,72,0.883,73,2.883,74,2.883,75,2.195,77,1.13,78,1.443,79,2.752,82,2.594,83,1.503,84,1.251,85,2.195,86,1.045,87,2.195,88,1.828,89,2.195,90,2.195,91,1.828,92,1.367,93,0.836,94,1.503,95,1.059,96,1.503,97,1.149,98,2.724,100,1.997,101,2.195,102,1.335,103,2.195,105,0.716,106,1.503,107,2.638,109,2.852,110,2.852,111,2.195,112,1.468,113,1.503,114,1.547,115,2.195,116,1.13,117,1.547,118,1.825,119,1.503,120,1.503,121,2.594,122,0.836,124,1.059,125,1.059,126,0.836,127,1.142,128,1.13,129,1.503,130,2.195,131,1.503,132,1.149,133,1.149,134,1.503,135,2.594,136,1.503,137,1.503,139,0.519,140,0.226,141,1.503,142,1.367,143,0.661,144,1.367,145,1.251,146,1.503,147,1.503,148,1.679,149,1.828,150,2.595,151,0.983,152,1.251,153,3.034,154,1.251,155,1.221,156,1.503,157,0.025,158,1.503,159,1.503,160,1.503,161,2.195,162,1.428,163,1.503,164,1.503,165,1.827,166,1.059,167,1.983,168,1.679,169,0.978,170,0.904,171,0.257,172,0.257,173,1.059,174,3.113,175,3.598,176,1.562,177,3.034,178,1.503,179,1.503,180,1.503,181,1.503,182,1.503,183,1.503,184,1.503,185,0.359,186,0.518,187,1.503,188,1.114,189,1.503,190,3.034,191,2.852,192,1.503,193,2.195,194,3.034,195,1.983,196,3.034,197,1.059,198,1.904,199,2.195,200,2.195,201,1.997,202,0.877,203,2.852,204,1.503,205,1.503,206,1.221,207,1.367,208,1.503,209,0.904,210,2.195,211,2.195,212,1.367,213,1.503,214,1.503,215,0.518,216,1.503,217,1.503,218,1.503,219,1.503,220,1.503,221,1.428,222,1.367,223,1.503,224,1.503,225,1.503,226,2.195,227,1.503,228,0.978,229,1.503,230,2.195,231,1.503,232,1.503,233,1.503,234,1.059,235,1.503,236,1.503,237,1.149,238,0.836,239,1.503,240,1.149,241,1.149,242,1.149,243,1.503,244,1.503,245,1.503,246,1.503,247,1.503,248,1.503,249,1.503,250,1.503,251,1.503,252,1.503,253,1.503,254,1.503,255,0.017,820,1.059]],["title/interfaces/RawgApiResponse.html",[151,0.656,152,1.585]],["body/interfaces/RawgApiResponse.html",[0,1.035,1,0.965,3,0.254,4,0.223,5,0.223,6,1.349,7,0.254,8,0.519,9,0.819,10,0.964,11,1.483,12,1.483,17,1.483,18,1.483,23,2.174,27,0.031,28,0.582,29,0.485,31,2.174,32,1.483,33,2.138,35,2.127,36,0.815,37,2.308,38,0.758,39,1.674,40,0.701,41,1.304,42,1.755,43,1.663,44,1.502,45,1.663,46,2.355,47,0.72,48,1.414,49,0.753,50,0.887,51,1.087,52,2.159,53,1.03,54,2.988,55,2.222,56,2.174,57,1.963,58,1.483,60,1.13,61,0.825,62,1.134,63,2.965,64,0.734,65,1.234,66,1.532,67,1.532,68,0.957,69,0.763,70,1.134,71,1.483,72,0.897,73,2.869,74,2.869,75,2.174,77,1.119,78,1.432,79,2.745,82,2.574,83,1.483,84,1.234,85,2.174,86,1.035,87,2.174,88,1.814,89,2.174,90,2.174,91,1.814,92,1.349,93,0.825,94,1.483,95,1.045,96,1.483,97,1.134,98,2.838,100,1.978,101,2.174,102,1.328,103,2.174,105,0.706,106,1.483,107,2.359,109,2.834,110,2.834,111,2.174,112,1.459,113,1.483,114,1.532,115,2.174,116,1.119,117,1.532,118,1.815,119,1.483,120,1.483,121,2.574,122,0.825,124,1.045,125,1.045,126,0.825,127,1.133,128,1.119,129,1.483,130,2.174,131,1.483,132,1.134,133,1.134,134,1.483,135,2.574,136,1.483,137,1.483,139,0.516,140,0.223,141,1.483,142,1.349,143,0.653,144,1.349,145,1.234,146,1.483,147,1.483,148,1.663,149,1.814,150,2.579,151,0.977,152,1.81,153,3.018,154,2.359,155,1.755,156,2.834,157,0.025,158,1.483,159,1.483,160,1.483,161,2.174,162,1.414,163,1.483,164,1.483,165,1.234,166,1.045,167,1.968,168,1.663,169,0.965,170,0.892,171,0.254,172,0.254,173,1.045,174,3.102,175,3.589,176,1.553,177,3.018,178,1.483,179,1.483,180,1.483,181,1.483,182,1.483,183,1.483,184,1.483,185,0.354,186,0.511,187,1.483,188,1.111,189,1.483,190,3.018,191,2.834,192,1.483,193,2.174,194,3.018,195,1.968,196,3.018,197,1.045,198,1.897,199,2.174,200,2.174,201,1.978,202,0.872,203,2.834,204,1.483,205,1.483,206,1.21,207,1.349,208,1.483,209,0.892,210,2.174,211,2.174,212,1.349,213,1.483,214,1.483,215,0.511,216,1.483,217,1.483,218,1.483,219,1.483,220,1.483,221,1.414,222,1.349,223,1.483,224,1.483,225,1.483,226,2.174,227,1.483,228,0.965,229,1.483,230,2.174,231,1.483,232,1.483,233,1.483,234,1.045,235,1.483,236,1.483,237,1.134,238,0.825,239,1.483,240,1.134,241,1.134,242,1.134,243,1.483,244,1.483,245,1.483,246,1.483,247,1.483,248,1.483,249,1.483,250,1.483,251,1.483,252,1.483,253,1.483,254,1.483,255,0.017,820,1.045]],["title/interfaces/RawgGame.html",[98,1.585,151,0.656]],["body/interfaces/RawgGame.html",[0,1.023,1,0.949,3,0.25,4,0.219,5,0.219,6,1.327,7,0.25,8,0.513,9,0.813,10,0.955,11,1.458,12,1.458,17,1.458,18,1.458,23,2.147,27,0.031,28,0.641,29,0.606,30,1.238,31,2.147,32,1.458,33,2.171,35,2.112,36,0.813,37,2.292,38,0.758,39,1.658,40,0.698,41,1.301,42,1.744,43,1.642,44,1.493,45,1.642,46,2.396,47,0.716,48,1.397,49,0.749,50,0.878,51,1.08,52,2.152,53,1.025,54,2.978,55,2.209,56,2.147,57,1.95,58,1.458,60,1.123,61,0.811,62,1.115,63,2.949,64,0.731,65,1.214,66,1.513,67,1.513,68,0.945,69,0.751,70,1.115,71,1.458,72,0.907,73,3.089,74,3.089,75,2.147,77,1.105,78,1.418,79,2.736,82,2.549,83,1.458,84,1.214,85,2.147,86,1.023,87,2.147,88,1.796,89,2.147,90,2.147,91,1.796,92,1.327,93,0.811,94,1.458,95,1.028,96,1.458,97,1.115,98,2.769,100,1.954,101,2.147,102,1.319,103,2.147,105,0.694,106,1.458,107,2.341,109,2.812,110,2.812,111,2.147,112,1.447,113,1.458,114,1.513,115,2.147,116,1.105,117,1.513,118,1.803,119,1.458,120,1.458,121,2.549,122,0.811,124,1.028,125,1.028,126,0.811,127,1.122,128,1.105,129,1.458,130,2.147,131,1.458,132,1.115,133,1.115,134,1.458,135,3.135,136,1.458,137,1.458,139,0.513,140,0.219,141,1.458,142,1.327,143,0.642,144,1.327,145,1.214,146,1.458,147,1.458,148,1.642,149,1.796,150,2.558,151,0.969,152,1.214,153,2.147,154,1.214,155,1.195,156,1.458,157,0.022,158,1.458,159,1.458,160,2.812,161,2.147,162,1.397,163,2.812,164,2.812,165,1.214,166,1.028,167,1.949,168,1.642,169,0.949,170,0.877,171,0.25,172,0.25,173,1.028,174,3.089,175,3.578,176,1.543,177,2.997,178,1.458,179,1.458,180,1.458,181,1.458,182,1.458,183,1.458,184,1.458,185,0.348,186,0.502,187,1.458,188,1.107,189,1.458,190,2.997,191,2.812,192,1.458,193,2.147,194,2.997,195,1.949,196,2.997,197,1.028,198,1.889,199,2.147,200,2.147,201,1.954,202,0.866,203,2.812,204,1.458,205,1.458,206,1.195,207,1.327,208,1.458,209,0.877,210,2.147,211,2.147,212,1.327,213,1.458,214,1.458,215,0.502,216,1.458,217,1.458,218,1.458,219,1.458,220,1.458,221,1.397,222,1.327,223,1.458,224,1.458,225,1.458,226,2.147,227,1.458,228,0.949,229,1.458,230,2.147,231,1.458,232,1.458,233,1.458,234,1.028,235,1.458,236,1.458,237,1.115,238,0.811,239,1.458,240,1.115,241,1.115,242,1.115,243,1.458,244,1.458,245,1.458,246,1.458,247,1.458,248,1.458,249,1.458,250,1.458,251,1.458,252,1.458,253,1.458,254,1.458,255,0.017,432,3.117,820,1.028]],["title/components/RecoverPasswordComponent.html",[256,0.176,335,0.656]],["body/components/RecoverPasswordComponent.html",[3,0.309,4,0.272,5,0.272,7,0.309,8,0.598,9,0.974,10,1.076,13,1.192,21,0.863,24,1.52,26,0.861,27,0.031,28,0.554,29,0.531,30,0.796,36,0.618,38,0.666,40,0.618,44,0.861,45,2.371,47,0.598,49,0.598,53,0.908,60,1.22,64,0.539,68,0.796,69,0.931,72,0.598,77,1.289,80,0.931,81,0.931,93,1.393,102,1.102,105,1.192,126,1.006,127,1.102,133,1.915,139,0.576,140,0.272,143,0.796,157,0.019,171,0.309,172,0.309,185,0.804,186,1.068,188,0.571,198,1.006,202,0.724,209,2.026,215,0.863,255,0.019,256,0.265,257,0.677,258,1.192,259,0.931,260,0.931,261,0.931,262,0.931,266,2.191,276,2.875,283,0.735,284,0.861,285,1.629,286,2.197,287,0.931,288,1.934,289,1.789,290,1.289,292,1.289,295,2.371,296,1.382,297,1.262,300,1.369,301,0.863,305,0.735,306,0.735,307,1.479,308,1.645,310,0.796,311,1.289,312,0.931,313,1.596,314,0.931,315,0.931,316,0.623,317,0.931,318,0.677,319,0.931,320,1.289,321,0.677,322,0.931,323,0.677,324,0.931,325,0.677,326,0.735,327,0.677,328,0.931,329,0.623,330,0.931,331,0.623,332,0.931,333,0.623,334,0.931,335,1.068,336,1.676,337,0.931,338,0.623,339,0.931,340,0.623,341,0.861,342,0.931,343,0.931,388,3.902,392,1.645,399,1.382,404,1.505,409,1.915,411,2.084,438,3.574,458,2.504,469,1.505,471,2.185,499,3.128,511,1.915,516,3.368,541,1.764,549,2.613,554,2.613,571,2.581,595,2.391,616,1.274,621,2.278,643,1.645,644,2.004,709,1.808,729,1.645,764,2.775,1048,2.249,1122,3.57,1123,3.115,1124,3.115,1125,3.115,1126,3.115,1131,3.858,1132,3.184,1133,3.437,1138,2.872,1143,2.775,1145,2.249,1146,2.775,1147,2.004,1149,2.004,1150,3.184,1154,2.004,1157,2.004,1158,2.004,1160,2.004,1161,2.775,1162,3.734,1163,3.734,1297,5.02,1298,2.578,1299,4.889,1300,3.57,1301,4.191,1302,3.858,1303,4.803,1304,4.262,1305,4.262,1306,4.262,1307,4.889,1308,4.262,1309,4.889,1310,4.889,1311,4.262,1312,3.077,1313,3.077,1314,3.077,1315,3.077,1316,3.077,1317,2.504,1318,2.504,1319,2.004,1320,3.077,1321,3.57,1322,3.077,1323,2.578,1324,2.249,1325,2.249,1326,3.077,1327,3.077,1328,4.889,1329,2.578,1330,3.077,1331,3.077,1332,4.262,1333,3.57,1334,3.115,1335,3.115,1336,3.115,1337,3.115,1338,3.115,1339,3.115,1340,3.115,1341,3.57,1342,3.57,1343,4.262,1344,4.262]],["title/components/RegisterComponent.html",[256,0.176,338,0.656]],["body/components/RegisterComponent.html",[3,0.274,4,0.241,5,0.241,7,0.274,8,0.549,9,0.936,10,1.007,13,1.094,21,0.792,24,1.625,26,0.762,27,0.031,28,0.518,29,0.617,30,0.704,38,0.688,40,0.632,41,1.012,44,0.762,47,0.549,49,0.743,53,0.85,60,1.007,64,0.495,65,1.912,68,0.704,69,0.824,72,0.842,77,1.667,80,1.789,81,1.789,93,1.278,102,1.183,105,1.094,116,1.183,126,1.495,127,0.704,128,0.824,133,1.757,139,0.554,140,0.241,143,0.704,157,0.018,171,0.274,172,0.274,185,0.701,186,1.012,188,0.506,198,1.634,202,0.664,209,2.121,215,0.792,255,0.018,256,0.248,257,0.599,258,1.094,259,0.824,260,0.824,261,0.824,262,0.824,266,2.294,276,2.776,283,1.355,284,0.762,285,1.495,286,2.056,287,0.824,288,1.9,289,1.758,290,1.183,292,1.183,295,2.246,296,1.224,297,1.213,300,1.316,301,0.926,305,0.65,306,0.65,307,1.384,308,1.456,310,0.704,311,1.183,312,0.824,313,1.512,314,0.824,315,0.824,316,0.551,317,0.824,318,0.599,319,0.824,320,1.183,321,0.599,322,0.824,323,0.599,324,0.824,325,0.599,326,0.65,327,0.599,328,0.824,329,0.551,330,0.824,331,0.551,332,0.824,333,0.551,334,0.824,335,0.551,336,0.762,337,0.824,338,1.012,339,0.824,340,0.551,341,0.762,342,0.824,343,0.824,392,1.456,399,1.224,404,1.332,409,1.224,410,2.859,411,2.445,431,2.672,436,2.282,457,3.256,458,2.937,459,3.256,469,1.332,471,2.07,487,1.495,489,1.749,498,2.22,499,2.695,507,3.589,508,1.774,516,3.238,524,1.774,526,1.332,541,1.619,549,2.445,554,2.445,571,2.445,595,2.237,616,1.128,621,2.09,641,2.09,643,1.456,644,1.774,709,1.6,719,2.297,729,1.456,764,2.547,980,3.276,1006,3.413,1048,1.991,1119,4.029,1123,2.859,1124,2.859,1125,2.859,1126,2.859,1131,3.655,1132,2.979,1133,3.256,1138,2.688,1143,2.547,1144,2.688,1146,2.547,1147,1.774,1149,1.774,1150,3.589,1154,1.774,1157,1.774,1158,1.774,1160,1.774,1161,1.774,1162,3.909,1163,3.909,1166,3.276,1167,4.189,1169,3.276,1293,2.859,1300,3.276,1301,3.655,1302,2.859,1303,3.276,1317,2.297,1318,2.297,1319,1.774,1321,4.436,1323,2.282,1324,1.991,1325,1.991,1329,3.833,1333,3.276,1334,3.655,1335,2.859,1336,2.859,1337,2.859,1338,2.859,1339,2.859,1340,2.859,1341,3.276,1342,3.276,1345,2.282,1346,3.91,1347,3.91,1348,3.91,1349,3.91,1350,3.91,1351,4.575,1352,3.91,1353,4.575,1354,4.575,1355,3.91,1356,2.724,1357,2.724,1358,2.724,1359,2.724,1360,2.724,1361,2.724,1362,2.724,1363,2.724,1364,2.724,1365,2.724,1366,2.724,1367,2.724,1368,2.724,1369,1.774,1370,2.724,1371,2.282,1372,2.724,1373,2.724,1374,2.282,1375,2.724,1376,2.282,1377,2.724,1378,2.724,1379,2.724,1380,2.724,1381,4.575,1382,2.724,1383,2.724,1384,4.189,1385,3.276,1386,3.276,1387,3.276,1388,2.859,1389,3.276]],["title/interfaces/User.html",[151,0.656,301,0.656]],["body/interfaces/User.html",[0,1.23,3,0.324,4,0.284,5,0.284,7,0.324,8,0.617,9,0.547,10,0.708,21,0.651,27,0.031,29,0.584,36,0.407,38,0.686,40,0.556,41,0.89,49,0.755,51,0.651,54,2.15,68,0.832,69,0.973,72,0.934,86,0.9,118,1.99,122,1.758,125,1.82,126,1.636,139,0.442,140,0.284,143,0.832,151,0.651,155,1.437,157,0.02,169,1.23,170,1.137,171,0.442,172,0.324,176,0.973,185,0.451,188,1.154,202,1.065,206,1.758,209,1.137,255,0.02,283,1.483,294,2.754,297,0.708,300,1.049,301,1.226,309,1.72,409,1.446,411,2.91,418,2.096,419,3.26,420,2.696,421,2.696,422,2.353,423,2.696,426,2.696,429,2.696,431,3.283,434,2.696,438,3.213,440,4.194,441,2.696,442,3.683,444,4.194,445,4.194,449,2.696,450,1.891,451,2.096,452,2.353,453,2.096,454,2.353,455,1.574,456,1.72,457,3.667,458,3.415,459,3.667,460,4.116,461,3.667,462,4.194,463,2.696,464,3.683,465,2.696,466,2.696,467,2.696,468,2.696,469,1.574,470,2.696,471,1.332,472,2.696,473,2.696,474,4.507,475,2.696,476,2.696,477,2.696,478,2.696,479,2.696,480,2.353,481,2.696,482,2.353,483,1.574,484,2.096,485,2.696,486,2.15,487,1.68,488,3.74,489,2.417,490,4.507,491,4.507,492,2.696,493,4.507,494,2.696,495,4.194,496,2.696,497,2.696,498,2.056,499,2.15,500,2.696,501,2.696,502,3.683,503,2.696,504,2.582,505,2.696,506,4.194,507,2.096,508,2.096,509,2.696,510,2.353,511,1.975,512,2.696,513,4.507,514,3.683,515,2.696,516,2.582,517,3.683,518,2.696,519,3.683,520,2.696,521,3.683,522,2.696,523,2.349,524,2.096,525,2.862,526,2.15,527,2.696,528,4.194,529,2.696,530,3.683,531,2.696,532,2.696,533,2.696,534,2.696,820,1.332]],["title/components/UserProfileComponent.html",[256,0.176,340,0.656]],["body/components/UserProfileComponent.html",[3,0.274,4,0.241,5,0.241,7,0.274,8,0.549,9,0.936,10,1.007,13,1.095,21,0.792,24,1.53,26,1.095,27,0.031,28,0.566,29,0.554,30,1.012,36,0.579,38,0.707,40,0.67,41,1.013,44,0.763,45,1.759,47,0.549,49,0.549,50,1.15,51,0.792,53,0.929,60,1.213,64,0.495,65,1.914,72,0.549,80,1.184,81,1.385,93,1.279,102,0.705,116,1.184,133,1.759,139,0.554,140,0.241,143,0.705,155,1.635,157,0.018,171,0.274,172,0.274,185,0.861,186,1.15,188,0.727,198,1.279,202,0.665,206,0.891,209,2.122,215,1.013,255,0.018,256,0.248,257,0.6,258,1.095,259,0.825,260,0.825,261,0.825,262,0.825,266,2.347,276,2.778,281,2.69,283,1.5,284,0.763,285,1.496,286,2.057,287,0.825,288,1.901,289,1.758,290,1.184,292,1.184,294,2.239,295,2.248,296,1.225,297,1.213,300,1.387,301,1.292,305,0.651,306,0.651,307,1.385,308,1.458,309,2.092,310,0.705,311,1.184,312,0.825,313,1.513,314,0.825,315,0.825,316,0.552,317,0.825,318,0.6,319,0.825,320,1.184,321,0.6,322,0.825,323,0.6,324,0.825,325,0.6,326,0.651,327,0.6,328,0.825,329,0.552,330,0.825,331,0.552,332,0.825,333,0.552,334,0.825,335,0.552,336,0.763,337,0.825,338,0.552,339,0.825,340,1.013,341,1.281,342,0.825,343,0.825,385,3.91,392,1.458,399,1.225,404,1.334,409,1.759,411,1.914,431,2.092,457,2.549,458,2.3,459,2.549,460,1.994,469,1.334,484,1.776,487,1.496,498,2.295,499,2.446,511,2.057,516,3.239,525,3.853,536,2.092,541,1.62,547,2.3,549,2.447,554,2.447,571,2.446,595,2.239,616,1.129,621,2.092,641,2.447,643,1.458,644,1.776,699,1.776,701,1.776,704,2.3,709,1.602,729,1.458,799,1.914,873,2.3,914,1.602,974,3.279,985,3.836,1006,2.939,1023,2.285,1052,2.285,1053,3.279,1060,2.861,1119,2.861,1132,2.981,1133,3.258,1138,2.69,1143,1.776,1144,2.69,1145,1.994,1146,3.258,1147,2.549,1149,1.776,1150,3.45,1154,1.776,1157,1.776,1158,1.776,1160,1.776,1161,2.549,1162,3.91,1163,3.91,1229,2.285,1249,2.285,1293,2.861,1301,2.861,1302,2.861,1317,2.3,1318,2.3,1324,1.994,1325,1.994,1334,3.657,1335,2.861,1336,2.861,1337,2.861,1338,2.861,1339,2.861,1340,2.861,1369,1.776,1371,3.279,1374,2.285,1376,2.285,1384,4.191,1385,3.279,1386,3.279,1387,3.279,1388,2.861,1389,3.279,1390,5.031,1391,2.285,1392,3.914,1393,3.914,1394,3.914,1395,4.578,1396,3.914,1397,4.578,1398,4.578,1399,5.003,1400,3.914,1401,3.914,1402,2.727,1403,3.914,1404,2.727,1405,2.727,1406,2.727,1407,2.727,1408,2.727,1409,2.727,1410,2.727,1411,2.727,1412,2.727,1413,2.727,1414,2.727,1415,2.727,1416,2.727,1417,2.727,1418,2.727,1419,2.727,1420,5.003,1421,3.914,1422,2.727,1423,2.727,1424,2.727,1425,2.727,1426,2.727,1427,2.727,1428,2.727,1429,2.727,1430,2.727,1431,2.727,1432,3.914,1433,3.914,1434,3.914,1435,3.914]],["title/coverage.html",[1436,3.7]],["body/coverage.html",[0,1.566,1,1.545,5,0.357,6,3.241,27,0.031,29,0.406,57,1.545,64,0.511,92,2.161,98,1.977,107,1.977,151,1.273,152,1.977,157,0.023,165,1.977,176,1.223,238,2.183,255,0.023,256,0.357,257,0.89,263,3.387,297,0.89,301,0.818,316,0.818,318,0.89,321,0.89,323,0.89,325,0.89,326,1.404,327,0.89,329,0.818,331,0.818,333,0.818,335,0.818,338,0.818,340,0.818,349,2.515,373,2.955,375,2.729,380,2.633,385,2.633,388,2.633,394,3,400,2.955,418,3.949,451,2.633,453,2.633,455,2.497,480,2.955,535,3.733,576,1.816,618,2.992,735,3.325,736,3.829,808,3.387,821,3.455,923,3.387,957,3.387,1034,3.387,1057,3.387,1118,3.387,1144,2.375,1170,3.387,1171,3.387,1297,3.387,1298,3.387,1317,2.375,1318,2.375,1319,2.633,1345,3.387,1369,2.633,1390,3.387,1391,3.387,1436,3.387,1437,4.043,1438,4.043,1439,4.043,1440,4.043,1441,4.043,1442,4.043,1443,4.043,1444,4.043,1445,4.043,1446,4.043,1447,4.043,1448,4.043,1449,6.362,1450,6.569,1451,5.106,1452,5.106,1453,3.387,1454,4.043,1455,4.278,1456,4.043,1457,4.043,1458,5.597,1459,5.597,1460,4.043,1461,4.043,1462,4.043,1463,4.043,1464,4.043,1465,3.387,1466,3.387,1467,4.043,1468,4.043,1469,4.043,1470,4.043,1471,4.043,1472,4.043,1473,5.08,1474,6.064,1475,4.043,1476,4.043]],["title/dependencies.html",[347,2.537,1477,1.981]],["body/dependencies.html",[27,0.031,140,0.441,143,1.292,157,0.027,255,0.027,347,3.253,349,2.244,365,4.864,366,4.244,392,2.669,399,2.244,1478,4.995,1479,6.61,1480,4.995,1481,4.995,1482,4.995,1483,4.995,1484,4.995,1485,4.995,1486,4.995,1487,4.995,1488,4.995,1489,4.995,1490,4.995,1491,4.995,1492,4.995,1493,4.995]],["title/miscellaneous/functions.html",[1494,1.765,1495,3.264]],["body/miscellaneous/functions.html",[7,0.471,26,1.565,27,0.03,28,0.633,29,0.562,30,1.446,33,1.976,36,0.756,38,0.677,41,0.949,47,0.784,49,0.784,50,1.132,53,1.175,72,0.868,77,1.913,125,2.618,127,1.212,128,1.418,157,0.026,255,0.026,271,3.928,498,2.138,499,2.735,738,3.427,1138,2.754,1144,3.512,1317,3.512,1318,3.512,1319,3.642,1369,3.642,1473,3.928,1494,3.053,1495,3.928,1496,6.325,1497,6.325,1498,6.325,1499,4.688,1500,4.688,1501,4.688,1502,4.688,1503,4.688,1504,4.688,1505,5.593,1506,4.688,1507,5.593,1508,4.688]],["title/index.html",[7,0.272,1509,2.71,1510,2.71]],["body/index.html",[4,0.414,27,0.026,28,0.531,157,0.026,162,1.792,176,1.418,255,0.026,256,0.324,285,1.792,302,5.008,360,3.427,1477,3.427,1511,4.688,1512,5.593,1513,4.688,1514,5.977,1515,3.928,1516,4.688,1517,4.688,1518,5.593,1519,6.325,1520,6.487,1521,4.688,1522,4.688,1523,4.688,1524,4.688,1525,4.688,1526,4.688,1527,4.688,1528,4.688,1529,4.688,1530,4.688,1531,4.688,1532,5.977,1533,5.977,1534,4.688,1535,6.19,1536,4.688,1537,4.688,1538,4.688,1539,4.688,1540,5.593,1541,5.593,1542,6.19,1543,4.688,1544,5.593,1545,5.593,1546,4.688,1547,6.418,1548,4.688,1549,4.688,1550,5.593,1551,4.688,1552,4.688,1553,4.688,1554,4.688,1555,4.688,1556,4.688,1557,5.977,1558,4.688,1559,4.688,1560,4.688,1561,3.427,1562,4.688,1563,4.688]],["title/modules.html",[346,2.595]],["body/modules.html",[27,0.027,157,0.027,255,0.027,345,3.402,346,3.069,357,3.069,366,3.819,1564,5.224,1565,5.224,1566,5.957,1567,5.224,1568,5.224]],["title/overview.html",[1561,3.228]],["body/overview.html",[2,2.976,27,0.031,157,0.025,255,0.025,257,1.42,258,1.279,297,1.301,310,1.182,316,1.197,318,1.301,321,1.301,323,1.301,325,1.301,327,1.301,329,1.197,331,1.197,333,1.197,335,1.197,338,1.197,340,1.197,344,2.976,345,4.443,346,2.685,347,2.976,348,3.829,349,2.054,350,3.829,351,3.341,352,3.829,353,3.829,354,3.829,355,3.829,356,3.829,357,3.474,358,4.615,359,3.829,360,3.341,398,2.976,820,1.892,1388,3.341,1453,3.829,1455,3.829,1466,3.829,1561,3.341,1569,4.571]],["title/properties.html",[8,0.546,1477,1.981]],["body/properties.html",[8,0.738,27,0.029,157,0.027,255,0.027,1515,4.41,1570,5.264]],["title/routes.html",[398,2.876]],["body/routes.html",[27,0.027,157,0.027,255,0.027,398,3.441]],["title/miscellaneous/variables.html",[1494,1.765,1571,3.264]],["body/miscellaneous/variables.html",[7,0.453,27,0.031,29,0.653,40,0.569,72,0.857,80,1.892,81,1.892,95,2.26,124,2.26,157,0.025,188,1.134,202,0.927,206,1.472,222,2.406,255,0.025,276,2.202,297,0.991,301,0.911,326,1.402,349,2.857,375,2.406,394,2.645,400,3.99,418,2.932,451,3.554,452,3.291,453,3.554,454,3.291,455,2.986,456,2.917,461,3.554,486,2.202,487,1.721,535,3.291,579,3.772,618,2.406,706,3.772,735,2.932,736,3.977,821,2.645,1054,3.772,1465,3.772,1494,2.932,1571,3.772,1572,5.874,1573,4.502,1574,4.502,1575,4.502,1576,4.502,1577,4.502,1578,4.502,1579,4.502,1580,4.502,1581,4.502,1582,4.502,1583,4.502,1584,4.502,1585,4.502,1586,4.502,1587,4.502,1588,4.502,1589,4.502,1590,5.458,1591,4.502,1592,4.502]]],"invertedIndex":[["",{"_index":27,"title":{},"body":{"injectables/ApiService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthService.html":{},"components/CategoryComponent.html":{},"components/ConfirmationModalComponent.html":{},"components/FooterComponent.html":{},"interfaces/Game.html":{},"interfaces/GameAchievement.html":{},"components/GameCardComponent.html":{},"components/GameDetailModalComponent.html":{},"injectables/GameService.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/MyLibraryComponent.html":{},"interfaces/RawgAchievementApi.html":{},"interfaces/RawgAchievementsApiResponse.html":{},"interfaces/RawgApiResponse.html":{},"interfaces/RawgGame.html":{},"components/RecoverPasswordComponent.html":{},"components/RegisterComponent.html":{},"interfaces/User.html":{},"components/UserProfileComponent.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":238,"title":{},"body":{"injectables/ApiService.html":{},"components/CategoryComponent.html":{},"interfaces/Game.html":{},"interfaces/GameAchievement.html":{},"components/GameDetailModalComponent.html":{},"injectables/GameService.html":{},"components/MyLibraryComponent.html":{},"interfaces/RawgAchievementApi.html":{},"interfaces/RawgAchievementsApiResponse.html":{},"interfaces/RawgApiResponse.html":{},"interfaces/RawgGame.html":{},"coverage.html":{}}}],["0.0.0",{"_index":1570,"title":{},"body":{"properties.html":{}}}],["0.13.0",{"_index":1493,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":1450,"title":{},"body":{"coverage.html":{}}}],["0/10",{"_index":1447,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":1444,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":1445,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":1443,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":1448,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":1446,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":516,"title":{},"body":{"injectables/AuthService.html":{},"components/RecoverPasswordComponent.html":{},"components/RegisterComponent.html":{},"interfaces/User.html":{},"components/UserProfileComponent.html":{}}}],["1/1",{"_index":1468,"title":{},"body":{"coverage.html":{}}}],["1/10",{"_index":1459,"title":{},"body":{"coverage.html":{}}}],["1/11",{"_index":1454,"title":{},"body":{"coverage.html":{}}}],["1/13",{"_index":1467,"title":{},"body":{"coverage.html":{}}}],["1/16",{"_index":1464,"title":{},"body":{"coverage.html":{}}}],["1/27",{"_index":1456,"title":{},"body":{"coverage.html":{}}}],["1/28",{"_index":1460,"title":{},"body":{"coverage.html":{}}}],["1/4",{"_index":1472,"title":{},"body":{"coverage.html":{}}}],["1/5",{"_index":1440,"title":{},"body":{"coverage.html":{}}}],["1/7",{"_index":1452,"title":{},"body":{"coverage.html":{}}}],["1/8",{"_index":1462,"title":{},"body":{"coverage.html":{}}}],["1/9",{"_index":1457,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":1458,"title":{},"body":{"coverage.html":{}}}],["100",{"_index":957,"title":{},"body":{"components/GameCardComponent.html":{},"coverage.html":{}}}],["1000",{"_index":1160,"title":{},"body":{"components/LoginComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/RegisterComponent.html":{},"components/UserProfileComponent.html":{}}}],["101",{"_index":895,"title":{},"body":{"interfaces/Game.html":{},"interfaces/GameAchievement.html":{},"injectables/GameService.html":{}}}],["102",{"_index":898,"title":{},"body":{"interfaces/Game.html":{},"interfaces/GameAchievement.html":{},"injectables/GameService.html":{}}}],["11",{"_index":480,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/User.html":{},"coverage.html":{}}}],["12",{"_index":1461,"title":{},"body":{"coverage.html":{}}}],["13",{"_index":1388,"title":{},"body":{"components/RegisterComponent.html":{},"components/UserProfileComponent.html":{},"overview.html":{}}}],["14",{"_index":1451,"title":{},"body":{"coverage.html":{}}}],["150",{"_index":230,"title":{},"body":{"injectables/ApiService.html":{},"interfaces/RawgAchievementApi.html":{},"interfaces/RawgAchievementsApiResponse.html":{},"interfaces/RawgApiResponse.html":{},"interfaces/RawgGame.html":{}}}],["16.2.0",{"_index":1479,"title":{},"body":{"dependencies.html":{}}}],["16.2.14",{"_index":1483,"title":{},"body":{"dependencies.html":{}}}],["16.2.16",{"_index":1516,"title":{},"body":{"index.html":{}}}],["17",{"_index":481,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/User.html":{}}}],["1997",{"_index":479,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/User.html":{}}}],["2",{"_index":1569,"title":{},"body":{"overview.html":{}}}],["2.3.0",{"_index":1491,"title":{},"body":{"dependencies.html":{}}}],["20",{"_index":92,"title":{},"body":{"injectables/ApiService.html":{},"interfaces/RawgAchievementApi.html":{},"interfaces/RawgAchievementsApiResponse.html":{},"interfaces/RawgApiResponse.html":{},"interfaces/RawgGame.html":{},"coverage.html":{}}}],["2025",{"_index":816,"title":{},"body":{"components/FooterComponent.html":{}}}],["25",{"_index":1471,"title":{},"body":{"coverage.html":{}}}],["3",{"_index":1455,"title":{},"body":{"coverage.html":{},"overview.html":{}}}],["33",{"_index":1469,"title":{},"body":{"coverage.html":{}}}],["4/12",{"_index":1470,"title":{},"body":{"coverage.html":{}}}],["404",{"_index":415,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["5.3.6",{"_index":1488,"title":{},"body":{"dependencies.html":{}}}],["6",{"_index":1463,"title":{},"body":{"coverage.html":{}}}],["6.7.2",{"_index":1487,"title":{},"body":{"dependencies.html":{}}}],["63",{"_index":1441,"title":{},"body":{"coverage.html":{}}}],["7",{"_index":1466,"title":{},"body":{"coverage.html":{},"overview.html":{}}}],["7.8.0",{"_index":1489,"title":{},"body":{"dependencies.html":{}}}],["7/11",{"_index":1442,"title":{},"body":{"coverage.html":{}}}],["8",{"_index":1336,"title":{},"body":{"components/RecoverPasswordComponent.html":{},"components/RegisterComponent.html":{},"components/UserProfileComponent.html":{}}}],["9",{"_index":1453,"title":{},"body":{"coverage.html":{},"overview.html":{}}}],["_saveusergames",{"_index":1024,"title":{},"body":{"injectables/GameService.html":{}}}],["_saveusergames(username",{"_index":874,"title":{},"body":{"interfaces/Game.html":{},"interfaces/GameAchievement.html":{},"injectables/GameService.html":{}}}],["a.localecompare(b",{"_index":673,"title":{},"body":{"components/CategoryComponent.html":{}}}],["abre",{"_index":716,"title":{},"body":{"components/CategoryComponent.html":{},"components/MyLibraryComponent.html":{}}}],["acceder",{"_index":1590,"title":{},"body":{"miscellaneous/variables.html":{}}}],["acceso",{"_index":1432,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["accessors",{"_index":425,"title":{},"body":{"injectables/AuthService.html":{}}}],["accion",{"_index":1102,"title":{},"body":{"components/HomeComponent.html":{}}}],["acción",{"_index":748,"title":{},"body":{"components/ConfirmationModalComponent.html":{},"components/GameCardComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/MyLibraryComponent.html":{}}}],["ach",{"_index":894,"title":{},"body":{"interfaces/Game.html":{},"interfaces/GameAchievement.html":{},"injectables/GameService.html":{}}}],["achievement",{"_index":827,"title":{},"body":{"interfaces/Game.html":{},"interfaces/GameAchievement.html":{},"injectables/GameService.html":{}}}],["achievement.name",{"_index":1022,"title":{},"body":{"components/GameDetailModalComponent.html":{}}}],["achievementindex",{"_index":982,"title":{},"body":{"components/GameDetailModalComponent.html":{}}}],["achievements",{"_index":221,"title":{},"body":{"injectables/ApiService.html":{},"components/CategoryComponent.html":{},"interfaces/Game.html":{},"interfaces/GameAchievement.html":{},"injectables/GameService.html":{},"components/MyLibraryComponent.html":{},"interfaces/RawgAchievementApi.html":{},"interfaces/RawgAchievementsApiResponse.html":{},"interfaces/RawgApiResponse.html":{},"interfaces/RawgGame.html":{}}}],["achievements_count",{"_index":164,"title":{},"body":{"injectables/ApiService.html":{},"interfaces/RawgAchievementApi.html":{},"interfaces/RawgAchievementsApiResponse.html":{},"interfaces/RawgApiResponse.html":{},"interfaces/RawgGame.html":{}}}],["achievementupdated",{"_index":969,"title":{},"body":{"components/GameDetailModalComponent.html":{}}}],["action",{"_index":1101,"title":{},"body":{"components/HomeComponent.html":{}}}],["activatedroute",{"_index":575,"title":{},"body":{"components/CategoryComponent.html":{}}}],["actual",{"_index":484,"title":{},"body":{"injectables/AuthService.html":{},"components/GameDetailModalComponent.html":{},"interfaces/User.html":{},"components/UserProfileComponent.html":{}}}],["actual_component",{"_index":343,"title":{},"body":{"components/AppComponent.html":{},"components/CategoryComponent.html":{},"components/ConfirmationModalComponent.html":{},"components/FooterComponent.html":{},"components/GameCardComponent.html":{},"components/GameDetailModalComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/MyLibraryComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/RegisterComponent.html":{},"components/UserProfileComponent.html":{}}}],["actualiza",{"_index":914,"title":{},"body":{"interfaces/Game.html":{},"interfaces/GameAchievement.html":{},"components/GameDetailModalComponent.html":{},"injectables/GameService.html":{},"components/UserProfileComponent.html":{}}}],["actualización",{"_index":1249,"title":{},"body":{"components/MyLibraryComponent.html":{},"components/UserProfileComponent.html":{}}}],["actualizada",{"_index":522,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/User.html":{}}}],["actualizado",{"_index":532,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/User.html":{}}}],["actualizar",{"_index":511,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Game.html":{},"interfaces/GameAchievement.html":{},"injectables/GameService.html":{},"components/MyLibraryComponent.html":{},"components/RecoverPasswordComponent.html":{},"interfaces/User.html":{},"components/UserProfileComponent.html":{}}}],["actúa",{"_index":267,"title":{},"body":{"components/AppComponent.html":{}}}],["add",{"_index":1553,"title":{},"body":{"index.html":{}}}],["addgame",{"_index":1025,"title":{},"body":{"injectables/GameService.html":{}}}],["addgame(username",{"_index":877,"title":{},"body":{"interfaces/Game.html":{},"interfaces/GameAchievement.html":{},"injectables/GameService.html":{}}}],["addgametolibrary",{"_index":941,"title":{},"body":{"components/GameCardComponent.html":{}}}],["adicionales",{"_index":935,"title":{},"body":{"components/GameCardComponent.html":{}}}],["admin",{"_index":461,"title":{},"body":{"injectables/AuthService.html":{},"components/MyLibraryComponent.html":{},"interfaces/User.html":{},"miscellaneous/variables.html":{}}}],["admin123",{"_index":482,"title":{},"body":{"injectables/AuthService.html":{},"components/MyLibraryComponent.html":{},"interfaces/User.html":{}}}],["administradores",{"_index":1588,"title":{},"body":{"miscellaneous/variables.html":{}}}],["adventure",{"_index":1103,"title":{},"body":{"components/HomeComponent.html":{}}}],["afterviewinit",{"_index":749,"title":{},"body":{"components/ConfirmationModalComponent.html":{}}}],["ahora",{"_index":509,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/User.html":{}}}],["ajustar",{"_index":1290,"title":{},"body":{"components/MyLibraryComponent.html":{}}}],["al",{"_index":186,"title":{},"body":{"injectables/ApiService.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/CategoryComponent.html":{},"interfaces/Game.html":{},"interfaces/GameAchievement.html":{},"components/GameCardComponent.html":{},"components/GameDetailModalComponent.html":{},"injectables/GameService.html":{},"components/HomeComponent.html":{},"components/MyLibraryComponent.html":{},"interfaces/RawgAchievementApi.html":{},"interfaces/RawgAchievementsApiResponse.html":{},"interfaces/RawgApiResponse.html":{},"interfaces/RawgGame.html":{},"components/RecoverPasswordComponent.html":{},"components/RegisterComponent.html":{},"components/UserProfileComponent.html":{}}}],["alert('acceso",{"_index":1586,"title":{},"body":{"miscellaneous/variables.html":{}}}],["alert('debes",{"_index":706,"title":{},"body":{"components/CategoryComponent.html":{},"miscellaneous/variables.html":{}}}],["alert('error",{"_index":642,"title":{},"body":{"components/CategoryComponent.html":{},"components/HomeComponent.html":{}}}],["alert(result.message",{"_index":711,"title":{},"body":{"components/CategoryComponent.html":{}}}],["algunos",{"_index":470,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/User.html":{}}}],["allgames",{"_index":553,"title":{},"body":{"components/CategoryComponent.html":{}}}],["allusergames",{"_index":869,"title":{},"body":{"interfaces/Game.html":{},"interfaces/GameAchievement.html":{},"injectables/GameService.html":{},"components/MyLibraryComponent.html":{}}}],["allusergames[username",{"_index":872,"title":{},"body":{"interfaces/Game.html":{},"interfaces/GameAchievement.html":{},"injectables/GameService.html":{}}}],["almacena",{"_index":1264,"title":{},"body":{"components/MyLibraryComponent.html":{}}}],["almacenamiento",{"_index":450,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Game.html":{},"interfaces/GameAchievement.html":{},"injectables/GameService.html":{},"interfaces/User.html":{}}}],["alreadyexists",{"_index":885,"title":{},"body":{"interfaces/Game.html":{},"interfaces/GameAchievement.html":{},"injectables/GameService.html":{}}}],["alt",{"_index":1092,"title":{},"body":{"components/HomeComponent.html":{}}}],["angular",{"_index":302,"title":{},"body":{"components/AppComponent.html":{},"index.html":{}}}],["angular/animations",{"_index":1478,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":1480,"title":{},"body":{"dependencies.html":{}}}],["angular/common/http",{"_index":142,"title":{},"body":{"injectables/ApiService.html":{},"modules/AppModule.html":{},"interfaces/RawgAchievementApi.html":{},"interfaces/RawgAchievementsApiResponse.html":{},"interfaces/RawgApiResponse.html":{},"interfaces/RawgGame.html":{}}}],["angular/compiler",{"_index":1481,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":140,"title":{},"body":{"injectables/ApiService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthService.html":{},"components/CategoryComponent.html":{},"components/ConfirmationModalComponent.html":{},"components/FooterComponent.html":{},"interfaces/Game.html":{},"interfaces/GameAchievement.html":{},"components/GameCardComponent.html":{},"components/GameDetailModalComponent.html":{},"injectables/GameService.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/MyLibraryComponent.html":{},"interfaces/RawgAchievementApi.html":{},"interfaces/RawgAchievementsApiResponse.html":{},"interfaces/RawgApiResponse.html":{},"interfaces/RawgGame.html":{},"components/RecoverPasswordComponent.html":{},"components/RegisterComponent.html":{},"interfaces/User.html":{},"components/UserProfileComponent.html":{},"dependencies.html":{}}}],["angular/forms",{"_index":392,"title":{},"body":{"modules/AppModule.html":{},"components/LoginComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/RegisterComponent.html":{},"components/UserProfileComponent.html":{},"dependencies.html":{}}}],["angular/material",{"_index":1482,"title":{},"body":{"dependencies.html":{}}}],["angular/platform",{"_index":365,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/router",{"_index":399,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/CategoryComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/RegisterComponent.html":{},"components/UserProfileComponent.html":{},"dependencies.html":{}}}],["antes",{"_index":973,"title":{},"body":{"components/GameDetailModalComponent.html":{}}}],["api",{"_index":79,"title":{},"body":{"injectables/ApiService.html":{},"components/CategoryComponent.html":{},"components/HomeComponent.html":{},"components/MyLibraryComponent.html":{},"interfaces/RawgAchievementApi.html":{},"interfaces/RawgAchievementsApiResponse.html":{},"interfaces/RawgApiResponse.html":{},"interfaces/RawgGame.html":{}}}],["api_key",{"_index":11,"title":{},"body":{"injectables/ApiService.html":{},"interfaces/RawgAchievementApi.html":{},"interfaces/RawgAchievementsApiResponse.html":{},"interfaces/RawgApiResponse.html":{},"interfaces/RawgGame.html":{}}}],["apiservice",{"_index":1,"title":{"injectables/ApiService.html":{}},"body":{"injectables/ApiService.html":{},"components/CategoryComponent.html":{},"components/HomeComponent.html":{},"components/MyLibraryComponent.html":{},"interfaces/RawgAchievementApi.html":{},"interfaces/RawgAchievementsApiResponse.html":{},"interfaces/RawgApiResponse.html":{},"interfaces/RawgGame.html":{},"coverage.html":{}}}],["aplica",{"_index":1508,"title":{},"body":{"miscellaneous/functions.html":{}}}],["aplicación",{"_index":112,"title":{},"body":{"injectables/ApiService.html":{},"components/AppComponent.html":{},"components/FooterComponent.html":{},"interfaces/Game.html":{},"interfaces/GameAchievement.html":{},"injectables/GameService.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"interfaces/RawgAchievementApi.html":{},"interfaces/RawgAchievementsApiResponse.html":{},"interfaces/RawgApiResponse.html":{},"interfaces/RawgGame.html":{}}}],["aplicados",{"_index":734,"title":{},"body":{"components/CategoryComponent.html":{},"components/MyLibraryComponent.html":{}}}],["app",{"_index":289,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CategoryComponent.html":{},"components/ConfirmationModalComponent.html":{},"components/FooterComponent.html":{},"components/GameCardComponent.html":{},"components/GameDetailModalComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/MyLibraryComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/RegisterComponent.html":{},"components/UserProfileComponent.html":{}}}],["app.component",{"_index":369,"title":{},"body":{"modules/AppModule.html":{}}}],["app.component.css",{"_index":291,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.html",{"_index":293,"title":{},"body":{"components/AppComponent.html":{}}}],["appcomponent",{"_index":257,"title":{"components/AppComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CategoryComponent.html":{},"components/ConfirmationModalComponent.html":{},"components/FooterComponent.html":{},"components/GameCardComponent.html":{},"components/GameDetailModalComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/MyLibraryComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/RegisterComponent.html":{},"components/UserProfileComponent.html":{},"coverage.html":{},"overview.html":{}}}],["application",{"_index":1525,"title":{},"body":{"index.html":{}}}],["appmodule",{"_index":345,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["approutingmodule",{"_index":357,"title":{"modules/AppRoutingModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["aqu",{"_index":1169,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["array",{"_index":55,"title":{},"body":{"injectables/ApiService.html":{},"interfaces/Game.html":{},"interfaces/GameAchievement.html":{},"components/GameDetailModalComponent.html":{},"injectables/GameService.html":{},"interfaces/RawgAchievementApi.html":{},"interfaces/RawgAchievementsApiResponse.html":{},"interfaces/RawgApiResponse.html":{},"interfaces/RawgGame.html":{}}}],["array.from(genres).sort((a",{"_index":674,"title":{},"body":{"components/CategoryComponent.html":{}}}],["array.from(platforms).sort((a",{"_index":671,"title":{},"body":{"components/CategoryComponent.html":{}}}],["arriba",{"_index":1275,"title":{},"body":{"components/MyLibraryComponent.html":{}}}],["artifacts",{"_index":1536,"title":{},"body":{"index.html":{}}}],["asociados",{"_index":850,"title":{},"body":{"interfaces/Game.html":{},"interfaces/GameAchievement.html":{},"injectables/GameService.html":{}}}],["autenticación",{"_index":282,"title":{},"body":{"components/AppComponent.html":{},"components/GameDetailModalComponent.html":{},"components/HeaderComponent.html":{},"components/MyLibraryComponent.html":{}}}],["autenticado",{"_index":985,"title":{},"body":{"components/GameDetailModalComponent.html":{},"components/UserProfileComponent.html":{}}}],["autenticarse",{"_index":1121,"title":{},"body":{"components/LoginComponent.html":{}}}],["auth_storage_key",{"_index":451,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/User.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["authguard",{"_index":400,"title":{},"body":{"modules/AppRoutingModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["authservice",{"_index":297,"title":{"injectables/AuthService.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/AuthService.html":{},"components/CategoryComponent.html":{},"components/GameDetailModalComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/MyLibraryComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/RegisterComponent.html":{},"interfaces/User.html":{},"components/UserProfileComponent.html":{},"coverage.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["authservice.currentuser.pipe",{"_index":1582,"title":{},"body":{"miscellaneous/variables.html":{}}}],["authsubscription",{"_index":554,"title":{},"body":{"components/CategoryComponent.html":{},"components/LoginComponent.html":{},"components/MyLibraryComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/RegisterComponent.html":{},"components/UserProfileComponent.html":{}}}],["automatically",{"_index":1526,"title":{},"body":{"index.html":{}}}],["available",{"_index":1568,"title":{},"body":{"modules.html":{}}}],["availablegenres",{"_index":555,"title":{},"body":{"components/CategoryComponent.html":{}}}],["availableplatforms",{"_index":556,"title":{},"body":{"components/CategoryComponent.html":{}}}],["aventura",{"_index":1050,"title":{},"body":{"components/HeaderComponent.html":{},"components/HomeComponent.html":{}}}],["añade",{"_index":979,"title":{},"body":{"components/GameDetailModalComponent.html":{}}}],["añadido",{"_index":913,"title":{},"body":{"interfaces/Game.html":{},"interfaces/GameAchievement.html":{},"injectables/GameService.html":{}}}],["añadir",{"_index":545,"title":{},"body":{"components/CategoryComponent.html":{},"interfaces/Game.html":{},"interfaces/GameAchievement.html":{},"components/GameCardComponent.html":{},"injectables/GameService.html":{}}}],["años",{"_index":1389,"title":{},"body":{"components/RegisterComponent.html":{},"components/UserProfileComponent.html":{}}}],["b",{"_index":672,"title":{},"body":{"components/CategoryComponent.html":{}}}],["backdrop",{"_index":796,"title":{},"body":{"components/ConfirmationModalComponent.html":{},"components/GameDetailModalComponent.html":{}}}],["backdrop.remove",{"_index":798,"title":{},"body":{"components/ConfirmationModalComponent.html":{},"components/GameDetailModalComponent.html":{}}}],["background_image",{"_index":160,"title":{},"body":{"injectables/ApiService.html":{},"interfaces/RawgAchievementApi.html":{},"interfaces/RawgAchievementsApiResponse.html":{},"interfaces/RawgApiResponse.html":{},"interfaces/RawgGame.html":{}}}],["base",{"_index":273,"title":{},"body":{"components/AppComponent.html":{}}}],["base_url",{"_index":12,"title":{},"body":{"injectables/ApiService.html":{},"interfaces/RawgAchievementApi.html":{},"interfaces/RawgAchievementsApiResponse.html":{},"interfaces/RawgApiResponse.html":{},"interfaces/RawgGame.html":{}}}],["basándose",{"_index":681,"title":{},"body":{"components/CategoryComponent.html":{}}}],["behaviorsubject",{"_index":445,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/User.html":{}}}],["biblioteca",{"_index":546,"title":{},"body":{"components/CategoryComponent.html":{},"interfaces/Game.html":{},"interfaces/GameAchievement.html":{},"components/GameCardComponent.html":{},"components/GameDetailModalComponent.html":{},"injectables/GameService.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/MyLibraryComponent.html":{}}}],["bienvenido",{"_index":1292,"title":{},"body":{"components/MyLibraryComponent.html":{}}}],["birthday",{"_index":459,"title":{},"body":{"injectables/AuthService.html":{},"components/RegisterComponent.html":{},"interfaces/User.html":{},"components/UserProfileComponent.html":{}}}],["boolean",{"_index":122,"title":{},"body":{"injectables/ApiService.html":{},"injectables/AuthService.html":{},"interfaces/Game.html":{},"interfaces/GameAchievement.html":{},"components/GameCardComponent.html":{},"injectables/GameService.html":{},"components/MyLibraryComponent.html":{},"interfaces/RawgAchievementApi.html":{},"interfaces/RawgAchievementsApiResponse.html":{},"interfaces/RawgApiResponse.html":{},"interfaces/RawgGame.html":{},"interfaces/User.html":{}}}],["bootstrap",{"_index":349,"title":{},"body":{"modules/AppModule.html":{},"components/CategoryComponent.html":{},"components/ConfirmationModalComponent.html":{},"components/GameDetailModalComponent.html":{},"coverage.html":{},"dependencies.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["bootstrap.modal(this.modalelementref.nativeelement",{"_index":791,"title":{},"body":{"components/ConfirmationModalComponent.html":{},"components/GameDetailModalComponent.html":{}}}],["botones",{"_index":929,"title":{},"body":{"components/GameCardComponent.html":{}}}],["botón",{"_index":744,"title":{},"body":{"components/ConfirmationModalComponent.html":{}}}],["browse",{"_index":1566,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":366,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{},"modules.html":{}}}],["browsermodule",{"_index":364,"title":{},"body":{"modules/AppModule.html":{}}}],["bsmodal",{"_index":752,"title":{},"body":{"components/ConfirmationModalComponent.html":{},"components/GameDetailModalComponent.html":{}}}],["build",{"_index":1535,"title":{},"body":{"index.html":{}}}],["búsqueda",{"_index":84,"title":{},"body":{"injectables/ApiService.html":{},"components/CategoryComponent.html":{},"components/MyLibraryComponent.html":{},"interfaces/RawgAchievementApi.html":{},"interfaces/RawgAchievementsApiResponse.html":{},"interfaces/RawgApiResponse.html":{},"interfaces/RawgGame.html":{}}}],["cada",{"_index":1059,"title":{},"body":{"components/HomeComponent.html":{}}}],["cambiar",{"_index":1343,"title":{},"body":{"components/RecoverPasswordComponent.html":{}}}],["cambie",{"_index":1410,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["cambio",{"_index":988,"title":{},"body":{"components/GameDetailModalComponent.html":{}}}],["cambios",{"_index":974,"title":{},"body":{"components/GameDetailModalComponent.html":{},"components/UserProfileComponent.html":{}}}],["campo",{"_index":1162,"title":{},"body":{"components/LoginComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/RegisterComponent.html":{},"components/UserProfileComponent.html":{}}}],["campos",{"_index":1154,"title":{},"body":{"components/LoginComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/RegisterComponent.html":{},"components/UserProfileComponent.html":{}}}],["canactivate",{"_index":408,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["canactivatefn",{"_index":1578,"title":{},"body":{"miscellaneous/variables.html":{}}}],["cancela",{"_index":747,"title":{},"body":{"components/ConfirmationModalComponent.html":{}}}],["cancelar",{"_index":805,"title":{},"body":{"components/ConfirmationModalComponent.html":{}}}],["capabilities",{"_index":1555,"title":{},"body":{"index.html":{}}}],["capitalizefirstletter",{"_index":566,"title":{},"body":{"components/CategoryComponent.html":{}}}],["capitalizefirstletter(str",{"_index":580,"title":{},"body":{"components/CategoryComponent.html":{}}}],["car",{"_index":1110,"title":{},"body":{"components/HomeComponent.html":{}}}],["caracter",{"_index":1339,"title":{},"body":{"components/RecoverPasswordComponent.html":{},"components/RegisterComponent.html":{},"components/UserProfileComponent.html":{}}}],["caracteres",{"_index":1337,"title":{},"body":{"components/RecoverPasswordComponent.html":{},"components/RegisterComponent.html":{},"components/UserProfileComponent.html":{}}}],["card",{"_index":937,"title":{},"body":{"components/GameCardComponent.html":{}}}],["card'},{'name",{"_index":324,"title":{},"body":{"components/AppComponent.html":{},"components/CategoryComponent.html":{},"components/ConfirmationModalComponent.html":{},"components/FooterComponent.html":{},"components/GameCardComponent.html":{},"components/GameDetailModalComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/MyLibraryComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/RegisterComponent.html":{},"components/UserProfileComponent.html":{}}}],["card.component",{"_index":374,"title":{},"body":{"modules/AppModule.html":{}}}],["card.component.css",{"_index":938,"title":{},"body":{"components/GameCardComponent.html":{}}}],["card.component.html",{"_index":939,"title":{},"body":{"components/GameCardComponent.html":{}}}],["card.component.ts",{"_index":923,"title":{},"body":{"components/GameCardComponent.html":{},"coverage.html":{}}}],["card.component.ts:26",{"_index":948,"title":{},"body":{"components/GameCardComponent.html":{}}}],["card.component.ts:27",{"_index":949,"title":{},"body":{"components/GameCardComponent.html":{}}}],["card.component.ts:29",{"_index":950,"title":{},"body":{"components/GameCardComponent.html":{}}}],["card.component.ts:30",{"_index":954,"title":{},"body":{"components/GameCardComponent.html":{}}}],["card.component.ts:31",{"_index":951,"title":{},"body":{"components/GameCardComponent.html":{}}}],["card.component.ts:32",{"_index":952,"title":{},"body":{"components/GameCardComponent.html":{}}}],["card.component.ts:33",{"_index":953,"title":{},"body":{"components/GameCardComponent.html":{}}}],["card.component.ts:34",{"_index":947,"title":{},"body":{"components/GameCardComponent.html":{}}}],["card/game",{"_index":373,"title":{},"body":{"modules/AppModule.html":{},"components/GameCardComponent.html":{},"coverage.html":{}}}],["carga",{"_index":1060,"title":{},"body":{"components/HomeComponent.html":{},"components/MyLibraryComponent.html":{},"components/UserProfileComponent.html":{}}}],["cargados",{"_index":662,"title":{},"body":{"components/CategoryComponent.html":{}}}],["cargar",{"_index":640,"title":{},"body":{"components/CategoryComponent.html":{},"components/HomeComponent.html":{},"components/MyLibraryComponent.html":{}}}],["case",{"_index":1100,"title":{},"body":{"components/HomeComponent.html":{}}}],["caso",{"_index":201,"title":{},"body":{"injectables/ApiService.html":{},"components/HomeComponent.html":{},"interfaces/RawgAchievementApi.html":{},"interfaces/RawgAchievementsApiResponse.html":{},"interfaces/RawgApiResponse.html":{},"interfaces/RawgGame.html":{}}}],["catcherror",{"_index":145,"title":{},"body":{"injectables/ApiService.html":{},"components/CategoryComponent.html":{},"components/MyLibraryComponent.html":{},"interfaces/RawgAchievementApi.html":{},"interfaces/RawgAchievementsApiResponse.html":{},"interfaces/RawgApiResponse.html":{},"interfaces/RawgGame.html":{}}}],["catcherror(err",{"_index":722,"title":{},"body":{"components/CategoryComponent.html":{},"components/MyLibraryComponent.html":{}}}],["catcherror(error",{"_index":194,"title":{},"body":{"injectables/ApiService.html":{},"interfaces/RawgAchievementApi.html":{},"interfaces/RawgAchievementsApiResponse.html":{},"interfaces/RawgApiResponse.html":{},"interfaces/RawgGame.html":{}}}],["categorias/:categoryslug",{"_index":412,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["categories",{"_index":1066,"title":{},"body":{"components/HomeComponent.html":{}}}],["categoriessubscription",{"_index":1067,"title":{},"body":{"components/HomeComponent.html":{}}}],["category",{"_index":550,"title":{},"body":{"components/CategoryComponent.html":{}}}],["category'},{'name",{"_index":317,"title":{},"body":{"components/AppComponent.html":{},"components/CategoryComponent.html":{},"components/ConfirmationModalComponent.html":{},"components/FooterComponent.html":{},"components/GameCardComponent.html":{},"components/GameDetailModalComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/MyLibraryComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/RegisterComponent.html":{},"components/UserProfileComponent.html":{}}}],["category.component.css",{"_index":551,"title":{},"body":{"components/CategoryComponent.html":{}}}],["category.component.html",{"_index":552,"title":{},"body":{"components/CategoryComponent.html":{}}}],["category.name",{"_index":1115,"title":{},"body":{"components/HomeComponent.html":{}}}],["category.tolowercase().replace(/\\s/g",{"_index":651,"title":{},"body":{"components/CategoryComponent.html":{}}}],["categorycomponent",{"_index":316,"title":{"components/CategoryComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/CategoryComponent.html":{},"components/ConfirmationModalComponent.html":{},"components/FooterComponent.html":{},"components/GameCardComponent.html":{},"components/GameDetailModalComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/MyLibraryComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/RegisterComponent.html":{},"components/UserProfileComponent.html":{},"coverage.html":{},"overview.html":{}}}],["categoryname",{"_index":557,"title":{},"body":{"components/CategoryComponent.html":{},"components/HomeComponent.html":{}}}],["categoryname.tolowercase",{"_index":1099,"title":{},"body":{"components/HomeComponent.html":{}}}],["categorynames",{"_index":1081,"title":{},"body":{"components/HomeComponent.html":{}}}],["categorynames.map(name",{"_index":1083,"title":{},"body":{"components/HomeComponent.html":{}}}],["categoryslug",{"_index":558,"title":{},"body":{"components/CategoryComponent.html":{}}}],["categoría",{"_index":539,"title":{},"body":{"components/CategoryComponent.html":{},"components/HomeComponent.html":{}}}],["categorías",{"_index":927,"title":{},"body":{"components/GameCardComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{}}}],["cerrar",{"_index":806,"title":{},"body":{"components/ConfirmationModalComponent.html":{},"components/GameDetailModalComponent.html":{},"components/HeaderComponent.html":{}}}],["change",{"_index":1528,"title":{},"body":{"index.html":{}}}],["check",{"_index":1560,"title":{},"body":{"index.html":{}}}],["checkbox",{"_index":989,"title":{},"body":{"components/GameDetailModalComponent.html":{}}}],["chess",{"_index":1093,"title":{},"body":{"components/HomeComponent.html":{}}}],["choice",{"_index":1549,"title":{},"body":{"index.html":{}}}],["cierra",{"_index":794,"title":{},"body":{"components/ConfirmationModalComponent.html":{}}}],["class",{"_index":172,"title":{},"body":{"injectables/ApiService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthService.html":{},"components/CategoryComponent.html":{},"components/ConfirmationModalComponent.html":{},"components/FooterComponent.html":{},"interfaces/Game.html":{},"interfaces/GameAchievement.html":{},"components/GameCardComponent.html":{},"components/GameDetailModalComponent.html":{},"injectables/GameService.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/MyLibraryComponent.html":{},"interfaces/RawgAchievementApi.html":{},"interfaces/RawgAchievementsApiResponse.html":{},"interfaces/RawgApiResponse.html":{},"interfaces/RawgGame.html":{},"components/RecoverPasswordComponent.html":{},"components/RegisterComponent.html":{},"interfaces/User.html":{},"components/UserProfileComponent.html":{}}}],["clave",{"_index":645,"title":{},"body":{"components/CategoryComponent.html":{}}}],["claves",{"_index":449,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/User.html":{}}}],["cli",{"_index":1514,"title":{},"body":{"index.html":{}}}],["clic",{"_index":703,"title":{},"body":{"components/CategoryComponent.html":{},"components/ConfirmationModalComponent.html":{}}}],["cluster_appmodule",{"_index":352,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_bootstrap",{"_index":354,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_declarations",{"_index":356,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":353,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":355,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["code",{"_index":1530,"title":{},"body":{"index.html":{}}}],["coinciden",{"_index":1342,"title":{},"body":{"components/RecoverPasswordComponent.html":{},"components/RegisterComponent.html":{}}}],["coma",{"_index":90,"title":{},"body":{"injectables/ApiService.html":{},"interfaces/RawgAchievementApi.html":{},"interfaces/RawgAchievementsApiResponse.html":{},"interfaces/RawgApiResponse.html":{},"interfaces/RawgGame.html":{}}}],["command",{"_index":1550,"title":{},"body":{"index.html":{}}}],["como",{"_index":268,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Game.html":{},"interfaces/GameAchievement.html":{},"injectables/GameService.html":{},"components/MyLibraryComponent.html":{}}}],["comodín",{"_index":414,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["compatible",{"_index":115,"title":{},"body":{"injectables/ApiService.html":{},"interfaces/RawgAchievementApi.html":{},"interfaces/RawgAchievementsApiResponse.html":{},"interfaces/RawgApiResponse.html":{},"interfaces/RawgGame.html":{}}}],["completa",{"_index":67,"title":{},"body":{"injectables/ApiService.html":{},"interfaces/Game.html":{},"interfaces/GameAchievement.html":{},"injectables/GameService.html":{},"components/LoginComponent.html":{},"interfaces/RawgAchievementApi.html":{},"interfaces/RawgAchievementsApiResponse.html":{},"interfaces/RawgApiResponse.html":{},"interfaces/RawgGame.html":{}}}],["completado",{"_index":838,"title":{},"body":{"interfaces/Game.html":{},"interfaces/GameAchievement.html":{},"components/GameDetailModalComponent.html":{},"injectables/GameService.html":{}}}],["completar",{"_index":896,"title":{},"body":{"interfaces/Game.html":{},"interfaces/GameAchievement.html":{},"injectables/GameService.html":{}}}],["completed",{"_index":117,"title":{},"body":{"injectables/ApiService.html":{},"interfaces/Game.html":{},"interfaces/GameAchievement.html":{},"components/GameDetailModalComponent.html":{},"injectables/GameService.html":{},"interfaces/RawgAchievementApi.html":{},"interfaces/RawgAchievementsApiResponse.html":{},"interfaces/RawgApiResponse.html":{},"interfaces/RawgGame.html":{}}}],["completo",{"_index":1384,"title":{},"body":{"components/RegisterComponent.html":{},"components/UserProfileComponent.html":{}}}],["completos",{"_index":62,"title":{},"body":{"injectables/ApiService.html":{},"components/CategoryComponent.html":{},"components/GameDetailModalComponent.html":{},"components/MyLibraryComponent.html":{},"interfaces/RawgAchievementApi.html":{},"interfaces/RawgAchievementsApiResponse.html":{},"interfaces/RawgApiResponse.html":{},"interfaces/RawgGame.html":{}}}],["component",{"_index":256,"title":{"components/AppComponent.html":{},"components/CategoryComponent.html":{},"components/ConfirmationModalComponent.html":{},"components/FooterComponent.html":{},"components/GameCardComponent.html":{},"components/GameDetailModalComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/MyLibraryComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/RegisterComponent.html":{},"components/UserProfileComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/CategoryComponent.html":{},"components/ConfirmationModalComponent.html":{},"components/FooterComponent.html":{},"components/GameCardComponent.html":{},"components/GameDetailModalComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/MyLibraryComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/RegisterComponent.html":{},"components/UserProfileComponent.html":{},"coverage.html":{},"index.html":{}}}],["component_template",{"_index":314,"title":{},"body":{"components/AppComponent.html":{},"components/CategoryComponent.html":{},"components/ConfirmationModalComponent.html":{},"components/FooterComponent.html":{},"components/GameCardComponent.html":{},"components/GameDetailModalComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/MyLibraryComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/RegisterComponent.html":{},"components/UserProfileComponent.html":{}}}],["componente",{"_index":215,"title":{},"body":{"injectables/ApiService.html":{},"components/AppComponent.html":{},"components/CategoryComponent.html":{},"components/ConfirmationModalComponent.html":{},"components/FooterComponent.html":{},"components/GameCardComponent.html":{},"components/GameDetailModalComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/MyLibraryComponent.html":{},"interfaces/RawgAchievementApi.html":{},"interfaces/RawgAchievementsApiResponse.html":{},"interfaces/RawgApiResponse.html":{},"interfaces/RawgGame.html":{},"components/RecoverPasswordComponent.html":{},"components/RegisterComponent.html":{},"components/UserProfileComponent.html":{}}}],["componentes",{"_index":859,"title":{},"body":{"interfaces/Game.html":{},"interfaces/GameAchievement.html":{},"injectables/GameService.html":{}}}],["components",{"_index":258,"title":{},"body":{"components/AppComponent.html":{},"components/CategoryComponent.html":{},"components/ConfirmationModalComponent.html":{},"components/FooterComponent.html":{},"components/GameCardComponent.html":{},"components/GameDetailModalComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/MyLibraryComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/RegisterComponent.html":{},"components/UserProfileComponent.html":{},"overview.html":{}}}],["con",{"_index":102,"title":{},"body":{"injectables/ApiService.html":{},"components/AppComponent.html":{},"components/CategoryComponent.html":{},"interfaces/Game.html":{},"interfaces/GameAchievement.html":{},"components/GameDetailModalComponent.html":{},"injectables/GameService.html":{},"components/MyLibraryComponent.html":{},"interfaces/RawgAchievementApi.html":{},"interfaces/RawgAchievementsApiResponse.html":{},"interfaces/RawgApiResponse.html":{},"interfaces/RawgGame.html":{},"components/RecoverPasswordComponent.html":{},"components/RegisterComponent.html":{},"components/UserProfileComponent.html":{}}}],["configurando",{"_index":272,"title":{},"body":{"components/AppComponent.html":{}}}],["configurar",{"_index":740,"title":{},"body":{"components/ConfirmationModalComponent.html":{}}}],["confirma",{"_index":746,"title":{},"body":{"components/ConfirmationModalComponent.html":{}}}],["confirmación",{"_index":738,"title":{},"body":{"components/ConfirmationModalComponent.html":{},"components/MyLibraryComponent.html":{},"miscellaneous/functions.html":{}}}],["confirmar",{"_index":764,"title":{},"body":{"components/ConfirmationModalComponent.html":{},"components/MyLibraryComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/RegisterComponent.html":{}}}],["confirmation",{"_index":319,"title":{},"body":{"components/AppComponent.html":{},"components/CategoryComponent.html":{},"components/ConfirmationModalComponent.html":{},"components/FooterComponent.html":{},"components/GameCardComponent.html":{},"components/GameDetailModalComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/MyLibraryComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/RegisterComponent.html":{},"components/UserProfileComponent.html":{}}}],["confirmationmodal",{"_index":1068,"title":{},"body":{"components/HomeComponent.html":{},"components/MyLibraryComponent.html":{}}}],["confirmationmodalcomponent",{"_index":318,"title":{"components/ConfirmationModalComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CategoryComponent.html":{},"components/ConfirmationModalComponent.html":{},"components/FooterComponent.html":{},"components/GameCardComponent.html":{},"components/GameDetailModalComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/MyLibraryComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/RegisterComponent.html":{},"components/UserProfileComponent.html":{},"coverage.html":{},"overview.html":{}}}],["confirmationmodalconfirmtext",{"_index":1183,"title":{},"body":{"components/MyLibraryComponent.html":{}}}],["confirmationmodalmessage",{"_index":1184,"title":{},"body":{"components/MyLibraryComponent.html":{}}}],["confirmationmodaltitle",{"_index":1185,"title":{},"body":{"components/MyLibraryComponent.html":{}}}],["confirmbuttontext",{"_index":760,"title":{},"body":{"components/ConfirmationModalComponent.html":{}}}],["confirmed",{"_index":762,"title":{},"body":{"components/ConfirmationModalComponent.html":{},"components/MyLibraryComponent.html":{}}}],["confirmpassword",{"_index":1321,"title":{},"body":{"components/RecoverPasswordComponent.html":{},"components/RegisterComponent.html":{}}}],["confirmpasswordcontrolname",{"_index":1505,"title":{},"body":{"miscellaneous/functions.html":{}}}],["console.error('error",{"_index":195,"title":{},"body":{"injectables/ApiService.html":{},"components/CategoryComponent.html":{},"components/HomeComponent.html":{},"components/MyLibraryComponent.html":{},"interfaces/RawgAchievementApi.html":{},"interfaces/RawgAchievementsApiResponse.html":{},"interfaces/RawgApiResponse.html":{},"interfaces/RawgGame.html":{}}}],["console.error(`error",{"_index":211,"title":{},"body":{"injectables/ApiService.html":{},"interfaces/RawgAchievementApi.html":{},"interfaces/RawgAchievementsApiResponse.html":{},"interfaces/RawgApiResponse.html":{},"interfaces/RawgGame.html":{}}}],["console.log(this.registerform.invalid",{"_index":1378,"title":{},"body":{"components/RegisterComponent.html":{}}}],["console.warn('no",{"_index":712,"title":{},"body":{"components/CategoryComponent.html":{}}}],["const",{"_index":202,"title":{},"body":{"injectables/ApiService.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthService.html":{},"components/CategoryComponent.html":{},"components/ConfirmationModalComponent.html":{},"interfaces/Game.html":{},"interfaces/GameAchievement.html":{},"components/GameDetailModalComponent.html":{},"injectables/GameService.html":{},"components/LoginComponent.html":{},"components/MyLibraryComponent.html":{},"interfaces/RawgAchievementApi.html":{},"interfaces/RawgAchievementsApiResponse.html":{},"interfaces/RawgApiResponse.html":{},"interfaces/RawgGame.html":{},"components/RecoverPasswordComponent.html":{},"components/RegisterComponent.html":{},"interfaces/User.html":{},"components/UserProfileComponent.html":{},"miscellaneous/variables.html":{}}}],["constructor",{"_index":21,"title":{},"body":{"injectables/ApiService.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/CategoryComponent.html":{},"components/ConfirmationModalComponent.html":{},"interfaces/Game.html":{},"interfaces/GameAchievement.html":{},"components/GameCardComponent.html":{},"components/GameDetailModalComponent.html":{},"injectables/GameService.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/MyLibraryComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/RegisterComponent.html":{},"interfaces/User.html":{},"components/UserProfileComponent.html":{}}}],["constructor(authservice",{"_index":296,"title":{},"body":{"components/AppComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/MyLibraryComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/RegisterComponent.html":{},"components/UserProfileComponent.html":{}}}],["constructor(gameservice",{"_index":970,"title":{},"body":{"components/GameDetailModalComponent.html":{}}}],["constructor(http",{"_index":22,"title":{},"body":{"injectables/ApiService.html":{}}}],["constructor(private",{"_index":173,"title":{},"body":{"injectables/ApiService.html":{},"components/AppComponent.html":{},"interfaces/Game.html":{},"interfaces/GameAchievement.html":{},"injectables/GameService.html":{},"interfaces/RawgAchievementApi.html":{},"interfaces/RawgAchievementsApiResponse.html":{},"interfaces/RawgApiResponse.html":{},"interfaces/RawgGame.html":{}}}],["constructor(public",{"_index":1046,"title":{},"body":{"components/HeaderComponent.html":{}}}],["constructor(route",{"_index":574,"title":{},"body":{"components/CategoryComponent.html":{}}}],["contenido",{"_index":275,"title":{},"body":{"components/AppComponent.html":{}}}],["contiene",{"_index":809,"title":{},"body":{"components/FooterComponent.html":{}}}],["contrasena",{"_index":512,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/User.html":{}}}],["contraseña",{"_index":499,"title":{},"body":{"injectables/AuthService.html":{},"components/LoginComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/RegisterComponent.html":{},"interfaces/User.html":{},"components/UserProfileComponent.html":{},"miscellaneous/functions.html":{}}}],["contraseñas",{"_index":1341,"title":{},"body":{"components/RecoverPasswordComponent.html":{},"components/RegisterComponent.html":{}}}],["control",{"_index":1507,"title":{},"body":{"miscellaneous/functions.html":{}}}],["controles",{"_index":934,"title":{},"body":{"components/GameCardComponent.html":{}}}],["copy",{"_index":815,"title":{},"body":{"components/FooterComponent.html":{}}}],["copyright",{"_index":811,"title":{},"body":{"components/FooterComponent.html":{}}}],["core/auth/auth.service",{"_index":304,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{}}}],["correctamente",{"_index":523,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Game.html":{},"interfaces/GameAchievement.html":{},"injectables/GameService.html":{},"components/LoginComponent.html":{},"interfaces/User.html":{}}}],["correo",{"_index":1301,"title":{},"body":{"components/RecoverPasswordComponent.html":{},"components/RegisterComponent.html":{},"components/UserProfileComponent.html":{}}}],["count",{"_index":153,"title":{},"body":{"injectables/ApiService.html":{},"interfaces/RawgAchievementApi.html":{},"interfaces/RawgAchievementsApiResponse.html":{},"interfaces/RawgApiResponse.html":{},"interfaces/RawgGame.html":{}}}],["coverage",{"_index":1436,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["crear",{"_index":1347,"title":{},"body":{"components/RegisterComponent.html":{}}}],["credenciales",{"_index":1120,"title":{},"body":{"components/LoginComponent.html":{}}}],["criterios",{"_index":682,"title":{},"body":{"components/CategoryComponent.html":{},"components/MyLibraryComponent.html":{}}}],["crosshairs",{"_index":1106,"title":{},"body":{"components/HomeComponent.html":{}}}],["crud",{"_index":829,"title":{},"body":{"interfaces/Game.html":{},"interfaces/GameAchievement.html":{},"injectables/GameService.html":{}}}],["cuando",{"_index":701,"title":{},"body":{"components/CategoryComponent.html":{},"components/ConfirmationModalComponent.html":{},"components/GameDetailModalComponent.html":{},"components/UserProfileComponent.html":{}}}],["cuenta",{"_index":1167,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["cumpla",{"_index":1304,"title":{},"body":{"components/RecoverPasswordComponent.html":{}}}],["current_user_key",{"_index":453,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/User.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["currentuser",{"_index":294,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/CategoryComponent.html":{},"components/GameDetailModalComponent.html":{},"components/MyLibraryComponent.html":{},"interfaces/User.html":{},"components/UserProfileComponent.html":{}}}],["currentuser.email",{"_index":520,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/User.html":{}}}],["currentuser.username",{"_index":531,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/User.html":{}}}],["currentusersubject",{"_index":420,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/User.html":{}}}],["cuyos",{"_index":995,"title":{},"body":{"components/GameDetailModalComponent.html":{}}}],["date.now",{"_index":883,"title":{},"body":{"interfaces/Game.html":{},"interfaces/GameAchievement.html":{},"injectables/GameService.html":{}}}],["date.parse(user.birthday",{"_index":1416,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["datos",{"_index":641,"title":{},"body":{"components/CategoryComponent.html":{},"interfaces/Game.html":{},"interfaces/GameAchievement.html":{},"injectables/GameService.html":{},"components/RegisterComponent.html":{},"components/UserProfileComponent.html":{}}}],["de",{"_index":38,"title":{},"body":{"injectables/ApiService.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/CategoryComponent.html":{},"components/ConfirmationModalComponent.html":{},"components/FooterComponent.html":{},"interfaces/Game.html":{},"interfaces/GameAchievement.html":{},"components/GameCardComponent.html":{},"components/GameDetailModalComponent.html":{},"injectables/GameService.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/MyLibraryComponent.html":{},"interfaces/RawgAchievementApi.html":{},"interfaces/RawgAchievementsApiResponse.html":{},"interfaces/RawgApiResponse.html":{},"interfaces/RawgGame.html":{},"components/RecoverPasswordComponent.html":{},"components/RegisterComponent.html":{},"interfaces/User.html":{},"components/UserProfileComponent.html":{},"miscellaneous/functions.html":{}}}],["debe",{"_index":133,"title":{},"body":{"injectables/ApiService.html":{},"interfaces/RawgAchievementApi.html":{},"interfaces/RawgAchievementsApiResponse.html":{},"interfaces/RawgApiResponse.html":{},"interfaces/RawgGame.html":{},"components/RecoverPasswordComponent.html":{},"components/RegisterComponent.html":{},"components/UserProfileComponent.html":{}}}],["debería",{"_index":1273,"title":{},"body":{"components/MyLibraryComponent.html":{}}}],["debes",{"_index":1006,"title":{},"body":{"components/GameDetailModalComponent.html":{},"components/LoginComponent.html":{},"components/MyLibraryComponent.html":{},"components/RegisterComponent.html":{},"components/UserProfileComponent.html":{}}}],["debido",{"_index":715,"title":{},"body":{"components/CategoryComponent.html":{}}}],["declarations",{"_index":348,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["declare",{"_index":619,"title":{},"body":{"components/CategoryComponent.html":{},"components/ConfirmationModalComponent.html":{},"components/GameDetailModalComponent.html":{}}}],["decorators",{"_index":604,"title":{},"body":{"components/CategoryComponent.html":{},"components/ConfirmationModalComponent.html":{},"components/GameDetailModalComponent.html":{},"components/MyLibraryComponent.html":{}}}],["default",{"_index":80,"title":{},"body":{"injectables/ApiService.html":{},"components/AppComponent.html":{},"components/CategoryComponent.html":{},"components/ConfirmationModalComponent.html":{},"components/GameCardComponent.html":{},"components/GameDetailModalComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/MyLibraryComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/RegisterComponent.html":{},"components/UserProfileComponent.html":{},"miscellaneous/variables.html":{}}}],["defecto",{"_index":119,"title":{},"body":{"injectables/ApiService.html":{},"interfaces/RawgAchievementApi.html":{},"interfaces/RawgAchievementsApiResponse.html":{},"interfaces/RawgApiResponse.html":{},"interfaces/RawgGame.html":{}}}],["define",{"_index":148,"title":{},"body":{"injectables/ApiService.html":{},"interfaces/Game.html":{},"interfaces/GameAchievement.html":{},"injectables/GameService.html":{},"interfaces/RawgAchievementApi.html":{},"interfaces/RawgAchievementsApiResponse.html":{},"interfaces/RawgApiResponse.html":{},"interfaces/RawgGame.html":{}}}],["defined",{"_index":24,"title":{},"body":{"injectables/ApiService.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/CategoryComponent.html":{},"components/ConfirmationModalComponent.html":{},"components/GameCardComponent.html":{},"components/GameDetailModalComponent.html":{},"injectables/GameService.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/MyLibraryComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/RegisterComponent.html":{},"components/UserProfileComponent.html":{}}}],["del",{"_index":50,"title":{},"body":{"injectables/ApiService.html":{},"components/AppComponent.html":{},"components/CategoryComponent.html":{},"components/ConfirmationModalComponent.html":{},"interfaces/Game.html":{},"interfaces/GameAchievement.html":{},"components/GameCardComponent.html":{},"components/GameDetailModalComponent.html":{},"injectables/GameService.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/MyLibraryComponent.html":{},"interfaces/RawgAchievementApi.html":{},"interfaces/RawgAchievementsApiResponse.html":{},"interfaces/RawgApiResponse.html":{},"interfaces/RawgGame.html":{},"components/UserProfileComponent.html":{},"miscellaneous/functions.html":{}}}],["deletegame",{"_index":942,"title":{},"body":{"components/GameCardComponent.html":{},"injectables/GameService.html":{}}}],["deletegame(username",{"_index":921,"title":{},"body":{"interfaces/Game.html":{},"interfaces/GameAchievement.html":{},"injectables/GameService.html":{}}}],["denegado",{"_index":1587,"title":{},"body":{"miscellaneous/variables.html":{}}}],["dentro",{"_index":987,"title":{},"body":{"components/GameDetailModalComponent.html":{}}}],["dependencies",{"_index":347,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"dependencies.html":{},"overview.html":{}}}],["derechos",{"_index":818,"title":{},"body":{"components/FooterComponent.html":{}}}],["derrota",{"_index":902,"title":{},"body":{"interfaces/Game.html":{},"interfaces/GameAchievement.html":{},"injectables/GameService.html":{}}}],["derrotar",{"_index":899,"title":{},"body":{"interfaces/Game.html":{},"interfaces/GameAchievement.html":{},"injectables/GameService.html":{}}}],["desconocida",{"_index":905,"title":{},"body":{"interfaces/Game.html":{},"interfaces/GameAchievement.html":{},"injectables/GameService.html":{}}}],["descripción",{"_index":66,"title":{},"body":{"injectables/ApiService.html":{},"interfaces/Game.html":{},"interfaces/GameAchievement.html":{},"components/GameDetailModalComponent.html":{},"injectables/GameService.html":{},"interfaces/RawgAchievementApi.html":{},"interfaces/RawgAchievementsApiResponse.html":{},"interfaces/RawgApiResponse.html":{},"interfaces/RawgGame.html":{}}}],["description",{"_index":47,"title":{},"body":{"injectables/ApiService.html":{},"components/AppComponent.html":{},"components/CategoryComponent.html":{},"components/ConfirmationModalComponent.html":{},"components/FooterComponent.html":{},"interfaces/Game.html":{},"interfaces/GameAchievement.html":{},"components/GameCardComponent.html":{},"components/GameDetailModalComponent.html":{},"injectables/GameService.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/MyLibraryComponent.html":{},"interfaces/RawgAchievementApi.html":{},"interfaces/RawgAchievementsApiResponse.html":{},"interfaces/RawgApiResponse.html":{},"interfaces/RawgGame.html":{},"components/RecoverPasswordComponent.html":{},"components/RegisterComponent.html":{},"components/UserProfileComponent.html":{},"miscellaneous/functions.html":{}}}],["description.length",{"_index":231,"title":{},"body":{"injectables/ApiService.html":{},"interfaces/RawgAchievementApi.html":{},"interfaces/RawgAchievementsApiResponse.html":{},"interfaces/RawgApiResponse.html":{},"interfaces/RawgGame.html":{}}}],["description.substring(0",{"_index":229,"title":{},"body":{"injectables/ApiService.html":{},"interfaces/RawgAchievementApi.html":{},"interfaces/RawgAchievementsApiResponse.html":{},"interfaces/RawgApiResponse.html":{},"interfaces/RawgGame.html":{}}}],["description_raw",{"_index":135,"title":{},"body":{"injectables/ApiService.html":{},"interfaces/RawgAchievementApi.html":{},"interfaces/RawgAchievementsApiResponse.html":{},"interfaces/RawgApiResponse.html":{},"interfaces/RawgGame.html":{}}}],["desde",{"_index":97,"title":{},"body":{"injectables/ApiService.html":{},"components/GameDetailModalComponent.html":{},"components/HomeComponent.html":{},"components/MyLibraryComponent.html":{},"interfaces/RawgAchievementApi.html":{},"interfaces/RawgAchievementsApiResponse.html":{},"interfaces/RawgApiResponse.html":{},"interfaces/RawgGame.html":{}}}],["deshacer",{"_index":1269,"title":{},"body":{"components/MyLibraryComponent.html":{}}}],["después",{"_index":785,"title":{},"body":{"components/ConfirmationModalComponent.html":{},"components/GameDetailModalComponent.html":{}}}],["desuscribe",{"_index":1429,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["detail",{"_index":326,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CategoryComponent.html":{},"components/ConfirmationModalComponent.html":{},"components/FooterComponent.html":{},"components/GameCardComponent.html":{},"components/GameDetailModalComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/MyLibraryComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/RegisterComponent.html":{},"components/UserProfileComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["details",{"_index":212,"title":{},"body":{"injectables/ApiService.html":{},"components/CategoryComponent.html":{},"interfaces/RawgAchievementApi.html":{},"interfaces/RawgAchievementsApiResponse.html":{},"interfaces/RawgApiResponse.html":{},"interfaces/RawgGame.html":{}}}],["detallada",{"_index":843,"title":{},"body":{"interfaces/Game.html":{},"interfaces/GameAchievement.html":{},"injectables/GameService.html":{}}}],["detalle",{"_index":210,"title":{},"body":{"injectables/ApiService.html":{},"interfaces/RawgAchievementApi.html":{},"interfaces/RawgAchievementsApiResponse.html":{},"interfaces/RawgApiResponse.html":{},"interfaces/RawgGame.html":{}}}],["detalles",{"_index":61,"title":{},"body":{"injectables/ApiService.html":{},"components/CategoryComponent.html":{},"interfaces/Game.html":{},"interfaces/GameAchievement.html":{},"components/GameCardComponent.html":{},"components/GameDetailModalComponent.html":{},"injectables/GameService.html":{},"components/MyLibraryComponent.html":{},"interfaces/RawgAchievementApi.html":{},"interfaces/RawgAchievementsApiResponse.html":{},"interfaces/RawgApiResponse.html":{},"interfaces/RawgGame.html":{}}}],["dev",{"_index":1522,"title":{},"body":{"index.html":{}}}],["development",{"_index":1517,"title":{},"body":{"index.html":{}}}],["diferente",{"_index":527,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/User.html":{}}}],["directive",{"_index":312,"title":{},"body":{"components/AppComponent.html":{},"components/CategoryComponent.html":{},"components/ConfirmationModalComponent.html":{},"components/FooterComponent.html":{},"components/GameCardComponent.html":{},"components/GameDetailModalComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/MyLibraryComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/RegisterComponent.html":{},"components/UserProfileComponent.html":{}}}],["directives",{"_index":342,"title":{},"body":{"components/AppComponent.html":{},"components/CategoryComponent.html":{},"components/ConfirmationModalComponent.html":{},"components/FooterComponent.html":{},"components/GameCardComponent.html":{},"components/GameDetailModalComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/MyLibraryComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/RegisterComponent.html":{},"components/UserProfileComponent.html":{}}}],["directive|pipe|service|class|guard|interface|enum|module",{"_index":1534,"title":{},"body":{"index.html":{}}}],["directory",{"_index":1539,"title":{},"body":{"index.html":{}}}],["disabled",{"_index":1415,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["disponible",{"_index":70,"title":{},"body":{"injectables/ApiService.html":{},"interfaces/Game.html":{},"interfaces/GameAchievement.html":{},"injectables/GameService.html":{},"interfaces/RawgAchievementApi.html":{},"interfaces/RawgAchievementsApiResponse.html":{},"interfaces/RawgApiResponse.html":{},"interfaces/RawgGame.html":{}}}],["disponibles",{"_index":100,"title":{},"body":{"injectables/ApiService.html":{},"components/GameDetailModalComponent.html":{},"interfaces/RawgAchievementApi.html":{},"interfaces/RawgAchievementsApiResponse.html":{},"interfaces/RawgApiResponse.html":{},"interfaces/RawgGame.html":{}}}],["dist",{"_index":1538,"title":{},"body":{"index.html":{}}}],["document.queryselector('.modal",{"_index":797,"title":{},"body":{"components/ConfirmationModalComponent.html":{},"components/GameDetailModalComponent.html":{}}}],["documentation",{"_index":1437,"title":{},"body":{"coverage.html":{}}}],["dom",{"_index":261,"title":{},"body":{"components/AppComponent.html":{},"components/CategoryComponent.html":{},"components/ConfirmationModalComponent.html":{},"components/FooterComponent.html":{},"components/GameCardComponent.html":{},"components/GameDetailModalComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/MyLibraryComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/RegisterComponent.html":{},"components/UserProfileComponent.html":{}}}],["dynamic",{"_index":1484,"title":{},"body":{"dependencies.html":{}}}],["e2e",{"_index":1548,"title":{},"body":{"index.html":{}}}],["e8efc69ecead49639193319812de4f90",{"_index":136,"title":{},"body":{"injectables/ApiService.html":{},"interfaces/RawgAchievementApi.html":{},"interfaces/RawgAchievementsApiResponse.html":{},"interfaces/RawgApiResponse.html":{},"interfaces/RawgGame.html":{}}}],["edad",{"_index":1501,"title":{},"body":{"miscellaneous/functions.html":{}}}],["edición",{"_index":1393,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["editar",{"_index":1434,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["ejecuta",{"_index":1002,"title":{},"body":{"components/GameDetailModalComponent.html":{}}}],["el",{"_index":49,"title":{},"body":{"injectables/ApiService.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/CategoryComponent.html":{},"components/ConfirmationModalComponent.html":{},"components/FooterComponent.html":{},"interfaces/Game.html":{},"interfaces/GameAchievement.html":{},"components/GameDetailModalComponent.html":{},"injectables/GameService.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/MyLibraryComponent.html":{},"interfaces/RawgAchievementApi.html":{},"interfaces/RawgAchievementsApiResponse.html":{},"interfaces/RawgApiResponse.html":{},"interfaces/RawgGame.html":{},"components/RecoverPasswordComponent.html":{},"components/RegisterComponent.html":{},"interfaces/User.html":{},"components/UserProfileComponent.html":{},"miscellaneous/functions.html":{}}}],["electrónico",{"_index":1302,"title":{},"body":{"components/RecoverPasswordComponent.html":{},"components/RegisterComponent.html":{},"components/UserProfileComponent.html":{}}}],["element",{"_index":311,"title":{},"body":{"components/AppComponent.html":{},"components/CategoryComponent.html":{},"components/ConfirmationModalComponent.html":{},"components/FooterComponent.html":{},"components/GameCardComponent.html":{},"components/GameDetailModalComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/MyLibraryComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/RegisterComponent.html":{},"components/UserProfileComponent.html":{}}}],["elemento",{"_index":998,"title":{},"body":{"components/GameDetailModalComponent.html":{}}}],["elementref",{"_index":777,"title":{},"body":{"components/ConfirmationModalComponent.html":{},"components/GameDetailModalComponent.html":{}}}],["elimina",{"_index":920,"title":{},"body":{"interfaces/Game.html":{},"interfaces/GameAchievement.html":{},"injectables/GameService.html":{}}}],["eliminaciones",{"_index":1179,"title":{},"body":{"components/MyLibraryComponent.html":{}}}],["eliminar",{"_index":830,"title":{},"body":{"interfaces/Game.html":{},"interfaces/GameAchievement.html":{},"injectables/GameService.html":{},"components/MyLibraryComponent.html":{}}}],["email",{"_index":458,"title":{},"body":{"injectables/AuthService.html":{},"components/RecoverPasswordComponent.html":{},"components/RegisterComponent.html":{},"interfaces/User.html":{},"components/UserProfileComponent.html":{}}}],["emailvalidator",{"_index":1317,"title":{},"body":{"components/RecoverPasswordComponent.html":{},"components/RegisterComponent.html":{},"components/UserProfileComponent.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["emite",{"_index":745,"title":{},"body":{"components/ConfirmationModalComponent.html":{},"components/GameDetailModalComponent.html":{}}}],["emiten",{"_index":930,"title":{},"body":{"components/GameCardComponent.html":{}}}],["emptystringvalidator",{"_index":1144,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/UserProfileComponent.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["en",{"_index":51,"title":{},"body":{"injectables/ApiService.html":{},"injectables/AuthService.html":{},"components/CategoryComponent.html":{},"components/ConfirmationModalComponent.html":{},"interfaces/Game.html":{},"interfaces/GameAchievement.html":{},"components/GameCardComponent.html":{},"components/GameDetailModalComponent.html":{},"injectables/GameService.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/MyLibraryComponent.html":{},"interfaces/RawgAchievementApi.html":{},"interfaces/RawgAchievementsApiResponse.html":{},"interfaces/RawgApiResponse.html":{},"interfaces/RawgGame.html":{},"interfaces/User.html":{},"components/UserProfileComponent.html":{}}}],["encabezado",{"_index":274,"title":{},"body":{"components/AppComponent.html":{},"components/HeaderComponent.html":{}}}],["encontrado",{"_index":517,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/User.html":{}}}],["encontraron",{"_index":733,"title":{},"body":{"components/CategoryComponent.html":{},"components/MyLibraryComponent.html":{}}}],["end",{"_index":1547,"title":{},"body":{"index.html":{}}}],["endpoint",{"_index":130,"title":{},"body":{"injectables/ApiService.html":{},"interfaces/RawgAchievementApi.html":{},"interfaces/RawgAchievementsApiResponse.html":{},"interfaces/RawgApiResponse.html":{},"interfaces/RawgGame.html":{}}}],["enlaces",{"_index":1035,"title":{},"body":{"components/HeaderComponent.html":{}}}],["entrada",{"_index":270,"title":{},"body":{"components/AppComponent.html":{},"components/MyLibraryComponent.html":{}}}],["entrar",{"_index":1164,"title":{},"body":{"components/LoginComponent.html":{}}}],["enviar",{"_index":1329,"title":{},"body":{"components/RecoverPasswordComponent.html":{},"components/RegisterComponent.html":{}}}],["err",{"_index":639,"title":{},"body":{"components/CategoryComponent.html":{},"components/HomeComponent.html":{},"components/MyLibraryComponent.html":{}}}],["error",{"_index":198,"title":{},"body":{"injectables/ApiService.html":{},"components/CategoryComponent.html":{},"components/GameDetailModalComponent.html":{},"components/HomeComponent.html":{},"components/MyLibraryComponent.html":{},"interfaces/RawgAchievementApi.html":{},"interfaces/RawgAchievementsApiResponse.html":{},"interfaces/RawgApiResponse.html":{},"interfaces/RawgGame.html":{},"components/RecoverPasswordComponent.html":{},"components/RegisterComponent.html":{},"components/UserProfileComponent.html":{}}}],["es",{"_index":209,"title":{},"body":{"injectables/ApiService.html":{},"injectables/AuthService.html":{},"components/LoginComponent.html":{},"interfaces/RawgAchievementApi.html":{},"interfaces/RawgAchievementsApiResponse.html":{},"interfaces/RawgApiResponse.html":{},"interfaces/RawgGame.html":{},"components/RecoverPasswordComponent.html":{},"components/RegisterComponent.html":{},"interfaces/User.html":{},"components/UserProfileComponent.html":{}}}],["especial",{"_index":1340,"title":{},"body":{"components/RecoverPasswordComponent.html":{},"components/RegisterComponent.html":{},"components/UserProfileComponent.html":{}}}],["específico",{"_index":43,"title":{},"body":{"injectables/ApiService.html":{},"interfaces/Game.html":{},"interfaces/GameAchievement.html":{},"injectables/GameService.html":{},"interfaces/RawgAchievementApi.html":{},"interfaces/RawgAchievementsApiResponse.html":{},"interfaces/RawgApiResponse.html":{},"interfaces/RawgGame.html":{}}}],["est",{"_index":69,"title":{},"body":{"injectables/ApiService.html":{},"injectables/AuthService.html":{},"interfaces/Game.html":{},"interfaces/GameAchievement.html":{},"components/GameDetailModalComponent.html":{},"injectables/GameService.html":{},"interfaces/RawgAchievementApi.html":{},"interfaces/RawgAchievementsApiResponse.html":{},"interfaces/RawgApiResponse.html":{},"interfaces/RawgGame.html":{},"components/RecoverPasswordComponent.html":{},"components/RegisterComponent.html":{},"interfaces/User.html":{}}}],["esta",{"_index":124,"title":{},"body":{"injectables/ApiService.html":{},"components/CategoryComponent.html":{},"components/ConfirmationModalComponent.html":{},"components/MyLibraryComponent.html":{},"interfaces/RawgAchievementApi.html":{},"interfaces/RawgAchievementsApiResponse.html":{},"interfaces/RawgApiResponse.html":{},"interfaces/RawgGame.html":{},"miscellaneous/variables.html":{}}}],["estado",{"_index":281,"title":{},"body":{"components/AppComponent.html":{},"components/GameDetailModalComponent.html":{},"components/HeaderComponent.html":{},"components/MyLibraryComponent.html":{},"components/UserProfileComponent.html":{}}}],["estados",{"_index":1288,"title":{},"body":{"components/MyLibraryComponent.html":{}}}],["este",{"_index":266,"title":{},"body":{"components/AppComponent.html":{},"components/CategoryComponent.html":{},"interfaces/Game.html":{},"interfaces/GameAchievement.html":{},"components/GameDetailModalComponent.html":{},"injectables/GameService.html":{},"components/LoginComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/RegisterComponent.html":{},"components/UserProfileComponent.html":{}}}],["esto",{"_index":1272,"title":{},"body":{"components/MyLibraryComponent.html":{}}}],["estrategia",{"_index":1051,"title":{},"body":{"components/HeaderComponent.html":{},"components/HomeComponent.html":{}}}],["estructura",{"_index":149,"title":{},"body":{"injectables/ApiService.html":{},"components/AppComponent.html":{},"interfaces/Game.html":{},"interfaces/GameAchievement.html":{},"injectables/GameService.html":{},"interfaces/RawgAchievementApi.html":{},"interfaces/RawgAchievementsApiResponse.html":{},"interfaces/RawgApiResponse.html":{},"interfaces/RawgGame.html":{}}}],["están",{"_index":1095,"title":{},"body":{"components/HomeComponent.html":{}}}],["estás",{"_index":766,"title":{},"body":{"components/ConfirmationModalComponent.html":{},"components/MyLibraryComponent.html":{}}}],["event",{"_index":983,"title":{},"body":{"components/GameDetailModalComponent.html":{}}}],["event.target",{"_index":1008,"title":{},"body":{"components/GameDetailModalComponent.html":{}}}],["eventemitter",{"_index":770,"title":{},"body":{"components/ConfirmationModalComponent.html":{},"components/GameCardComponent.html":{},"components/GameDetailModalComponent.html":{}}}],["evento",{"_index":700,"title":{},"body":{"components/CategoryComponent.html":{},"components/ConfirmationModalComponent.html":{},"components/GameDetailModalComponent.html":{}}}],["eventos",{"_index":931,"title":{},"body":{"components/GameCardComponent.html":{}}}],["evitar",{"_index":1376,"title":{},"body":{"components/RegisterComponent.html":{},"components/UserProfileComponent.html":{}}}],["example",{"_index":284,"title":{},"body":{"components/AppComponent.html":{},"components/CategoryComponent.html":{},"components/ConfirmationModalComponent.html":{},"components/FooterComponent.html":{},"components/GameCardComponent.html":{},"components/GameDetailModalComponent.html":{},"injectables/GameService.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/MyLibraryComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/RegisterComponent.html":{},"components/UserProfileComponent.html":{}}}],["execute",{"_index":1544,"title":{},"body":{"index.html":{}}}],["existe",{"_index":504,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Game.html":{},"interfaces/GameAchievement.html":{},"injectables/GameService.html":{},"interfaces/User.html":{}}}],["existente",{"_index":915,"title":{},"body":{"interfaces/Game.html":{},"interfaces/GameAchievement.html":{},"injectables/GameService.html":{}}}],["exitoso",{"_index":508,"title":{},"body":{"injectables/AuthService.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"interfaces/User.html":{}}}],["explora",{"_index":1116,"title":{},"body":{"components/HomeComponent.html":{}}}],["export",{"_index":171,"title":{},"body":{"injectables/ApiService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthService.html":{},"components/CategoryComponent.html":{},"components/ConfirmationModalComponent.html":{},"components/FooterComponent.html":{},"interfaces/Game.html":{},"interfaces/GameAchievement.html":{},"components/GameCardComponent.html":{},"components/GameDetailModalComponent.html":{},"injectables/GameService.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/MyLibraryComponent.html":{},"interfaces/RawgAchievementApi.html":{},"interfaces/RawgAchievementsApiResponse.html":{},"interfaces/RawgApiResponse.html":{},"interfaces/RawgGame.html":{},"components/RecoverPasswordComponent.html":{},"components/RegisterComponent.html":{},"interfaces/User.html":{},"components/UserProfileComponent.html":{}}}],["exports",{"_index":351,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"overview.html":{}}}],["extractfilteroptions",{"_index":567,"title":{},"body":{"components/CategoryComponent.html":{}}}],["extrae",{"_index":657,"title":{},"body":{"components/CategoryComponent.html":{}}}],["fa",{"_index":1086,"title":{},"body":{"components/HomeComponent.html":{}}}],["false",{"_index":118,"title":{},"body":{"injectables/ApiService.html":{},"injectables/AuthService.html":{},"interfaces/Game.html":{},"interfaces/GameAchievement.html":{},"components/GameCardComponent.html":{},"injectables/GameService.html":{},"interfaces/RawgAchievementApi.html":{},"interfaces/RawgAchievementsApiResponse.html":{},"interfaces/RawgApiResponse.html":{},"interfaces/RawgGame.html":{},"interfaces/User.html":{}}}],["fas",{"_index":1085,"title":{},"body":{"components/HomeComponent.html":{}}}],["fav",{"_index":964,"title":{},"body":{"components/GameCardComponent.html":{}}}],["favor",{"_index":643,"title":{},"body":{"components/CategoryComponent.html":{},"components/LoginComponent.html":{},"components/MyLibraryComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/RegisterComponent.html":{},"components/UserProfileComponent.html":{}}}],["favorito",{"_index":848,"title":{},"body":{"interfaces/Game.html":{},"interfaces/GameAchievement.html":{},"components/GameCardComponent.html":{},"injectables/GameService.html":{},"components/MyLibraryComponent.html":{}}}],["favorito/no",{"_index":1175,"title":{},"body":{"components/MyLibraryComponent.html":{}}}],["favoritos",{"_index":1056,"title":{},"body":{"components/HeaderComponent.html":{},"components/MyLibraryComponent.html":{}}}],["fb",{"_index":1132,"title":{},"body":{"components/LoginComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/RegisterComponent.html":{},"components/UserProfileComponent.html":{}}}],["features/category/category.component",{"_index":378,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["features/home/home.component",{"_index":377,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["features/login/login.component",{"_index":382,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["features/my",{"_index":379,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["features/recover",{"_index":387,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["features/register/register.component",{"_index":383,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["features/user",{"_index":384,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["fecha",{"_index":1385,"title":{},"body":{"components/RegisterComponent.html":{},"components/UserProfileComponent.html":{}}}],["fetching",{"_index":196,"title":{},"body":{"injectables/ApiService.html":{},"interfaces/RawgAchievementApi.html":{},"interfaces/RawgAchievementsApiResponse.html":{},"interfaces/RawgApiResponse.html":{},"interfaces/RawgGame.html":{}}}],["file",{"_index":5,"title":{},"body":{"injectables/ApiService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthService.html":{},"components/CategoryComponent.html":{},"components/ConfirmationModalComponent.html":{},"components/FooterComponent.html":{},"interfaces/Game.html":{},"interfaces/GameAchievement.html":{},"components/GameCardComponent.html":{},"components/GameDetailModalComponent.html":{},"injectables/GameService.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/MyLibraryComponent.html":{},"interfaces/RawgAchievementApi.html":{},"interfaces/RawgAchievementsApiResponse.html":{},"interfaces/RawgApiResponse.html":{},"interfaces/RawgGame.html":{},"components/RecoverPasswordComponent.html":{},"components/RegisterComponent.html":{},"interfaces/User.html":{},"components/UserProfileComponent.html":{},"coverage.html":{}}}],["files",{"_index":1529,"title":{},"body":{"index.html":{}}}],["filterandrendergames",{"_index":1189,"title":{},"body":{"components/MyLibraryComponent.html":{}}}],["filteredgames",{"_index":559,"title":{},"body":{"components/CategoryComponent.html":{},"components/MyLibraryComponent.html":{}}}],["filtergames",{"_index":568,"title":{},"body":{"components/CategoryComponent.html":{}}}],["filtra",{"_index":680,"title":{},"body":{"components/CategoryComponent.html":{},"components/MyLibraryComponent.html":{}}}],["filtrado",{"_index":542,"title":{},"body":{"components/CategoryComponent.html":{}}}],["filtrados",{"_index":538,"title":{},"body":{"components/CategoryComponent.html":{}}}],["filtrarlos",{"_index":1172,"title":{},"body":{"components/MyLibraryComponent.html":{}}}],["filtro",{"_index":1291,"title":{},"body":{"components/MyLibraryComponent.html":{}}}],["filtros",{"_index":676,"title":{},"body":{"components/CategoryComponent.html":{},"components/MyLibraryComponent.html":{}}}],["first",{"_index":1552,"title":{},"body":{"index.html":{}}}],["fist",{"_index":1087,"title":{},"body":{"components/HomeComponent.html":{}}}],["footer",{"_index":812,"title":{},"body":{"components/FooterComponent.html":{}}}],["footer'},{'name",{"_index":322,"title":{},"body":{"components/AppComponent.html":{},"components/CategoryComponent.html":{},"components/ConfirmationModalComponent.html":{},"components/FooterComponent.html":{},"components/GameCardComponent.html":{},"components/GameDetailModalComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/MyLibraryComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/RegisterComponent.html":{},"components/UserProfileComponent.html":{}}}],["footer.component.css",{"_index":813,"title":{},"body":{"components/FooterComponent.html":{}}}],["footer.component.html",{"_index":814,"title":{},"body":{"components/FooterComponent.html":{}}}],["footercomponent",{"_index":321,"title":{"components/FooterComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CategoryComponent.html":{},"components/ConfirmationModalComponent.html":{},"components/FooterComponent.html":{},"components/GameCardComponent.html":{},"components/GameDetailModalComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/MyLibraryComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/RegisterComponent.html":{},"components/UserProfileComponent.html":{},"coverage.html":{},"overview.html":{}}}],["forkjoin",{"_index":613,"title":{},"body":{"components/CategoryComponent.html":{}}}],["formato",{"_index":187,"title":{},"body":{"injectables/ApiService.html":{},"interfaces/RawgAchievementApi.html":{},"interfaces/RawgAchievementsApiResponse.html":{},"interfaces/RawgApiResponse.html":{},"interfaces/RawgGame.html":{}}}],["formbuilder",{"_index":1133,"title":{},"body":{"components/LoginComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/RegisterComponent.html":{},"components/UserProfileComponent.html":{}}}],["formgroup",{"_index":1138,"title":{},"body":{"components/LoginComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/RegisterComponent.html":{},"components/UserProfileComponent.html":{},"miscellaneous/functions.html":{}}}],["formsmodule",{"_index":390,"title":{},"body":{"modules/AppModule.html":{}}}],["formulario",{"_index":1146,"title":{},"body":{"components/LoginComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/RegisterComponent.html":{},"components/UserProfileComponent.html":{}}}],["formularios",{"_index":1123,"title":{},"body":{"components/LoginComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/RegisterComponent.html":{}}}],["fortawesome/fontawesome",{"_index":1485,"title":{},"body":{"dependencies.html":{}}}],["free",{"_index":1486,"title":{},"body":{"dependencies.html":{}}}],["fugas",{"_index":1430,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["full",{"_index":406,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["fulldetailsgame",{"_index":1286,"title":{},"body":{"components/MyLibraryComponent.html":{}}}],["fullname",{"_index":457,"title":{},"body":{"injectables/AuthService.html":{},"components/RegisterComponent.html":{},"interfaces/User.html":{},"components/UserProfileComponent.html":{}}}],["funciona",{"_index":1276,"title":{},"body":{"components/MyLibraryComponent.html":{}}}],["funcionalidad",{"_index":544,"title":{},"body":{"components/CategoryComponent.html":{}}}],["función",{"_index":125,"title":{},"body":{"injectables/ApiService.html":{},"injectables/AuthService.html":{},"components/ConfirmationModalComponent.html":{},"interfaces/RawgAchievementApi.html":{},"interfaces/RawgAchievementsApiResponse.html":{},"interfaces/RawgApiResponse.html":{},"interfaces/RawgGame.html":{},"interfaces/User.html":{},"miscellaneous/functions.html":{}}}],["function",{"_index":1474,"title":{},"body":{"coverage.html":{}}}],["functions",{"_index":1495,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["further",{"_index":1556,"title":{},"body":{"index.html":{}}}],["futbol",{"_index":1112,"title":{},"body":{"components/HomeComponent.html":{}}}],["g",{"_index":629,"title":{},"body":{"components/CategoryComponent.html":{}}}],["g.id",{"_index":1014,"title":{},"body":{"components/GameDetailModalComponent.html":{}}}],["g.name).join",{"_index":236,"title":{},"body":{"injectables/ApiService.html":{},"interfaces/RawgAchievementApi.html":{},"interfaces/RawgAchievementsApiResponse.html":{},"interfaces/RawgApiResponse.html":{},"interfaces/RawgGame.html":{}}}],["g.trim()).foreach(g",{"_index":669,"title":{},"body":{"components/CategoryComponent.html":{}}}],["game",{"_index":64,"title":{"interfaces/Game.html":{}},"body":{"injectables/ApiService.html":{},"components/AppComponent.html":{},"components/CategoryComponent.html":{},"components/ConfirmationModalComponent.html":{},"components/FooterComponent.html":{},"interfaces/Game.html":{},"interfaces/GameAchievement.html":{},"components/GameCardComponent.html":{},"components/GameDetailModalComponent.html":{},"injectables/GameService.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/MyLibraryComponent.html":{},"interfaces/RawgAchievementApi.html":{},"interfaces/RawgAchievementsApiResponse.html":{},"interfaces/RawgApiResponse.html":{},"interfaces/RawgGame.html":{},"components/RecoverPasswordComponent.html":{},"components/RegisterComponent.html":{},"components/UserProfileComponent.html":{},"coverage.html":{}}}],["game.achievements",{"_index":1287,"title":{},"body":{"components/MyLibraryComponent.html":{}}}],["game.description",{"_index":1019,"title":{},"body":{"components/GameDetailModalComponent.html":{}}}],["game.description.length",{"_index":958,"title":{},"body":{"components/GameCardComponent.html":{}}}],["game.description.substring(0",{"_index":956,"title":{},"body":{"components/GameCardComponent.html":{}}}],["game.description.tolowercase().includes(searchtermlower",{"_index":694,"title":{},"body":{"components/CategoryComponent.html":{},"components/MyLibraryComponent.html":{}}}],["game.genre",{"_index":955,"title":{},"body":{"components/GameCardComponent.html":{},"components/GameDetailModalComponent.html":{}}}],["game.genre.split(',').map(g",{"_index":668,"title":{},"body":{"components/CategoryComponent.html":{}}}],["game.genre.tolowercase().includes(searchtermlower",{"_index":1241,"title":{},"body":{"components/MyLibraryComponent.html":{}}}],["game.genre.tolowercase().includes(selectedgenrelower",{"_index":698,"title":{},"body":{"components/CategoryComponent.html":{}}}],["game.hoursplayed",{"_index":959,"title":{},"body":{"components/GameCardComponent.html":{},"components/GameDetailModalComponent.html":{}}}],["game.id",{"_index":723,"title":{},"body":{"components/CategoryComponent.html":{},"interfaces/Game.html":{},"interfaces/GameAchievement.html":{},"injectables/GameService.html":{},"components/MyLibraryComponent.html":{}}}],["game.isfavorite",{"_index":963,"title":{},"body":{"components/GameCardComponent.html":{},"components/MyLibraryComponent.html":{}}}],["game.platform",{"_index":888,"title":{},"body":{"interfaces/Game.html":{},"interfaces/GameAchievement.html":{},"components/GameCardComponent.html":{},"components/GameDetailModalComponent.html":{},"injectables/GameService.html":{}}}],["game.platform.split(',').map(p",{"_index":665,"title":{},"body":{"components/CategoryComponent.html":{}}}],["game.platform.tolowercase().includes(searchtermlower",{"_index":1240,"title":{},"body":{"components/MyLibraryComponent.html":{}}}],["game.platform.tolowercase().includes(selectedplatformlower",{"_index":696,"title":{},"body":{"components/CategoryComponent.html":{}}}],["game.played",{"_index":961,"title":{},"body":{"components/GameCardComponent.html":{},"components/MyLibraryComponent.html":{}}}],["game.title",{"_index":714,"title":{},"body":{"components/CategoryComponent.html":{},"interfaces/Game.html":{},"interfaces/GameAchievement.html":{},"components/GameCardComponent.html":{},"components/GameDetailModalComponent.html":{},"injectables/GameService.html":{}}}],["game.title.tolowercase().includes(searchtermlower",{"_index":693,"title":{},"body":{"components/CategoryComponent.html":{},"components/MyLibraryComponent.html":{}}}],["game/game.service",{"_index":147,"title":{},"body":{"injectables/ApiService.html":{},"interfaces/RawgAchievementApi.html":{},"interfaces/RawgAchievementsApiResponse.html":{},"interfaces/RawgApiResponse.html":{},"interfaces/RawgGame.html":{}}}],["gameachievement",{"_index":57,"title":{"interfaces/GameAchievement.html":{}},"body":{"injectables/ApiService.html":{},"interfaces/Game.html":{},"interfaces/GameAchievement.html":{},"injectables/GameService.html":{},"interfaces/RawgAchievementApi.html":{},"interfaces/RawgAchievementsApiResponse.html":{},"interfaces/RawgApiResponse.html":{},"interfaces/RawgGame.html":{},"coverage.html":{}}}],["gamecardcomponent",{"_index":323,"title":{"components/GameCardComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CategoryComponent.html":{},"components/ConfirmationModalComponent.html":{},"components/FooterComponent.html":{},"components/GameCardComponent.html":{},"components/GameDetailModalComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/MyLibraryComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/RegisterComponent.html":{},"components/UserProfileComponent.html":{},"coverage.html":{},"overview.html":{}}}],["gamedata",{"_index":878,"title":{},"body":{"interfaces/Game.html":{},"interfaces/GameAchievement.html":{},"injectables/GameService.html":{}}}],["gamedata.achievements",{"_index":891,"title":{},"body":{"interfaces/Game.html":{},"interfaces/GameAchievement.html":{},"injectables/GameService.html":{}}}],["gamedata.achievements.length",{"_index":892,"title":{},"body":{"interfaces/Game.html":{},"interfaces/GameAchievement.html":{},"injectables/GameService.html":{}}}],["gamedata.achievements.map(ach",{"_index":893,"title":{},"body":{"interfaces/Game.html":{},"interfaces/GameAchievement.html":{},"injectables/GameService.html":{}}}],["gamedata.description",{"_index":904,"title":{},"body":{"interfaces/Game.html":{},"interfaces/GameAchievement.html":{},"injectables/GameService.html":{}}}],["gamedata.genre",{"_index":906,"title":{},"body":{"interfaces/Game.html":{},"interfaces/GameAchievement.html":{},"injectables/GameService.html":{}}}],["gamedata.hoursplayed",{"_index":908,"title":{},"body":{"interfaces/Game.html":{},"interfaces/GameAchievement.html":{},"injectables/GameService.html":{}}}],["gamedata.id",{"_index":882,"title":{},"body":{"interfaces/Game.html":{},"interfaces/GameAchievement.html":{},"injectables/GameService.html":{}}}],["gamedata.image",{"_index":909,"title":{},"body":{"interfaces/Game.html":{},"interfaces/GameAchievement.html":{},"injectables/GameService.html":{}}}],["gamedata.platform",{"_index":889,"title":{},"body":{"interfaces/Game.html":{},"interfaces/GameAchievement.html":{},"injectables/GameService.html":{}}}],["gamedata.title",{"_index":887,"title":{},"body":{"interfaces/Game.html":{},"interfaces/GameAchievement.html":{},"injectables/GameService.html":{}}}],["gamedetailmodal",{"_index":560,"title":{},"body":{"components/CategoryComponent.html":{},"components/HomeComponent.html":{},"components/MyLibraryComponent.html":{}}}],["gamedetailmodalcomponent",{"_index":325,"title":{"components/GameDetailModalComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CategoryComponent.html":{},"components/ConfirmationModalComponent.html":{},"components/FooterComponent.html":{},"components/GameCardComponent.html":{},"components/GameDetailModalComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/MyLibraryComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/RegisterComponent.html":{},"components/UserProfileComponent.html":{},"coverage.html":{},"overview.html":{}}}],["gameid",{"_index":48,"title":{},"body":{"injectables/ApiService.html":{},"interfaces/Game.html":{},"interfaces/GameAchievement.html":{},"components/GameDetailModalComponent.html":{},"injectables/GameService.html":{},"components/MyLibraryComponent.html":{},"interfaces/RawgAchievementApi.html":{},"interfaces/RawgAchievementsApiResponse.html":{},"interfaces/RawgApiResponse.html":{},"interfaces/RawgGame.html":{}}}],["gameidtodelete",{"_index":1186,"title":{},"body":{"components/MyLibraryComponent.html":{}}}],["gamepad",{"_index":1113,"title":{},"body":{"components/HomeComponent.html":{}}}],["games",{"_index":197,"title":{},"body":{"injectables/ApiService.html":{},"components/CategoryComponent.html":{},"interfaces/Game.html":{},"interfaces/GameAchievement.html":{},"injectables/GameService.html":{},"interfaces/RawgAchievementApi.html":{},"interfaces/RawgAchievementsApiResponse.html":{},"interfaces/RawgApiResponse.html":{},"interfaces/RawgGame.html":{}}}],["games/{id",{"_index":224,"title":{},"body":{"injectables/ApiService.html":{},"interfaces/RawgAchievementApi.html":{},"interfaces/RawgAchievementsApiResponse.html":{},"interfaces/RawgApiResponse.html":{},"interfaces/RawgGame.html":{}}}],["gameservice",{"_index":576,"title":{"injectables/GameService.html":{}},"body":{"components/CategoryComponent.html":{},"interfaces/Game.html":{},"interfaces/GameAchievement.html":{},"components/GameDetailModalComponent.html":{},"injectables/GameService.html":{},"components/MyLibraryComponent.html":{},"coverage.html":{}}}],["gametodelete",{"_index":1262,"title":{},"body":{"components/MyLibraryComponent.html":{}}}],["gametodelete.title",{"_index":1268,"title":{},"body":{"components/MyLibraryComponent.html":{}}}],["gametoupdate",{"_index":1012,"title":{},"body":{"components/GameDetailModalComponent.html":{},"components/MyLibraryComponent.html":{}}}],["gametoupdate.achievements[achievementindex].completed",{"_index":1016,"title":{},"body":{"components/GameDetailModalComponent.html":{}}}],["gametoupdate.hoursplayed",{"_index":1257,"title":{},"body":{"components/MyLibraryComponent.html":{}}}],["gametoupdate.isfavorite",{"_index":1246,"title":{},"body":{"components/MyLibraryComponent.html":{}}}],["gametoupdate.played",{"_index":1248,"title":{},"body":{"components/MyLibraryComponent.html":{}}}],["gametoupdate.title",{"_index":1252,"title":{},"body":{"components/MyLibraryComponent.html":{}}}],["gametoupdate?.achievements",{"_index":1015,"title":{},"body":{"components/GameDetailModalComponent.html":{}}}],["gamewithachievements",{"_index":708,"title":{},"body":{"components/CategoryComponent.html":{}}}],["generate",{"_index":1532,"title":{},"body":{"index.html":{}}}],["generated",{"_index":1513,"title":{},"body":{"index.html":{}}}],["genre",{"_index":234,"title":{},"body":{"injectables/ApiService.html":{},"components/CategoryComponent.html":{},"interfaces/Game.html":{},"interfaces/GameAchievement.html":{},"injectables/GameService.html":{},"interfaces/RawgAchievementApi.html":{},"interfaces/RawgAchievementsApiResponse.html":{},"interfaces/RawgApiResponse.html":{},"interfaces/RawgGame.html":{}}}],["genre.name",{"_index":251,"title":{},"body":{"injectables/ApiService.html":{},"interfaces/RawgAchievementApi.html":{},"interfaces/RawgAchievementsApiResponse.html":{},"interfaces/RawgApiResponse.html":{},"interfaces/RawgGame.html":{}}}],["genres",{"_index":73,"title":{},"body":{"injectables/ApiService.html":{},"components/CategoryComponent.html":{},"interfaces/RawgAchievementApi.html":{},"interfaces/RawgAchievementsApiResponse.html":{},"interfaces/RawgApiResponse.html":{},"interfaces/RawgGame.html":{}}}],["genres.add(g",{"_index":670,"title":{},"body":{"components/CategoryComponent.html":{}}}],["genérico",{"_index":739,"title":{},"body":{"components/ConfirmationModalComponent.html":{}}}],["gestiona",{"_index":851,"title":{},"body":{"interfaces/Game.html":{},"interfaces/GameAchievement.html":{},"injectables/GameService.html":{},"components/HeaderComponent.html":{}}}],["gestionando",{"_index":279,"title":{},"body":{"components/AppComponent.html":{}}}],["gestionar",{"_index":825,"title":{},"body":{"interfaces/Game.html":{},"interfaces/GameAchievement.html":{},"components/GameDetailModalComponent.html":{},"injectables/GameService.html":{},"components/MyLibraryComponent.html":{}}}],["getcategoryicon",{"_index":1069,"title":{},"body":{"components/HomeComponent.html":{}}}],["getcategoryicon(categoryname",{"_index":1071,"title":{},"body":{"components/HomeComponent.html":{}}}],["getcurrentuser",{"_index":426,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/User.html":{}}}],["getgameachievements",{"_index":14,"title":{},"body":{"injectables/ApiService.html":{}}}],["getgameachievements(gameid",{"_index":32,"title":{},"body":{"injectables/ApiService.html":{},"interfaces/RawgAchievementApi.html":{},"interfaces/RawgAchievementsApiResponse.html":{},"interfaces/RawgApiResponse.html":{},"interfaces/RawgGame.html":{}}}],["getgamedetails",{"_index":15,"title":{},"body":{"injectables/ApiService.html":{}}}],["getgamedetails(id",{"_index":58,"title":{},"body":{"injectables/ApiService.html":{},"interfaces/RawgAchievementApi.html":{},"interfaces/RawgAchievementsApiResponse.html":{},"interfaces/RawgApiResponse.html":{},"interfaces/RawgGame.html":{}}}],["getgames",{"_index":16,"title":{},"body":{"injectables/ApiService.html":{}}}],["getgames(searchquery",{"_index":71,"title":{},"body":{"injectables/ApiService.html":{},"interfaces/RawgAchievementApi.html":{},"interfaces/RawgAchievementsApiResponse.html":{},"interfaces/RawgApiResponse.html":{},"interfaces/RawgGame.html":{}}}],["getgenres",{"_index":17,"title":{},"body":{"injectables/ApiService.html":{},"interfaces/RawgAchievementApi.html":{},"interfaces/RawgAchievementsApiResponse.html":{},"interfaces/RawgApiResponse.html":{},"interfaces/RawgGame.html":{}}}],["getgetcurrentuser",{"_index":447,"title":{},"body":{"injectables/AuthService.html":{}}}],["getplatforms",{"_index":18,"title":{},"body":{"injectables/ApiService.html":{},"interfaces/RawgAchievementApi.html":{},"interfaces/RawgAchievementsApiResponse.html":{},"interfaces/RawgApiResponse.html":{},"interfaces/RawgGame.html":{}}}],["getting",{"_index":1509,"title":{"index.html":{}},"body":{}}],["getusergames",{"_index":1026,"title":{},"body":{"injectables/GameService.html":{}}}],["getusergames(username",{"_index":868,"title":{},"body":{"interfaces/Game.html":{},"interfaces/GameAchievement.html":{},"injectables/GameService.html":{}}}],["go",{"_index":1559,"title":{},"body":{"index.html":{}}}],["graph",{"_index":1567,"title":{},"body":{"modules.html":{}}}],["guardar",{"_index":873,"title":{},"body":{"interfaces/Game.html":{},"interfaces/GameAchievement.html":{},"components/GameDetailModalComponent.html":{},"injectables/GameService.html":{},"components/UserProfileComponent.html":{}}}],["guardián",{"_index":1274,"title":{},"body":{"components/MyLibraryComponent.html":{}}}],["guards/auth.guard",{"_index":401,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["género",{"_index":661,"title":{},"body":{"components/CategoryComponent.html":{},"components/GameCardComponent.html":{},"components/GameDetailModalComponent.html":{}}}],["géneros",{"_index":88,"title":{},"body":{"injectables/ApiService.html":{},"components/CategoryComponent.html":{},"interfaces/Game.html":{},"interfaces/GameAchievement.html":{},"injectables/GameService.html":{},"interfaces/RawgAchievementApi.html":{},"interfaces/RawgAchievementsApiResponse.html":{},"interfaces/RawgApiResponse.html":{},"interfaces/RawgGame.html":{}}}],["h",{"_index":960,"title":{},"body":{"components/GameCardComponent.html":{},"components/GameDetailModalComponent.html":{}}}],["ha",{"_index":836,"title":{},"body":{"interfaces/Game.html":{},"interfaces/GameAchievement.html":{},"components/GameDetailModalComponent.html":{},"injectables/GameService.html":{}}}],["hace",{"_index":702,"title":{},"body":{"components/CategoryComponent.html":{},"components/ConfirmationModalComponent.html":{}}}],["hacer",{"_index":653,"title":{},"body":{"components/CategoryComponent.html":{}}}],["handleaddtolibrary",{"_index":569,"title":{},"body":{"components/CategoryComponent.html":{}}}],["handleaddtolibrary(game",{"_index":585,"title":{},"body":{"components/CategoryComponent.html":{}}}],["handledeletegameconfirmation",{"_index":1190,"title":{},"body":{"components/MyLibraryComponent.html":{}}}],["handledeletegameconfirmation(gameid",{"_index":1198,"title":{},"body":{"components/MyLibraryComponent.html":{}}}],["handleprofileupdate",{"_index":1399,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["handletogglefavorite",{"_index":1191,"title":{},"body":{"components/MyLibraryComponent.html":{}}}],["handletogglefavorite(gameid",{"_index":1200,"title":{},"body":{"components/MyLibraryComponent.html":{}}}],["handletoggleplayed",{"_index":1192,"title":{},"body":{"components/MyLibraryComponent.html":{}}}],["handletoggleplayed(gameid",{"_index":1202,"title":{},"body":{"components/MyLibraryComponent.html":{}}}],["handleupdatehoursplayed",{"_index":1193,"title":{},"body":{"components/MyLibraryComponent.html":{}}}],["handleupdatehoursplayed(gameid",{"_index":1204,"title":{},"body":{"components/MyLibraryComponent.html":{}}}],["hat",{"_index":1089,"title":{},"body":{"components/HomeComponent.html":{}}}],["hay",{"_index":1023,"title":{},"body":{"components/GameDetailModalComponent.html":{},"components/UserProfileComponent.html":{}}}],["haya",{"_index":787,"title":{},"body":{"components/ConfirmationModalComponent.html":{}}}],["header",{"_index":1040,"title":{},"body":{"components/HeaderComponent.html":{}}}],["header'},{'name",{"_index":328,"title":{},"body":{"components/AppComponent.html":{},"components/CategoryComponent.html":{},"components/ConfirmationModalComponent.html":{},"components/FooterComponent.html":{},"components/GameCardComponent.html":{},"components/GameDetailModalComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/MyLibraryComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/RegisterComponent.html":{},"components/UserProfileComponent.html":{}}}],["header.component.css",{"_index":1041,"title":{},"body":{"components/HeaderComponent.html":{}}}],["header.component.html",{"_index":1042,"title":{},"body":{"components/HeaderComponent.html":{}}}],["headercomponent",{"_index":327,"title":{"components/HeaderComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CategoryComponent.html":{},"components/ConfirmationModalComponent.html":{},"components/FooterComponent.html":{},"components/GameCardComponent.html":{},"components/GameDetailModalComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/MyLibraryComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/RegisterComponent.html":{},"components/UserProfileComponent.html":{},"coverage.html":{},"overview.html":{}}}],["help",{"_index":1557,"title":{},"body":{"index.html":{}}}],["hide",{"_index":754,"title":{},"body":{"components/ConfirmationModalComponent.html":{},"components/GameDetailModalComponent.html":{}}}],["hijo",{"_index":1282,"title":{},"body":{"components/MyLibraryComponent.html":{}}}],["home",{"_index":1063,"title":{},"body":{"components/HomeComponent.html":{}}}],["home'},{'name",{"_index":330,"title":{},"body":{"components/AppComponent.html":{},"components/CategoryComponent.html":{},"components/ConfirmationModalComponent.html":{},"components/FooterComponent.html":{},"components/GameCardComponent.html":{},"components/GameDetailModalComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/MyLibraryComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/RegisterComponent.html":{},"components/UserProfileComponent.html":{}}}],["home.component.css",{"_index":1064,"title":{},"body":{"components/HomeComponent.html":{}}}],["home.component.html",{"_index":1065,"title":{},"body":{"components/HomeComponent.html":{}}}],["homecomponent",{"_index":329,"title":{"components/HomeComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/CategoryComponent.html":{},"components/ConfirmationModalComponent.html":{},"components/FooterComponent.html":{},"components/GameCardComponent.html":{},"components/GameDetailModalComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/MyLibraryComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/RegisterComponent.html":{},"components/UserProfileComponent.html":{},"coverage.html":{},"overview.html":{}}}],["hook",{"_index":1001,"title":{},"body":{"components/GameDetailModalComponent.html":{}}}],["horas",{"_index":845,"title":{},"body":{"interfaces/Game.html":{},"interfaces/GameAchievement.html":{},"components/GameCardComponent.html":{},"components/GameDetailModalComponent.html":{},"injectables/GameService.html":{},"components/MyLibraryComponent.html":{}}}],["hoursplayed",{"_index":237,"title":{},"body":{"injectables/ApiService.html":{},"interfaces/Game.html":{},"interfaces/GameAchievement.html":{},"injectables/GameService.html":{},"interfaces/RawgAchievementApi.html":{},"interfaces/RawgAchievementsApiResponse.html":{},"interfaces/RawgApiResponse.html":{},"interfaces/RawgGame.html":{}}}],["html",{"_index":307,"title":{},"body":{"components/AppComponent.html":{},"components/CategoryComponent.html":{},"components/ConfirmationModalComponent.html":{},"components/FooterComponent.html":{},"components/GameCardComponent.html":{},"components/GameDetailModalComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/MyLibraryComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/RegisterComponent.html":{},"components/UserProfileComponent.html":{}}}],["htmlinputelement).checked",{"_index":1009,"title":{},"body":{"components/GameDetailModalComponent.html":{}}}],["http",{"_index":31,"title":{},"body":{"injectables/ApiService.html":{},"interfaces/RawgAchievementApi.html":{},"interfaces/RawgAchievementsApiResponse.html":{},"interfaces/RawgApiResponse.html":{},"interfaces/RawgGame.html":{}}}],["http://localhost:4200",{"_index":1524,"title":{},"body":{"index.html":{}}}],["httpclient",{"_index":23,"title":{},"body":{"injectables/ApiService.html":{},"interfaces/RawgAchievementApi.html":{},"interfaces/RawgAchievementsApiResponse.html":{},"interfaces/RawgApiResponse.html":{},"interfaces/RawgGame.html":{}}}],["httpclientmodule",{"_index":367,"title":{},"body":{"modules/AppModule.html":{}}}],["httpparams",{"_index":141,"title":{},"body":{"injectables/ApiService.html":{},"interfaces/RawgAchievementApi.html":{},"interfaces/RawgAchievementsApiResponse.html":{},"interfaces/RawgApiResponse.html":{},"interfaces/RawgGame.html":{}}}],["httpparams().set('key",{"_index":177,"title":{},"body":{"injectables/ApiService.html":{},"interfaces/RawgAchievementApi.html":{},"interfaces/RawgAchievementsApiResponse.html":{},"interfaces/RawgApiResponse.html":{},"interfaces/RawgGame.html":{}}}],["https://api.rawg.io/api",{"_index":137,"title":{},"body":{"injectables/ApiService.html":{},"interfaces/RawgAchievementApi.html":{},"interfaces/RawgAchievementsApiResponse.html":{},"interfaces/RawgApiResponse.html":{},"interfaces/RawgGame.html":{}}}],["https://placehold.co/100x100/374151/d1d5db?text=ach",{"_index":247,"title":{},"body":{"injectables/ApiService.html":{},"interfaces/RawgAchievementApi.html":{},"interfaces/RawgAchievementsApiResponse.html":{},"interfaces/RawgApiResponse.html":{},"interfaces/RawgGame.html":{}}}],["https://placehold.co/400x250/374151/d1d5db?text=no+image",{"_index":240,"title":{},"body":{"injectables/ApiService.html":{},"interfaces/Game.html":{},"interfaces/GameAchievement.html":{},"injectables/GameService.html":{},"interfaces/RawgAchievementApi.html":{},"interfaces/RawgAchievementsApiResponse.html":{},"interfaces/RawgApiResponse.html":{},"interfaces/RawgGame.html":{}}}],["iconclass",{"_index":1078,"title":{},"body":{"components/HomeComponent.html":{}}}],["id",{"_index":46,"title":{},"body":{"injectables/ApiService.html":{},"interfaces/Game.html":{},"interfaces/GameAchievement.html":{},"components/GameDetailModalComponent.html":{},"injectables/GameService.html":{},"components/MyLibraryComponent.html":{},"interfaces/RawgAchievementApi.html":{},"interfaces/RawgAchievementsApiResponse.html":{},"interfaces/RawgApiResponse.html":{},"interfaces/RawgGame.html":{}}}],["identificador",{"_index":839,"title":{},"body":{"interfaces/Game.html":{},"interfaces/GameAchievement.html":{},"injectables/GameService.html":{}}}],["identifier",{"_index":1438,"title":{},"body":{"coverage.html":{}}}],["ids",{"_index":85,"title":{},"body":{"injectables/ApiService.html":{},"interfaces/RawgAchievementApi.html":{},"interfaces/RawgAchievementsApiResponse.html":{},"interfaces/RawgApiResponse.html":{},"interfaces/RawgGame.html":{}}}],["image",{"_index":167,"title":{},"body":{"injectables/ApiService.html":{},"interfaces/Game.html":{},"interfaces/GameAchievement.html":{},"injectables/GameService.html":{},"interfaces/RawgAchievementApi.html":{},"interfaces/RawgAchievementsApiResponse.html":{},"interfaces/RawgApiResponse.html":{},"interfaces/RawgGame.html":{}}}],["imagen",{"_index":834,"title":{},"body":{"interfaces/Game.html":{},"interfaces/GameAchievement.html":{},"injectables/GameService.html":{}}}],["implements",{"_index":285,"title":{},"body":{"components/AppComponent.html":{},"components/CategoryComponent.html":{},"components/ConfirmationModalComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/MyLibraryComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/RegisterComponent.html":{},"components/UserProfileComponent.html":{},"index.html":{}}}],["import",{"_index":139,"title":{},"body":{"injectables/ApiService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthService.html":{},"components/CategoryComponent.html":{},"components/ConfirmationModalComponent.html":{},"components/FooterComponent.html":{},"interfaces/Game.html":{},"interfaces/GameAchievement.html":{},"components/GameCardComponent.html":{},"components/GameDetailModalComponent.html":{},"injectables/GameService.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/MyLibraryComponent.html":{},"interfaces/RawgAchievementApi.html":{},"interfaces/RawgAchievementsApiResponse.html":{},"interfaces/RawgApiResponse.html":{},"interfaces/RawgGame.html":{},"components/RecoverPasswordComponent.html":{},"components/RegisterComponent.html":{},"interfaces/User.html":{},"components/UserProfileComponent.html":{}}}],["importa",{"_index":782,"title":{},"body":{"components/ConfirmationModalComponent.html":{}}}],["imports",{"_index":362,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["includefulldescription",{"_index":121,"title":{},"body":{"injectables/ApiService.html":{},"interfaces/RawgAchievementApi.html":{},"interfaces/RawgAchievementsApiResponse.html":{},"interfaces/RawgApiResponse.html":{},"interfaces/RawgGame.html":{}}}],["incluir",{"_index":134,"title":{},"body":{"injectables/ApiService.html":{},"interfaces/RawgAchievementApi.html":{},"interfaces/RawgAchievementsApiResponse.html":{},"interfaces/RawgApiResponse.html":{},"interfaces/RawgGame.html":{}}}],["incluye",{"_index":65,"title":{},"body":{"injectables/ApiService.html":{},"interfaces/RawgAchievementApi.html":{},"interfaces/RawgAchievementsApiResponse.html":{},"interfaces/RawgApiResponse.html":{},"interfaces/RawgGame.html":{},"components/RegisterComponent.html":{},"components/UserProfileComponent.html":{}}}],["incluyendo",{"_index":823,"title":{},"body":{"interfaces/Game.html":{},"interfaces/GameAchievement.html":{},"injectables/GameService.html":{}}}],["incorrectos",{"_index":500,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/User.html":{}}}],["index",{"_index":7,"title":{"index.html":{}},"body":{"injectables/ApiService.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/CategoryComponent.html":{},"components/ConfirmationModalComponent.html":{},"interfaces/Game.html":{},"interfaces/GameAchievement.html":{},"components/GameCardComponent.html":{},"components/GameDetailModalComponent.html":{},"injectables/GameService.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/MyLibraryComponent.html":{},"interfaces/RawgAchievementApi.html":{},"interfaces/RawgAchievementsApiResponse.html":{},"interfaces/RawgApiResponse.html":{},"interfaces/RawgGame.html":{},"components/RecoverPasswordComponent.html":{},"components/RegisterComponent.html":{},"interfaces/User.html":{},"components/UserProfileComponent.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["indica",{"_index":132,"title":{},"body":{"injectables/ApiService.html":{},"interfaces/Game.html":{},"interfaces/GameAchievement.html":{},"injectables/GameService.html":{},"interfaces/RawgAchievementApi.html":{},"interfaces/RawgAchievementsApiResponse.html":{},"interfaces/RawgApiResponse.html":{},"interfaces/RawgGame.html":{}}}],["indicar",{"_index":208,"title":{},"body":{"injectables/ApiService.html":{},"interfaces/RawgAchievementApi.html":{},"interfaces/RawgAchievementsApiResponse.html":{},"interfaces/RawgApiResponse.html":{},"interfaces/RawgGame.html":{}}}],["individual",{"_index":166,"title":{},"body":{"injectables/ApiService.html":{},"interfaces/Game.html":{},"interfaces/GameAchievement.html":{},"components/GameCardComponent.html":{},"injectables/GameService.html":{},"interfaces/RawgAchievementApi.html":{},"interfaces/RawgAchievementsApiResponse.html":{},"interfaces/RawgApiResponse.html":{},"interfaces/RawgGame.html":{}}}],["info",{"_index":3,"title":{},"body":{"injectables/ApiService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthService.html":{},"components/CategoryComponent.html":{},"components/ConfirmationModalComponent.html":{},"components/FooterComponent.html":{},"interfaces/Game.html":{},"interfaces/GameAchievement.html":{},"components/GameCardComponent.html":{},"components/GameDetailModalComponent.html":{},"injectables/GameService.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/MyLibraryComponent.html":{},"interfaces/RawgAchievementApi.html":{},"interfaces/RawgAchievementsApiResponse.html":{},"interfaces/RawgApiResponse.html":{},"interfaces/RawgGame.html":{},"components/RecoverPasswordComponent.html":{},"components/RegisterComponent.html":{},"interfaces/User.html":{},"components/UserProfileComponent.html":{}}}],["información",{"_index":810,"title":{},"body":{"components/FooterComponent.html":{},"components/GameCardComponent.html":{}}}],["ingresar",{"_index":1119,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/UserProfileComponent.html":{}}}],["inicia",{"_index":1293,"title":{},"body":{"components/MyLibraryComponent.html":{},"components/RegisterComponent.html":{},"components/UserProfileComponent.html":{}}}],["inicializa",{"_index":469,"title":{},"body":{"injectables/AuthService.html":{},"components/GameDetailModalComponent.html":{},"components/LoginComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/RegisterComponent.html":{},"interfaces/User.html":{},"components/UserProfileComponent.html":{}}}],["inicializada",{"_index":1003,"title":{},"body":{"components/GameDetailModalComponent.html":{}}}],["inicializado",{"_index":788,"title":{},"body":{"components/ConfirmationModalComponent.html":{}}}],["inicializar",{"_index":783,"title":{},"body":{"components/ConfirmationModalComponent.html":{}}}],["iniciar",{"_index":486,"title":{},"body":{"injectables/AuthService.html":{},"components/CategoryComponent.html":{},"components/GameDetailModalComponent.html":{},"components/LoginComponent.html":{},"components/MyLibraryComponent.html":{},"interfaces/User.html":{},"miscellaneous/variables.html":{}}}],["inicio",{"_index":404,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/RegisterComponent.html":{},"components/UserProfileComponent.html":{}}}],["init",{"_index":421,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/User.html":{}}}],["initialachievements",{"_index":890,"title":{},"body":{"interfaces/Game.html":{},"interfaces/GameAchievement.html":{},"injectables/GameService.html":{}}}],["initprofileform",{"_index":1400,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["initprofileform(user",{"_index":1403,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["inject(authservice",{"_index":1580,"title":{},"body":{"miscellaneous/variables.html":{}}}],["inject(router",{"_index":1581,"title":{},"body":{"miscellaneous/variables.html":{}}}],["injectable",{"_index":0,"title":{"injectables/ApiService.html":{},"injectables/AuthService.html":{},"injectables/GameService.html":{}},"body":{"injectables/ApiService.html":{},"injectables/AuthService.html":{},"interfaces/Game.html":{},"interfaces/GameAchievement.html":{},"injectables/GameService.html":{},"interfaces/RawgAchievementApi.html":{},"interfaces/RawgAchievementsApiResponse.html":{},"interfaces/RawgApiResponse.html":{},"interfaces/RawgGame.html":{},"interfaces/User.html":{},"coverage.html":{}}}],["injectables",{"_index":2,"title":{},"body":{"injectables/ApiService.html":{},"injectables/AuthService.html":{},"injectables/GameService.html":{},"overview.html":{}}}],["input",{"_index":780,"title":{},"body":{"components/ConfirmationModalComponent.html":{},"components/GameCardComponent.html":{},"components/GameDetailModalComponent.html":{}}}],["inputs",{"_index":759,"title":{},"body":{"components/ConfirmationModalComponent.html":{},"components/GameCardComponent.html":{},"components/GameDetailModalComponent.html":{}}}],["instancia",{"_index":784,"title":{},"body":{"components/ConfirmationModalComponent.html":{},"components/GameDetailModalComponent.html":{}}}],["integra",{"_index":1177,"title":{},"body":{"components/MyLibraryComponent.html":{}}}],["integridad",{"_index":856,"title":{},"body":{"interfaces/Game.html":{},"interfaces/GameAchievement.html":{},"injectables/GameService.html":{}}}],["intenta",{"_index":1289,"title":{},"body":{"components/MyLibraryComponent.html":{}}}],["interactuar",{"_index":862,"title":{},"body":{"interfaces/Game.html":{},"interfaces/GameAchievement.html":{},"components/GameDetailModalComponent.html":{},"injectables/GameService.html":{}}}],["interface",{"_index":151,"title":{"interfaces/Game.html":{},"interfaces/GameAchievement.html":{},"interfaces/RawgAchievementApi.html":{},"interfaces/RawgAchievementsApiResponse.html":{},"interfaces/RawgApiResponse.html":{},"interfaces/RawgGame.html":{},"interfaces/User.html":{}},"body":{"injectables/ApiService.html":{},"injectables/AuthService.html":{},"interfaces/Game.html":{},"interfaces/GameAchievement.html":{},"injectables/GameService.html":{},"interfaces/RawgAchievementApi.html":{},"interfaces/RawgAchievementsApiResponse.html":{},"interfaces/RawgApiResponse.html":{},"interfaces/RawgGame.html":{},"interfaces/User.html":{},"coverage.html":{}}}],["interfaces",{"_index":820,"title":{},"body":{"interfaces/Game.html":{},"interfaces/GameAchievement.html":{},"injectables/GameService.html":{},"interfaces/RawgAchievementApi.html":{},"interfaces/RawgAchievementsApiResponse.html":{},"interfaces/RawgApiResponse.html":{},"interfaces/RawgGame.html":{},"interfaces/User.html":{},"overview.html":{}}}],["interfaz",{"_index":110,"title":{},"body":{"injectables/ApiService.html":{},"interfaces/RawgAchievementApi.html":{},"interfaces/RawgAchievementsApiResponse.html":{},"interfaces/RawgApiResponse.html":{},"interfaces/RawgGame.html":{}}}],["introduce",{"_index":1259,"title":{},"body":{"components/MyLibraryComponent.html":{}}}],["inténtalo",{"_index":646,"title":{},"body":{"components/CategoryComponent.html":{}}}],["inválido",{"_index":1333,"title":{},"body":{"components/RecoverPasswordComponent.html":{},"components/RegisterComponent.html":{}}}],["inyecta",{"_index":857,"title":{},"body":{"interfaces/Game.html":{},"interfaces/GameAchievement.html":{},"injectables/GameService.html":{}}}],["ir",{"_index":1435,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["iscompleted",{"_index":1010,"title":{},"body":{"components/GameDetailModalComponent.html":{}}}],["isfavorite",{"_index":241,"title":{},"body":{"injectables/ApiService.html":{},"interfaces/Game.html":{},"interfaces/GameAchievement.html":{},"injectables/GameService.html":{},"interfaces/RawgAchievementApi.html":{},"interfaces/RawgAchievementsApiResponse.html":{},"interfaces/RawgApiResponse.html":{},"interfaces/RawgGame.html":{}}}],["isnan(parsedhours",{"_index":1256,"title":{},"body":{"components/MyLibraryComponent.html":{}}}],["jefe",{"_index":901,"title":{},"body":{"interfaces/Game.html":{},"interfaces/GameAchievement.html":{},"injectables/GameService.html":{}}}],["json.parse(localstorage.getitem(auth_storage_key",{"_index":491,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/User.html":{}}}],["json.parse(localstorage.getitem(user_games_key",{"_index":871,"title":{},"body":{"interfaces/Game.html":{},"interfaces/GameAchievement.html":{},"injectables/GameService.html":{}}}],["json.parse(storeduser",{"_index":467,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/User.html":{}}}],["json.stringify",{"_index":475,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/User.html":{}}}],["json.stringify(allusergames",{"_index":876,"title":{},"body":{"interfaces/Game.html":{},"interfaces/GameAchievement.html":{},"injectables/GameService.html":{}}}],["json.stringify(user",{"_index":496,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/User.html":{}}}],["json.stringify(users",{"_index":506,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/User.html":{}}}],["json.stringify(users[userindex",{"_index":521,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/User.html":{}}}],["juego",{"_index":42,"title":{},"body":{"injectables/ApiService.html":{},"components/CategoryComponent.html":{},"interfaces/Game.html":{},"interfaces/GameAchievement.html":{},"components/GameCardComponent.html":{},"components/GameDetailModalComponent.html":{},"injectables/GameService.html":{},"components/MyLibraryComponent.html":{},"interfaces/RawgAchievementApi.html":{},"interfaces/RawgAchievementsApiResponse.html":{},"interfaces/RawgApiResponse.html":{},"interfaces/RawgGame.html":{}}}],["juegos",{"_index":78,"title":{},"body":{"injectables/ApiService.html":{},"components/CategoryComponent.html":{},"interfaces/Game.html":{},"interfaces/GameAchievement.html":{},"components/GameDetailModalComponent.html":{},"injectables/GameService.html":{},"components/HomeComponent.html":{},"components/MyLibraryComponent.html":{},"interfaces/RawgAchievementApi.html":{},"interfaces/RawgAchievementsApiResponse.html":{},"interfaces/RawgApiResponse.html":{},"interfaces/RawgGame.html":{}}}],["jugadas",{"_index":1174,"title":{},"body":{"components/MyLibraryComponent.html":{}}}],["jugado",{"_index":846,"title":{},"body":{"interfaces/Game.html":{},"interfaces/GameAchievement.html":{},"components/GameCardComponent.html":{},"injectables/GameService.html":{},"components/MyLibraryComponent.html":{}}}],["jugado/pendiente",{"_index":1173,"title":{},"body":{"components/MyLibraryComponent.html":{}}}],["karma",{"_index":1546,"title":{},"body":{"index.html":{}}}],["key",{"_index":870,"title":{},"body":{"interfaces/Game.html":{},"interfaces/GameAchievement.html":{},"injectables/GameService.html":{}}}],["knight",{"_index":1094,"title":{},"body":{"components/HomeComponent.html":{}}}],["la",{"_index":36,"title":{},"body":{"injectables/ApiService.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/CategoryComponent.html":{},"components/ConfirmationModalComponent.html":{},"components/FooterComponent.html":{},"interfaces/Game.html":{},"interfaces/GameAchievement.html":{},"components/GameCardComponent.html":{},"components/GameDetailModalComponent.html":{},"injectables/GameService.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/MyLibraryComponent.html":{},"interfaces/RawgAchievementApi.html":{},"interfaces/RawgAchievementsApiResponse.html":{},"interfaces/RawgApiResponse.html":{},"interfaces/RawgGame.html":{},"components/RecoverPasswordComponent.html":{},"interfaces/User.html":{},"components/UserProfileComponent.html":{},"miscellaneous/functions.html":{}}}],["las",{"_index":105,"title":{},"body":{"injectables/ApiService.html":{},"components/CategoryComponent.html":{},"interfaces/Game.html":{},"interfaces/GameAchievement.html":{},"components/GameCardComponent.html":{},"injectables/GameService.html":{},"components/HomeComponent.html":{},"components/MyLibraryComponent.html":{},"interfaces/RawgAchievementApi.html":{},"interfaces/RawgAchievementsApiResponse.html":{},"interfaces/RawgApiResponse.html":{},"interfaces/RawgGame.html":{},"components/RecoverPasswordComponent.html":{},"components/RegisterComponent.html":{}}}],["legend",{"_index":310,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CategoryComponent.html":{},"components/ConfirmationModalComponent.html":{},"components/FooterComponent.html":{},"components/GameCardComponent.html":{},"components/GameDetailModalComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/MyLibraryComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/RegisterComponent.html":{},"components/UserProfileComponent.html":{},"overview.html":{}}}],["library",{"_index":1180,"title":{},"body":{"components/MyLibraryComponent.html":{}}}],["library'},{'name",{"_index":334,"title":{},"body":{"components/AppComponent.html":{},"components/CategoryComponent.html":{},"components/ConfirmationModalComponent.html":{},"components/FooterComponent.html":{},"components/GameCardComponent.html":{},"components/GameDetailModalComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/MyLibraryComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/RegisterComponent.html":{},"components/UserProfileComponent.html":{}}}],["library.component",{"_index":381,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["library.component.css",{"_index":1181,"title":{},"body":{"components/MyLibraryComponent.html":{}}}],["library.component.html",{"_index":1182,"title":{},"body":{"components/MyLibraryComponent.html":{}}}],["library.component.ts",{"_index":1171,"title":{},"body":{"components/MyLibraryComponent.html":{},"coverage.html":{}}}],["library.component.ts:108",{"_index":1201,"title":{},"body":{"components/MyLibraryComponent.html":{}}}],["library.component.ts:119",{"_index":1203,"title":{},"body":{"components/MyLibraryComponent.html":{}}}],["library.component.ts:130",{"_index":1205,"title":{},"body":{"components/MyLibraryComponent.html":{}}}],["library.component.ts:149",{"_index":1199,"title":{},"body":{"components/MyLibraryComponent.html":{}}}],["library.component.ts:165",{"_index":1210,"title":{},"body":{"components/MyLibraryComponent.html":{}}}],["library.component.ts:175",{"_index":1211,"title":{},"body":{"components/MyLibraryComponent.html":{}}}],["library.component.ts:192",{"_index":1207,"title":{},"body":{"components/MyLibraryComponent.html":{}}}],["library.component.ts:27",{"_index":1223,"title":{},"body":{"components/MyLibraryComponent.html":{}}}],["library.component.ts:28",{"_index":1219,"title":{},"body":{"components/MyLibraryComponent.html":{}}}],["library.component.ts:30",{"_index":1218,"title":{},"body":{"components/MyLibraryComponent.html":{}}}],["library.component.ts:31",{"_index":1212,"title":{},"body":{"components/MyLibraryComponent.html":{}}}],["library.component.ts:32",{"_index":1220,"title":{},"body":{"components/MyLibraryComponent.html":{}}}],["library.component.ts:34",{"_index":1224,"title":{},"body":{"components/MyLibraryComponent.html":{}}}],["library.component.ts:35",{"_index":1227,"title":{},"body":{"components/MyLibraryComponent.html":{}}}],["library.component.ts:36",{"_index":1225,"title":{},"body":{"components/MyLibraryComponent.html":{}}}],["library.component.ts:38",{"_index":1226,"title":{},"body":{"components/MyLibraryComponent.html":{}}}],["library.component.ts:39",{"_index":1222,"title":{},"body":{"components/MyLibraryComponent.html":{}}}],["library.component.ts:42",{"_index":1217,"title":{},"body":{"components/MyLibraryComponent.html":{}}}],["library.component.ts:43",{"_index":1216,"title":{},"body":{"components/MyLibraryComponent.html":{}}}],["library.component.ts:44",{"_index":1215,"title":{},"body":{"components/MyLibraryComponent.html":{}}}],["library.component.ts:46",{"_index":1213,"title":{},"body":{"components/MyLibraryComponent.html":{}}}],["library.component.ts:48",{"_index":1221,"title":{},"body":{"components/MyLibraryComponent.html":{}}}],["library.component.ts:49",{"_index":1196,"title":{},"body":{"components/MyLibraryComponent.html":{}}}],["library.component.ts:57",{"_index":1208,"title":{},"body":{"components/MyLibraryComponent.html":{}}}],["library.component.ts:71",{"_index":1206,"title":{},"body":{"components/MyLibraryComponent.html":{}}}],["library.component.ts:79",{"_index":1197,"title":{},"body":{"components/MyLibraryComponent.html":{}}}],["library/my",{"_index":380,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/MyLibraryComponent.html":{},"coverage.html":{}}}],["librery",{"_index":407,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["lifecycle",{"_index":1000,"title":{},"body":{"components/GameDetailModalComponent.html":{}}}],["limpia",{"_index":1280,"title":{},"body":{"components/MyLibraryComponent.html":{}}}],["limpiar",{"_index":980,"title":{},"body":{"components/GameDetailModalComponent.html":{},"components/RegisterComponent.html":{}}}],["lista",{"_index":37,"title":{},"body":{"injectables/ApiService.html":{},"components/CategoryComponent.html":{},"components/GameDetailModalComponent.html":{},"components/HomeComponent.html":{},"interfaces/RawgAchievementApi.html":{},"interfaces/RawgAchievementsApiResponse.html":{},"interfaces/RawgApiResponse.html":{},"interfaces/RawgGame.html":{}}}],["listener",{"_index":792,"title":{},"body":{"components/ConfirmationModalComponent.html":{},"components/GameDetailModalComponent.html":{}}}],["literal",{"_index":432,"title":{},"body":{"injectables/AuthService.html":{},"injectables/GameService.html":{},"components/HomeComponent.html":{},"interfaces/RawgGame.html":{}}}],["llama",{"_index":802,"title":{},"body":{"components/ConfirmationModalComponent.html":{}}}],["llamadas",{"_index":655,"title":{},"body":{"components/CategoryComponent.html":{}}}],["lo",{"_index":216,"title":{},"body":{"injectables/ApiService.html":{},"interfaces/RawgAchievementApi.html":{},"interfaces/RawgAchievementsApiResponse.html":{},"interfaces/RawgApiResponse.html":{},"interfaces/RawgGame.html":{}}}],["loadgamesandfiltersfromrawg",{"_index":570,"title":{},"body":{"components/CategoryComponent.html":{}}}],["loadgamesandfiltersfromrawg(category",{"_index":587,"title":{},"body":{"components/CategoryComponent.html":{}}}],["loadusergames",{"_index":1194,"title":{},"body":{"components/MyLibraryComponent.html":{}}}],["local",{"_index":832,"title":{},"body":{"interfaces/Game.html":{},"interfaces/GameAchievement.html":{},"injectables/GameService.html":{}}}],["localstorage",{"_index":853,"title":{},"body":{"interfaces/Game.html":{},"interfaces/GameAchievement.html":{},"injectables/GameService.html":{}}}],["localstorage.getitem(auth_storage_key",{"_index":473,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/User.html":{}}}],["localstorage.getitem(current_user_key",{"_index":465,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/User.html":{}}}],["localstorage.removeitem(current_user_key",{"_index":533,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/User.html":{}}}],["localstorage.setitem(auth_storage_key",{"_index":474,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/User.html":{}}}],["localstorage.setitem(current_user_key",{"_index":495,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/User.html":{}}}],["localstorage.setitem(user_games_key",{"_index":875,"title":{},"body":{"interfaces/Game.html":{},"interfaces/GameAchievement.html":{},"injectables/GameService.html":{}}}],["login",{"_index":409,"title":{},"body":{"modules/AppRoutingModule.html":{},"injectables/AuthService.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/RegisterComponent.html":{},"interfaces/User.html":{},"components/UserProfileComponent.html":{}}}],["login'},{'name",{"_index":332,"title":{},"body":{"components/AppComponent.html":{},"components/CategoryComponent.html":{},"components/ConfirmationModalComponent.html":{},"components/FooterComponent.html":{},"components/GameCardComponent.html":{},"components/GameDetailModalComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/MyLibraryComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/RegisterComponent.html":{},"components/UserProfileComponent.html":{}}}],["login(username",{"_index":429,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/User.html":{}}}],["login.component.css",{"_index":1127,"title":{},"body":{"components/LoginComponent.html":{}}}],["login.component.html",{"_index":1128,"title":{},"body":{"components/LoginComponent.html":{}}}],["login/registro",{"_index":1038,"title":{},"body":{"components/HeaderComponent.html":{}}}],["logincomponent",{"_index":331,"title":{"components/LoginComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/CategoryComponent.html":{},"components/ConfirmationModalComponent.html":{},"components/FooterComponent.html":{},"components/GameCardComponent.html":{},"components/GameDetailModalComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/MyLibraryComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/RegisterComponent.html":{},"components/UserProfileComponent.html":{},"coverage.html":{},"overview.html":{}}}],["loginform",{"_index":1129,"title":{},"body":{"components/LoginComponent.html":{}}}],["loginmessage",{"_index":1130,"title":{},"body":{"components/LoginComponent.html":{}}}],["logout",{"_index":422,"title":{},"body":{"injectables/AuthService.html":{},"components/HeaderComponent.html":{},"interfaces/User.html":{}}}],["logro",{"_index":114,"title":{},"body":{"injectables/ApiService.html":{},"interfaces/Game.html":{},"interfaces/GameAchievement.html":{},"components/GameDetailModalComponent.html":{},"injectables/GameService.html":{},"interfaces/RawgAchievementApi.html":{},"interfaces/RawgAchievementsApiResponse.html":{},"interfaces/RawgApiResponse.html":{},"interfaces/RawgGame.html":{}}}],["logros",{"_index":39,"title":{},"body":{"injectables/ApiService.html":{},"components/CategoryComponent.html":{},"interfaces/Game.html":{},"interfaces/GameAchievement.html":{},"components/GameDetailModalComponent.html":{},"injectables/GameService.html":{},"interfaces/RawgAchievementApi.html":{},"interfaces/RawgAchievementsApiResponse.html":{},"interfaces/RawgApiResponse.html":{},"interfaces/RawgGame.html":{}}}],["logueado",{"_index":1323,"title":{},"body":{"components/RecoverPasswordComponent.html":{},"components/RegisterComponent.html":{}}}],["los",{"_index":60,"title":{},"body":{"injectables/ApiService.html":{},"components/CategoryComponent.html":{},"components/FooterComponent.html":{},"interfaces/Game.html":{},"interfaces/GameAchievement.html":{},"components/GameDetailModalComponent.html":{},"injectables/GameService.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/MyLibraryComponent.html":{},"interfaces/RawgAchievementApi.html":{},"interfaces/RawgAchievementsApiResponse.html":{},"interfaces/RawgApiResponse.html":{},"interfaces/RawgGame.html":{},"components/RecoverPasswordComponent.html":{},"components/RegisterComponent.html":{},"components/UserProfileComponent.html":{}}}],["lowercase",{"_index":1117,"title":{},"body":{"components/HomeComponent.html":{}}}],["maneja",{"_index":699,"title":{},"body":{"components/CategoryComponent.html":{},"components/GameDetailModalComponent.html":{},"components/MyLibraryComponent.html":{},"components/UserProfileComponent.html":{}}}],["maneje",{"_index":217,"title":{},"body":{"injectables/ApiService.html":{},"interfaces/RawgAchievementApi.html":{},"interfaces/RawgAchievementsApiResponse.html":{},"interfaces/RawgApiResponse.html":{},"interfaces/RawgGame.html":{}}}],["manteniendo",{"_index":855,"title":{},"body":{"interfaces/Game.html":{},"interfaces/GameAchievement.html":{},"injectables/GameService.html":{}}}],["map",{"_index":144,"title":{},"body":{"injectables/ApiService.html":{},"components/HomeComponent.html":{},"interfaces/RawgAchievementApi.html":{},"interfaces/RawgAchievementsApiResponse.html":{},"interfaces/RawgApiResponse.html":{},"interfaces/RawgGame.html":{}}}],["map(rawggame",{"_index":205,"title":{},"body":{"injectables/ApiService.html":{},"interfaces/RawgAchievementApi.html":{},"interfaces/RawgAchievementsApiResponse.html":{},"interfaces/RawgApiResponse.html":{},"interfaces/RawgGame.html":{}}}],["map(response",{"_index":191,"title":{},"body":{"injectables/ApiService.html":{},"interfaces/RawgAchievementApi.html":{},"interfaces/RawgAchievementsApiResponse.html":{},"interfaces/RawgApiResponse.html":{},"interfaces/RawgGame.html":{}}}],["map(user",{"_index":1583,"title":{},"body":{"miscellaneous/variables.html":{}}}],["mapea",{"_index":109,"title":{},"body":{"injectables/ApiService.html":{},"interfaces/RawgAchievementApi.html":{},"interfaces/RawgAchievementsApiResponse.html":{},"interfaces/RawgApiResponse.html":{},"interfaces/RawgGame.html":{}}}],["maprawgachievementtogameachievement",{"_index":19,"title":{},"body":{"injectables/ApiService.html":{}}}],["maprawgachievementtogameachievement(rawgachievement",{"_index":106,"title":{},"body":{"injectables/ApiService.html":{},"interfaces/RawgAchievementApi.html":{},"interfaces/RawgAchievementsApiResponse.html":{},"interfaces/RawgApiResponse.html":{},"interfaces/RawgGame.html":{}}}],["maprawggametogame",{"_index":20,"title":{},"body":{"injectables/ApiService.html":{}}}],["maprawggametogame(rawggame",{"_index":120,"title":{},"body":{"injectables/ApiService.html":{},"interfaces/RawgAchievementApi.html":{},"interfaces/RawgAchievementsApiResponse.html":{},"interfaces/RawgApiResponse.html":{},"interfaces/RawgGame.html":{}}}],["marcado",{"_index":847,"title":{},"body":{"interfaces/Game.html":{},"interfaces/GameAchievement.html":{},"injectables/GameService.html":{}}}],["marcar",{"_index":965,"title":{},"body":{"components/GameCardComponent.html":{},"components/MyLibraryComponent.html":{}}}],["marcar/desmarcar",{"_index":967,"title":{},"body":{"components/GameDetailModalComponent.html":{}}}],["marked",{"_index":1091,"title":{},"body":{"components/HomeComponent.html":{}}}],["matchesfavorite",{"_index":1243,"title":{},"body":{"components/MyLibraryComponent.html":{}}}],["matchesgenre",{"_index":697,"title":{},"body":{"components/CategoryComponent.html":{}}}],["matchesplatform",{"_index":695,"title":{},"body":{"components/CategoryComponent.html":{}}}],["matchessearch",{"_index":692,"title":{},"body":{"components/CategoryComponent.html":{},"components/MyLibraryComponent.html":{}}}],["matchesstatus",{"_index":1242,"title":{},"body":{"components/MyLibraryComponent.html":{}}}],["matching",{"_index":255,"title":{},"body":{"injectables/ApiService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthService.html":{},"components/CategoryComponent.html":{},"components/ConfirmationModalComponent.html":{},"components/FooterComponent.html":{},"interfaces/Game.html":{},"interfaces/GameAchievement.html":{},"components/GameCardComponent.html":{},"components/GameDetailModalComponent.html":{},"injectables/GameService.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/MyLibraryComponent.html":{},"interfaces/RawgAchievementApi.html":{},"interfaces/RawgAchievementsApiResponse.html":{},"interfaces/RawgApiResponse.html":{},"interfaces/RawgGame.html":{},"components/RecoverPasswordComponent.html":{},"components/RegisterComponent.html":{},"interfaces/User.html":{},"components/UserProfileComponent.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["mayúscula",{"_index":1338,"title":{},"body":{"components/RecoverPasswordComponent.html":{},"components/RegisterComponent.html":{},"components/UserProfileComponent.html":{}}}],["memoria",{"_index":1431,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["menos",{"_index":1387,"title":{},"body":{"components/RegisterComponent.html":{},"components/UserProfileComponent.html":{}}}],["mensaje",{"_index":742,"title":{},"body":{"components/ConfirmationModalComponent.html":{}}}],["mensajes",{"_index":1394,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["message",{"_index":489,"title":{},"body":{"injectables/AuthService.html":{},"components/CategoryComponent.html":{},"components/ConfirmationModalComponent.html":{},"interfaces/Game.html":{},"interfaces/GameAchievement.html":{},"components/GameDetailModalComponent.html":{},"injectables/GameService.html":{},"components/MyLibraryComponent.html":{},"components/RegisterComponent.html":{},"interfaces/User.html":{}}}],["metadata",{"_index":287,"title":{},"body":{"components/AppComponent.html":{},"components/CategoryComponent.html":{},"components/ConfirmationModalComponent.html":{},"components/FooterComponent.html":{},"components/GameCardComponent.html":{},"components/GameDetailModalComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/MyLibraryComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/RegisterComponent.html":{},"components/UserProfileComponent.html":{}}}],["methods",{"_index":13,"title":{},"body":{"injectables/ApiService.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/CategoryComponent.html":{},"components/ConfirmationModalComponent.html":{},"components/GameDetailModalComponent.html":{},"injectables/GameService.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/MyLibraryComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/RegisterComponent.html":{},"components/UserProfileComponent.html":{}}}],["mi",{"_index":704,"title":{},"body":{"components/CategoryComponent.html":{},"components/GameCardComponent.html":{},"components/HeaderComponent.html":{},"components/MyLibraryComponent.html":{},"components/UserProfileComponent.html":{}}}],["minage",{"_index":1500,"title":{},"body":{"miscellaneous/functions.html":{}}}],["minagevalidator",{"_index":1369,"title":{},"body":{"components/RegisterComponent.html":{},"components/UserProfileComponent.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["minagevalidator(13",{"_index":1374,"title":{},"body":{"components/RegisterComponent.html":{},"components/UserProfileComponent.html":{}}}],["minagevalidator(minage",{"_index":1499,"title":{},"body":{"miscellaneous/functions.html":{}}}],["miscellaneous",{"_index":1494,"title":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["modal",{"_index":548,"title":{},"body":{"components/CategoryComponent.html":{},"components/ConfirmationModalComponent.html":{},"components/GameDetailModalComponent.html":{},"components/MyLibraryComponent.html":{}}}],["modal'},{'name",{"_index":320,"title":{},"body":{"components/AppComponent.html":{},"components/CategoryComponent.html":{},"components/ConfirmationModalComponent.html":{},"components/FooterComponent.html":{},"components/GameCardComponent.html":{},"components/GameDetailModalComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/MyLibraryComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/RegisterComponent.html":{},"components/UserProfileComponent.html":{}}}],["modal.component",{"_index":376,"title":{},"body":{"modules/AppModule.html":{},"components/CategoryComponent.html":{},"components/MyLibraryComponent.html":{}}}],["modal.component.css",{"_index":750,"title":{},"body":{"components/ConfirmationModalComponent.html":{},"components/GameDetailModalComponent.html":{}}}],["modal.component.html",{"_index":751,"title":{},"body":{"components/ConfirmationModalComponent.html":{},"components/GameDetailModalComponent.html":{}}}],["modal.component.ts",{"_index":736,"title":{},"body":{"components/ConfirmationModalComponent.html":{},"components/GameDetailModalComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["modal.component.ts:110",{"_index":984,"title":{},"body":{"components/GameDetailModalComponent.html":{}}}],["modal.component.ts:24",{"_index":992,"title":{},"body":{"components/GameDetailModalComponent.html":{}}}],["modal.component.ts:25",{"_index":991,"title":{},"body":{"components/GameDetailModalComponent.html":{}}}],["modal.component.ts:28",{"_index":769,"title":{},"body":{"components/ConfirmationModalComponent.html":{}}}],["modal.component.ts:29",{"_index":768,"title":{},"body":{"components/ConfirmationModalComponent.html":{}}}],["modal.component.ts:30",{"_index":765,"title":{},"body":{"components/ConfirmationModalComponent.html":{}}}],["modal.component.ts:31",{"_index":975,"title":{},"body":{"components/GameDetailModalComponent.html":{}}}],["modal.component.ts:32",{"_index":771,"title":{},"body":{"components/ConfirmationModalComponent.html":{}}}],["modal.component.ts:34",{"_index":779,"title":{},"body":{"components/ConfirmationModalComponent.html":{}}}],["modal.component.ts:35",{"_index":763,"title":{},"body":{"components/ConfirmationModalComponent.html":{}}}],["modal.component.ts:38",{"_index":976,"title":{},"body":{"components/GameDetailModalComponent.html":{}}}],["modal.component.ts:39",{"_index":773,"title":{},"body":{"components/ConfirmationModalComponent.html":{}}}],["modal.component.ts:44",{"_index":994,"title":{},"body":{"components/GameDetailModalComponent.html":{}}}],["modal.component.ts:46",{"_index":971,"title":{},"body":{"components/GameDetailModalComponent.html":{}}}],["modal.component.ts:55",{"_index":776,"title":{},"body":{"components/ConfirmationModalComponent.html":{}}}],["modal.component.ts:62",{"_index":772,"title":{},"body":{"components/ConfirmationModalComponent.html":{}}}],["modal.component.ts:64",{"_index":978,"title":{},"body":{"components/GameDetailModalComponent.html":{}}}],["modal.component.ts:69",{"_index":775,"title":{},"body":{"components/ConfirmationModalComponent.html":{}}}],["modal.component.ts:75",{"_index":774,"title":{},"body":{"components/ConfirmationModalComponent.html":{}}}],["modal.component.ts:84",{"_index":990,"title":{},"body":{"components/GameDetailModalComponent.html":{}}}],["modal.component.ts:95",{"_index":977,"title":{},"body":{"components/GameDetailModalComponent.html":{}}}],["modal/confirmation",{"_index":394,"title":{},"body":{"modules/AppModule.html":{},"components/ConfirmationModalComponent.html":{},"components/MyLibraryComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["modal/game",{"_index":375,"title":{},"body":{"modules/AppModule.html":{},"components/CategoryComponent.html":{},"components/GameDetailModalComponent.html":{},"components/MyLibraryComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["modalelementref",{"_index":753,"title":{},"body":{"components/ConfirmationModalComponent.html":{},"components/GameDetailModalComponent.html":{}}}],["modales",{"_index":1178,"title":{},"body":{"components/MyLibraryComponent.html":{}}}],["module",{"_index":344,"title":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["modules",{"_index":346,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["more",{"_index":1558,"title":{},"body":{"index.html":{}}}],["mostrando",{"_index":1096,"title":{},"body":{"components/HomeComponent.html":{}}}],["mostrar",{"_index":536,"title":{},"body":{"components/CategoryComponent.html":{},"components/ConfirmationModalComponent.html":{},"components/GameCardComponent.html":{},"components/GameDetailModalComponent.html":{},"components/MyLibraryComponent.html":{},"components/UserProfileComponent.html":{}}}],["muestra",{"_index":799,"title":{},"body":{"components/ConfirmationModalComponent.html":{},"components/GameCardComponent.html":{},"components/GameDetailModalComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/MyLibraryComponent.html":{},"components/UserProfileComponent.html":{}}}],["my_game_library_currentuser",{"_index":454,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/User.html":{},"miscellaneous/variables.html":{}}}],["my_game_library_usergames",{"_index":456,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Game.html":{},"interfaces/GameAchievement.html":{},"injectables/GameService.html":{},"interfaces/User.html":{},"miscellaneous/variables.html":{}}}],["my_game_library_users",{"_index":452,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/User.html":{},"miscellaneous/variables.html":{}}}],["mylibrarycomponent",{"_index":333,"title":{"components/MyLibraryComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/CategoryComponent.html":{},"components/ConfirmationModalComponent.html":{},"components/FooterComponent.html":{},"components/GameCardComponent.html":{},"components/GameDetailModalComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/MyLibraryComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/RegisterComponent.html":{},"components/UserProfileComponent.html":{},"coverage.html":{},"overview.html":{}}}],["más",{"_index":647,"title":{},"body":{"components/CategoryComponent.html":{}}}],["métodos",{"_index":854,"title":{},"body":{"interfaces/Game.html":{},"interfaces/GameAchievement.html":{},"injectables/GameService.html":{}}}],["mínima",{"_index":1502,"title":{},"body":{"miscellaneous/functions.html":{}}}],["mínimo",{"_index":1335,"title":{},"body":{"components/RecoverPasswordComponent.html":{},"components/RegisterComponent.html":{},"components/UserProfileComponent.html":{}}}],["múltiples",{"_index":654,"title":{},"body":{"components/CategoryComponent.html":{}}}],["nacimiento",{"_index":1386,"title":{},"body":{"components/RegisterComponent.html":{},"components/UserProfileComponent.html":{}}}],["name",{"_index":28,"title":{},"body":{"injectables/ApiService.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/CategoryComponent.html":{},"components/ConfirmationModalComponent.html":{},"components/FooterComponent.html":{},"interfaces/Game.html":{},"interfaces/GameAchievement.html":{},"components/GameCardComponent.html":{},"components/GameDetailModalComponent.html":{},"injectables/GameService.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/MyLibraryComponent.html":{},"interfaces/RawgAchievementApi.html":{},"interfaces/RawgAchievementsApiResponse.html":{},"interfaces/RawgApiResponse.html":{},"interfaces/RawgGame.html":{},"components/RecoverPasswordComponent.html":{},"components/RegisterComponent.html":{},"components/UserProfileComponent.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["nativo",{"_index":999,"title":{},"body":{"components/GameDetailModalComponent.html":{}}}],["navegación",{"_index":1036,"title":{},"body":{"components/HeaderComponent.html":{}}}],["navegar",{"_index":1058,"title":{},"body":{"components/HomeComponent.html":{}}}],["navigate",{"_index":1523,"title":{},"body":{"index.html":{}}}],["ndice",{"_index":986,"title":{},"body":{"components/GameDetailModalComponent.html":{}}}],["necesiten",{"_index":861,"title":{},"body":{"interfaces/Game.html":{},"interfaces/GameAchievement.html":{},"injectables/GameService.html":{}}}],["need",{"_index":1551,"title":{},"body":{"index.html":{}}}],["new",{"_index":176,"title":{},"body":{"injectables/ApiService.html":{},"injectables/AuthService.html":{},"components/CategoryComponent.html":{},"components/ConfirmationModalComponent.html":{},"components/GameCardComponent.html":{},"components/GameDetailModalComponent.html":{},"interfaces/RawgAchievementApi.html":{},"interfaces/RawgAchievementsApiResponse.html":{},"interfaces/RawgApiResponse.html":{},"interfaces/RawgGame.html":{},"interfaces/User.html":{},"coverage.html":{},"index.html":{}}}],["newgame",{"_index":867,"title":{},"body":{"interfaces/Game.html":{},"interfaces/GameAchievement.html":{},"injectables/GameService.html":{}}}],["newgame.title",{"_index":912,"title":{},"body":{"interfaces/Game.html":{},"interfaces/GameAchievement.html":{},"injectables/GameService.html":{}}}],["newgameid",{"_index":881,"title":{},"body":{"interfaces/Game.html":{},"interfaces/GameAchievement.html":{},"injectables/GameService.html":{}}}],["newhoursstr",{"_index":1250,"title":{},"body":{"components/MyLibraryComponent.html":{}}}],["newpassword",{"_index":438,"title":{},"body":{"injectables/AuthService.html":{},"components/RecoverPasswordComponent.html":{},"interfaces/User.html":{}}}],["newuser",{"_index":436,"title":{},"body":{"injectables/AuthService.html":{},"components/RegisterComponent.html":{}}}],["newuser.username",{"_index":503,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/User.html":{}}}],["newuserdata",{"_index":442,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/User.html":{}}}],["newuserdata.username",{"_index":528,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/User.html":{}}}],["next",{"_index":154,"title":{},"body":{"injectables/ApiService.html":{},"components/CategoryComponent.html":{},"components/HomeComponent.html":{},"interfaces/RawgAchievementApi.html":{},"interfaces/RawgAchievementsApiResponse.html":{},"interfaces/RawgApiResponse.html":{},"interfaces/RawgGame.html":{}}}],["ng",{"_index":1520,"title":{},"body":{"index.html":{}}}],["ngafterviewinit",{"_index":755,"title":{},"body":{"components/ConfirmationModalComponent.html":{},"components/GameDetailModalComponent.html":{}}}],["ngmodule",{"_index":363,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["ngondestroy",{"_index":571,"title":{},"body":{"components/CategoryComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/MyLibraryComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/RegisterComponent.html":{},"components/UserProfileComponent.html":{}}}],["ngoninit",{"_index":295,"title":{},"body":{"components/AppComponent.html":{},"components/CategoryComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/MyLibraryComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/RegisterComponent.html":{},"components/UserProfileComponent.html":{}}}],["nicas",{"_index":659,"title":{},"body":{"components/CategoryComponent.html":{}}}],["nico",{"_index":840,"title":{},"body":{"interfaces/Game.html":{},"interfaces/GameAchievement.html":{},"injectables/GameService.html":{}}}],["noachievements",{"_index":1021,"title":{},"body":{"components/GameDetailModalComponent.html":{}}}],["nogamesfound",{"_index":732,"title":{},"body":{"components/CategoryComponent.html":{},"components/MyLibraryComponent.html":{}}}],["nombre",{"_index":498,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Game.html":{},"interfaces/GameAchievement.html":{},"injectables/GameService.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"interfaces/User.html":{},"components/UserProfileComponent.html":{},"miscellaneous/functions.html":{}}}],["nombres",{"_index":103,"title":{},"body":{"injectables/ApiService.html":{},"interfaces/RawgAchievementApi.html":{},"interfaces/RawgAchievementsApiResponse.html":{},"interfaces/RawgApiResponse.html":{},"interfaces/RawgGame.html":{}}}],["normal",{"_index":462,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/User.html":{}}}],["nuestra",{"_index":111,"title":{},"body":{"injectables/ApiService.html":{},"interfaces/RawgAchievementApi.html":{},"interfaces/RawgAchievementsApiResponse.html":{},"interfaces/RawgApiResponse.html":{},"interfaces/RawgGame.html":{}}}],["nueva",{"_index":1303,"title":{},"body":{"components/RecoverPasswordComponent.html":{},"components/RegisterComponent.html":{}}}],["nuevo",{"_index":526,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Game.html":{},"interfaces/GameAchievement.html":{},"components/GameDetailModalComponent.html":{},"injectables/GameService.html":{},"components/RegisterComponent.html":{},"interfaces/User.html":{}}}],["nuevos",{"_index":1346,"title":{},"body":{"components/RegisterComponent.html":{}}}],["null",{"_index":155,"title":{},"body":{"injectables/ApiService.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/CategoryComponent.html":{},"components/GameDetailModalComponent.html":{},"components/MyLibraryComponent.html":{},"interfaces/RawgAchievementApi.html":{},"interfaces/RawgAchievementsApiResponse.html":{},"interfaces/RawgApiResponse.html":{},"interfaces/RawgGame.html":{},"interfaces/User.html":{},"components/UserProfileComponent.html":{}}}],["number",{"_index":33,"title":{},"body":{"injectables/ApiService.html":{},"interfaces/Game.html":{},"interfaces/GameAchievement.html":{},"components/GameDetailModalComponent.html":{},"injectables/GameService.html":{},"components/MyLibraryComponent.html":{},"interfaces/RawgAchievementApi.html":{},"interfaces/RawgAchievementsApiResponse.html":{},"interfaces/RawgApiResponse.html":{},"interfaces/RawgGame.html":{},"miscellaneous/functions.html":{}}}],["número",{"_index":93,"title":{},"body":{"injectables/ApiService.html":{},"interfaces/Game.html":{},"interfaces/GameAchievement.html":{},"injectables/GameService.html":{},"components/MyLibraryComponent.html":{},"interfaces/RawgAchievementApi.html":{},"interfaces/RawgAchievementsApiResponse.html":{},"interfaces/RawgApiResponse.html":{},"interfaces/RawgGame.html":{},"components/RecoverPasswordComponent.html":{},"components/RegisterComponent.html":{},"components/UserProfileComponent.html":{}}}],["o",{"_index":86,"title":{},"body":{"injectables/ApiService.html":{},"injectables/AuthService.html":{},"components/CategoryComponent.html":{},"components/ConfirmationModalComponent.html":{},"interfaces/Game.html":{},"interfaces/GameAchievement.html":{},"injectables/GameService.html":{},"components/HomeComponent.html":{},"components/MyLibraryComponent.html":{},"interfaces/RawgAchievementApi.html":{},"interfaces/RawgAchievementsApiResponse.html":{},"interfaces/RawgApiResponse.html":{},"interfaces/RawgGame.html":{},"interfaces/User.html":{}}}],["objeto",{"_index":63,"title":{},"body":{"injectables/ApiService.html":{},"components/GameDetailModalComponent.html":{},"interfaces/RawgAchievementApi.html":{},"interfaces/RawgAchievementsApiResponse.html":{},"interfaces/RawgApiResponse.html":{},"interfaces/RawgGame.html":{}}}],["objetos",{"_index":56,"title":{},"body":{"injectables/ApiService.html":{},"interfaces/RawgAchievementApi.html":{},"interfaces/RawgAchievementsApiResponse.html":{},"interfaces/RawgApiResponse.html":{},"interfaces/RawgGame.html":{}}}],["obligatorio",{"_index":1163,"title":{},"body":{"components/LoginComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/RegisterComponent.html":{},"components/UserProfileComponent.html":{}}}],["observable",{"_index":54,"title":{},"body":{"injectables/ApiService.html":{},"injectables/AuthService.html":{},"interfaces/RawgAchievementApi.html":{},"interfaces/RawgAchievementsApiResponse.html":{},"interfaces/RawgApiResponse.html":{},"interfaces/RawgGame.html":{},"interfaces/User.html":{}}}],["obtener",{"_index":483,"title":{},"body":{"injectables/AuthService.html":{},"components/CategoryComponent.html":{},"interfaces/Game.html":{},"interfaces/GameAchievement.html":{},"injectables/GameService.html":{},"components/MyLibraryComponent.html":{},"interfaces/User.html":{}}}],["obtiene",{"_index":35,"title":{},"body":{"injectables/ApiService.html":{},"interfaces/Game.html":{},"interfaces/GameAchievement.html":{},"components/GameDetailModalComponent.html":{},"injectables/GameService.html":{},"interfaces/RawgAchievementApi.html":{},"interfaces/RawgAchievementsApiResponse.html":{},"interfaces/RawgApiResponse.html":{},"interfaces/RawgGame.html":{}}}],["obtienen",{"_index":129,"title":{},"body":{"injectables/ApiService.html":{},"interfaces/RawgAchievementApi.html":{},"interfaces/RawgAchievementsApiResponse.html":{},"interfaces/RawgApiResponse.html":{},"interfaces/RawgGame.html":{}}}],["oculta",{"_index":793,"title":{},"body":{"components/ConfirmationModalComponent.html":{},"components/GameDetailModalComponent.html":{}}}],["of(game",{"_index":1284,"title":{},"body":{"components/MyLibraryComponent.html":{}}}],["ofrece",{"_index":543,"title":{},"body":{"components/CategoryComponent.html":{},"interfaces/Game.html":{},"interfaces/GameAchievement.html":{},"injectables/GameService.html":{}}}],["olvidaste",{"_index":1165,"title":{},"body":{"components/LoginComponent.html":{}}}],["onachievementchange",{"_index":968,"title":{},"body":{"components/GameDetailModalComponent.html":{}}}],["onachievementchange(gameid",{"_index":981,"title":{},"body":{"components/GameDetailModalComponent.html":{}}}],["oncancel",{"_index":756,"title":{},"body":{"components/ConfirmationModalComponent.html":{}}}],["onconfirm",{"_index":757,"title":{},"body":{"components/ConfirmationModalComponent.html":{}}}],["ondeleteconfirmation",{"_index":1195,"title":{},"body":{"components/MyLibraryComponent.html":{}}}],["ondeleteconfirmation(confirmed",{"_index":1209,"title":{},"body":{"components/MyLibraryComponent.html":{}}}],["ondestroy",{"_index":549,"title":{},"body":{"components/CategoryComponent.html":{},"components/LoginComponent.html":{},"components/MyLibraryComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/RegisterComponent.html":{},"components/UserProfileComponent.html":{}}}],["oninit",{"_index":286,"title":{},"body":{"components/AppComponent.html":{},"components/CategoryComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/MyLibraryComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/RegisterComponent.html":{},"components/UserProfileComponent.html":{}}}],["onsubmit",{"_index":1131,"title":{},"body":{"components/LoginComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/RegisterComponent.html":{}}}],["opcional",{"_index":849,"title":{},"body":{"interfaces/Game.html":{},"interfaces/GameAchievement.html":{},"injectables/GameService.html":{}}}],["opciones",{"_index":658,"title":{},"body":{"components/CategoryComponent.html":{}}}],["opengamedetailmodal",{"_index":572,"title":{},"body":{"components/CategoryComponent.html":{},"components/MyLibraryComponent.html":{}}}],["opengamedetailmodal(game",{"_index":591,"title":{},"body":{"components/CategoryComponent.html":{},"components/MyLibraryComponent.html":{}}}],["operaciones",{"_index":828,"title":{},"body":{"interfaces/Game.html":{},"interfaces/GameAchievement.html":{},"injectables/GameService.html":{}}}],["optional",{"_index":30,"title":{},"body":{"injectables/ApiService.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/CategoryComponent.html":{},"components/GameDetailModalComponent.html":{},"injectables/GameService.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/MyLibraryComponent.html":{},"interfaces/RawgGame.html":{},"components/RecoverPasswordComponent.html":{},"components/RegisterComponent.html":{},"components/UserProfileComponent.html":{},"miscellaneous/functions.html":{}}}],["originalusername",{"_index":444,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/User.html":{}}}],["oscar",{"_index":476,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/User.html":{}}}],["oscar.sanzana.97@gmail.com",{"_index":478,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/User.html":{}}}],["out",{"_index":360,"title":{},"body":{"modules/AppModule.html":{},"index.html":{},"overview.html":{}}}],["outlet",{"_index":277,"title":{},"body":{"components/AppComponent.html":{}}}],["output",{"_index":781,"title":{},"body":{"components/ConfirmationModalComponent.html":{},"components/GameCardComponent.html":{},"components/GameDetailModalComponent.html":{}}}],["outputs",{"_index":761,"title":{},"body":{"components/ConfirmationModalComponent.html":{},"components/GameCardComponent.html":{},"components/GameDetailModalComponent.html":{}}}],["overview",{"_index":1561,"title":{"overview.html":{}},"body":{"index.html":{},"overview.html":{}}}],["p.platform.name).join",{"_index":233,"title":{},"body":{"injectables/ApiService.html":{},"interfaces/RawgAchievementApi.html":{},"interfaces/RawgAchievementsApiResponse.html":{},"interfaces/RawgApiResponse.html":{},"interfaces/RawgGame.html":{}}}],["p.trim()).foreach(p",{"_index":666,"title":{},"body":{"components/CategoryComponent.html":{}}}],["package",{"_index":1477,"title":{"dependencies.html":{},"properties.html":{}},"body":{"index.html":{}}}],["padre",{"_index":932,"title":{},"body":{"components/GameCardComponent.html":{}}}],["page",{"_index":1563,"title":{},"body":{"index.html":{}}}],["page_size",{"_index":75,"title":{},"body":{"injectables/ApiService.html":{},"interfaces/RawgAchievementApi.html":{},"interfaces/RawgAchievementsApiResponse.html":{},"interfaces/RawgApiResponse.html":{},"interfaces/RawgGame.html":{}}}],["page_size.tostring",{"_index":179,"title":{},"body":{"injectables/ApiService.html":{},"interfaces/RawgAchievementApi.html":{},"interfaces/RawgAchievementsApiResponse.html":{},"interfaces/RawgApiResponse.html":{},"interfaces/RawgGame.html":{}}}],["para",{"_index":40,"title":{},"body":{"injectables/ApiService.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthService.html":{},"components/CategoryComponent.html":{},"components/ConfirmationModalComponent.html":{},"components/FooterComponent.html":{},"interfaces/Game.html":{},"interfaces/GameAchievement.html":{},"components/GameCardComponent.html":{},"components/GameDetailModalComponent.html":{},"injectables/GameService.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/MyLibraryComponent.html":{},"interfaces/RawgAchievementApi.html":{},"interfaces/RawgAchievementsApiResponse.html":{},"interfaces/RawgApiResponse.html":{},"interfaces/RawgGame.html":{},"components/RecoverPasswordComponent.html":{},"components/RegisterComponent.html":{},"interfaces/User.html":{},"components/UserProfileComponent.html":{},"miscellaneous/variables.html":{}}}],["paralelo",{"_index":656,"title":{},"body":{"components/CategoryComponent.html":{}}}],["param",{"_index":174,"title":{},"body":{"injectables/ApiService.html":{},"components/GameDetailModalComponent.html":{},"interfaces/RawgAchievementApi.html":{},"interfaces/RawgAchievementsApiResponse.html":{},"interfaces/RawgApiResponse.html":{},"interfaces/RawgGame.html":{}}}],["parameters",{"_index":26,"title":{},"body":{"injectables/ApiService.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/CategoryComponent.html":{},"components/GameDetailModalComponent.html":{},"injectables/GameService.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/MyLibraryComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/RegisterComponent.html":{},"components/UserProfileComponent.html":{},"miscellaneous/functions.html":{}}}],["params",{"_index":175,"title":{},"body":{"injectables/ApiService.html":{},"interfaces/RawgAchievementApi.html":{},"interfaces/RawgAchievementsApiResponse.html":{},"interfaces/RawgApiResponse.html":{},"interfaces/RawgGame.html":{}}}],["params.get('categoryslug",{"_index":626,"title":{},"body":{"components/CategoryComponent.html":{}}}],["params.set('genres",{"_index":181,"title":{},"body":{"injectables/ApiService.html":{},"interfaces/RawgAchievementApi.html":{},"interfaces/RawgAchievementsApiResponse.html":{},"interfaces/RawgApiResponse.html":{},"interfaces/RawgGame.html":{}}}],["params.set('platforms",{"_index":182,"title":{},"body":{"injectables/ApiService.html":{},"interfaces/RawgAchievementApi.html":{},"interfaces/RawgAchievementsApiResponse.html":{},"interfaces/RawgApiResponse.html":{},"interfaces/RawgGame.html":{}}}],["params.set('search",{"_index":180,"title":{},"body":{"injectables/ApiService.html":{},"interfaces/RawgAchievementApi.html":{},"interfaces/RawgAchievementsApiResponse.html":{},"interfaces/RawgApiResponse.html":{},"interfaces/RawgGame.html":{}}}],["parsedhours",{"_index":1254,"title":{},"body":{"components/MyLibraryComponent.html":{}}}],["parsefloat(newhoursstr",{"_index":1255,"title":{},"body":{"components/MyLibraryComponent.html":{}}}],["partial",{"_index":879,"title":{},"body":{"interfaces/Game.html":{},"interfaces/GameAchievement.html":{},"injectables/GameService.html":{}}}],["pasa",{"_index":717,"title":{},"body":{"components/CategoryComponent.html":{}}}],["pasar",{"_index":207,"title":{},"body":{"injectables/ApiService.html":{},"components/MyLibraryComponent.html":{},"interfaces/RawgAchievementApi.html":{},"interfaces/RawgAchievementsApiResponse.html":{},"interfaces/RawgApiResponse.html":{},"interfaces/RawgGame.html":{}}}],["password",{"_index":411,"title":{},"body":{"modules/AppRoutingModule.html":{},"injectables/AuthService.html":{},"components/LoginComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/RegisterComponent.html":{},"interfaces/User.html":{},"components/UserProfileComponent.html":{}}}],["password'},{'name",{"_index":337,"title":{},"body":{"components/AppComponent.html":{},"components/CategoryComponent.html":{},"components/ConfirmationModalComponent.html":{},"components/FooterComponent.html":{},"components/GameCardComponent.html":{},"components/GameDetailModalComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/MyLibraryComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/RegisterComponent.html":{},"components/UserProfileComponent.html":{}}}],["password.component",{"_index":389,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["password.component.css",{"_index":1307,"title":{},"body":{"components/RecoverPasswordComponent.html":{}}}],["password.component.html",{"_index":1308,"title":{},"body":{"components/RecoverPasswordComponent.html":{}}}],["password.component.ts",{"_index":1298,"title":{},"body":{"components/RecoverPasswordComponent.html":{},"coverage.html":{}}}],["password.component.ts:26",{"_index":1315,"title":{},"body":{"components/RecoverPasswordComponent.html":{}}}],["password.component.ts:27",{"_index":1316,"title":{},"body":{"components/RecoverPasswordComponent.html":{}}}],["password.component.ts:28",{"_index":1311,"title":{},"body":{"components/RecoverPasswordComponent.html":{}}}],["password.component.ts:36",{"_index":1313,"title":{},"body":{"components/RecoverPasswordComponent.html":{}}}],["password.component.ts:54",{"_index":1314,"title":{},"body":{"components/RecoverPasswordComponent.html":{}}}],["password.component.ts:72",{"_index":1312,"title":{},"body":{"components/RecoverPasswordComponent.html":{}}}],["password/recover",{"_index":388,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/RecoverPasswordComponent.html":{},"coverage.html":{}}}],["passwordcontrolname",{"_index":1506,"title":{},"body":{"miscellaneous/functions.html":{}}}],["passwordsmatchvalidator",{"_index":1319,"title":{},"body":{"components/RecoverPasswordComponent.html":{},"components/RegisterComponent.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["passwordsmatchvalidator('newpassword",{"_index":1322,"title":{},"body":{"components/RecoverPasswordComponent.html":{}}}],["passwordsmatchvalidator('password",{"_index":1375,"title":{},"body":{"components/RegisterComponent.html":{}}}],["passwordsmatchvalidator(passwordcontrolname",{"_index":1504,"title":{},"body":{"miscellaneous/functions.html":{}}}],["passwordstrengthvalidator",{"_index":1318,"title":{},"body":{"components/RecoverPasswordComponent.html":{},"components/RegisterComponent.html":{},"components/UserProfileComponent.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["path",{"_index":402,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["pathmatch",{"_index":405,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["pend",{"_index":966,"title":{},"body":{"components/GameCardComponent.html":{}}}],["pendiente",{"_index":962,"title":{},"body":{"components/GameCardComponent.html":{},"components/MyLibraryComponent.html":{}}}],["percent",{"_index":168,"title":{},"body":{"injectables/ApiService.html":{},"interfaces/Game.html":{},"interfaces/GameAchievement.html":{},"injectables/GameService.html":{},"interfaces/RawgAchievementApi.html":{},"interfaces/RawgAchievementsApiResponse.html":{},"interfaces/RawgApiResponse.html":{},"interfaces/RawgGame.html":{}}}],["perfil",{"_index":525,"title":{},"body":{"injectables/AuthService.html":{},"components/HeaderComponent.html":{},"interfaces/User.html":{},"components/UserProfileComponent.html":{}}}],["permite",{"_index":541,"title":{},"body":{"components/CategoryComponent.html":{},"components/ConfirmationModalComponent.html":{},"components/GameDetailModalComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/MyLibraryComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/RegisterComponent.html":{},"components/UserProfileComponent.html":{}}}],["permitir",{"_index":1392,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["persistiendo",{"_index":852,"title":{},"body":{"interfaces/Game.html":{},"interfaces/GameAchievement.html":{},"injectables/GameService.html":{}}}],["personal",{"_index":928,"title":{},"body":{"components/GameCardComponent.html":{},"components/MyLibraryComponent.html":{}}}],["personales",{"_index":1348,"title":{},"body":{"components/RegisterComponent.html":{}}}],["personalizadas",{"_index":1372,"title":{},"body":{"components/RegisterComponent.html":{}}}],["personalizados",{"_index":1126,"title":{},"body":{"components/LoginComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/RegisterComponent.html":{}}}],["pertenece",{"_index":844,"title":{},"body":{"interfaces/Game.html":{},"interfaces/GameAchievement.html":{},"components/GameDetailModalComponent.html":{},"injectables/GameService.html":{}}}],["petición",{"_index":184,"title":{},"body":{"injectables/ApiService.html":{},"interfaces/RawgAchievementApi.html":{},"interfaces/RawgAchievementsApiResponse.html":{},"interfaces/RawgApiResponse.html":{},"interfaces/RawgGame.html":{}}}],["pie",{"_index":278,"title":{},"body":{"components/AppComponent.html":{},"components/FooterComponent.html":{}}}],["piece",{"_index":1108,"title":{},"body":{"components/HomeComponent.html":{}}}],["pipe",{"_index":190,"title":{},"body":{"injectables/ApiService.html":{},"interfaces/RawgAchievementApi.html":{},"interfaces/RawgAchievementsApiResponse.html":{},"interfaces/RawgApiResponse.html":{},"interfaces/RawgGame.html":{}}}],["plataforma",{"_index":660,"title":{},"body":{"components/CategoryComponent.html":{},"interfaces/Game.html":{},"interfaces/GameAchievement.html":{},"components/GameCardComponent.html":{},"components/GameDetailModalComponent.html":{},"injectables/GameService.html":{}}}],["plataformas",{"_index":91,"title":{},"body":{"injectables/ApiService.html":{},"components/CategoryComponent.html":{},"interfaces/Game.html":{},"interfaces/GameAchievement.html":{},"injectables/GameService.html":{},"interfaces/RawgAchievementApi.html":{},"interfaces/RawgAchievementsApiResponse.html":{},"interfaces/RawgApiResponse.html":{},"interfaces/RawgGame.html":{}}}],["platform",{"_index":162,"title":{},"body":{"injectables/ApiService.html":{},"components/CategoryComponent.html":{},"interfaces/Game.html":{},"interfaces/GameAchievement.html":{},"injectables/GameService.html":{},"interfaces/RawgAchievementApi.html":{},"interfaces/RawgAchievementsApiResponse.html":{},"interfaces/RawgApiResponse.html":{},"interfaces/RawgGame.html":{},"index.html":{}}}],["platform.name",{"_index":254,"title":{},"body":{"injectables/ApiService.html":{},"interfaces/RawgAchievementApi.html":{},"interfaces/RawgAchievementsApiResponse.html":{},"interfaces/RawgApiResponse.html":{},"interfaces/RawgGame.html":{}}}],["platforms",{"_index":74,"title":{},"body":{"injectables/ApiService.html":{},"components/CategoryComponent.html":{},"interfaces/RawgAchievementApi.html":{},"interfaces/RawgAchievementsApiResponse.html":{},"interfaces/RawgApiResponse.html":{},"interfaces/RawgGame.html":{}}}],["platforms.add(p",{"_index":667,"title":{},"body":{"components/CategoryComponent.html":{}}}],["played",{"_index":242,"title":{},"body":{"injectables/ApiService.html":{},"interfaces/Game.html":{},"interfaces/GameAchievement.html":{},"injectables/GameService.html":{},"interfaces/RawgAchievementApi.html":{},"interfaces/RawgAchievementsApiResponse.html":{},"interfaces/RawgApiResponse.html":{},"interfaces/RawgGame.html":{}}}],["por",{"_index":44,"title":{},"body":{"injectables/ApiService.html":{},"components/CategoryComponent.html":{},"interfaces/Game.html":{},"interfaces/GameAchievement.html":{},"injectables/GameService.html":{},"components/LoginComponent.html":{},"components/MyLibraryComponent.html":{},"interfaces/RawgAchievementApi.html":{},"interfaces/RawgAchievementsApiResponse.html":{},"interfaces/RawgApiResponse.html":{},"interfaces/RawgGame.html":{},"components/RecoverPasswordComponent.html":{},"components/RegisterComponent.html":{},"components/UserProfileComponent.html":{}}}],["portada",{"_index":842,"title":{},"body":{"interfaces/Game.html":{},"interfaces/GameAchievement.html":{},"injectables/GameService.html":{}}}],["positivo",{"_index":1260,"title":{},"body":{"components/MyLibraryComponent.html":{}}}],["predeterminadas",{"_index":1097,"title":{},"body":{"components/HomeComponent.html":{}}}],["predeterminados",{"_index":1062,"title":{},"body":{"components/HomeComponent.html":{}}}],["prepara",{"_index":1261,"title":{},"body":{"components/MyLibraryComponent.html":{}}}],["previous",{"_index":156,"title":{},"body":{"injectables/ApiService.html":{},"interfaces/RawgAchievementApi.html":{},"interfaces/RawgAchievementsApiResponse.html":{},"interfaces/RawgApiResponse.html":{},"interfaces/RawgGame.html":{}}}],["primer",{"_index":900,"title":{},"body":{"interfaces/Game.html":{},"interfaces/GameAchievement.html":{},"injectables/GameService.html":{}}}],["principal",{"_index":271,"title":{},"body":{"components/AppComponent.html":{},"miscellaneous/functions.html":{}}}],["private",{"_index":9,"title":{},"body":{"injectables/ApiService.html":{},"injectables/AuthService.html":{},"components/CategoryComponent.html":{},"components/ConfirmationModalComponent.html":{},"interfaces/Game.html":{},"interfaces/GameAchievement.html":{},"components/GameDetailModalComponent.html":{},"injectables/GameService.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/MyLibraryComponent.html":{},"interfaces/RawgAchievementApi.html":{},"interfaces/RawgAchievementsApiResponse.html":{},"interfaces/RawgApiResponse.html":{},"interfaces/RawgGame.html":{},"components/RecoverPasswordComponent.html":{},"components/RegisterComponent.html":{},"interfaces/User.html":{},"components/UserProfileComponent.html":{}}}],["procentaje",{"_index":835,"title":{},"body":{"interfaces/Game.html":{},"interfaces/GameAchievement.html":{},"injectables/GameService.html":{}}}],["profile",{"_index":341,"title":{},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/CategoryComponent.html":{},"components/ConfirmationModalComponent.html":{},"components/FooterComponent.html":{},"components/GameCardComponent.html":{},"components/GameDetailModalComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/MyLibraryComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/RegisterComponent.html":{},"components/UserProfileComponent.html":{}}}],["profile.component",{"_index":386,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["profile.component.css",{"_index":1395,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["profile.component.html",{"_index":1396,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["profile.component.ts",{"_index":1391,"title":{},"body":{"components/UserProfileComponent.html":{},"coverage.html":{}}}],["profile.component.ts:26",{"_index":1407,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["profile.component.ts:27",{"_index":1408,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["profile.component.ts:28",{"_index":1409,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["profile.component.ts:29",{"_index":1401,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["profile.component.ts:37",{"_index":1406,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["profile.component.ts:48",{"_index":1404,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["profile.component.ts:59",{"_index":1402,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["profile.component.ts:91",{"_index":1405,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["profile/user",{"_index":385,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/UserProfileComponent.html":{},"coverage.html":{}}}],["profileform",{"_index":1397,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["profilemessage",{"_index":1398,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["progreso",{"_index":1007,"title":{},"body":{"components/GameDetailModalComponent.html":{}}}],["project",{"_index":1512,"title":{},"body":{"index.html":{}}}],["prompt(`introduce",{"_index":1251,"title":{},"body":{"components/MyLibraryComponent.html":{}}}],["propaga",{"_index":214,"title":{},"body":{"injectables/ApiService.html":{},"interfaces/RawgAchievementApi.html":{},"interfaces/RawgAchievementsApiResponse.html":{},"interfaces/RawgApiResponse.html":{},"interfaces/RawgGame.html":{}}}],["properties",{"_index":8,"title":{"properties.html":{}},"body":{"injectables/ApiService.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/CategoryComponent.html":{},"components/ConfirmationModalComponent.html":{},"interfaces/Game.html":{},"interfaces/GameAchievement.html":{},"components/GameDetailModalComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/MyLibraryComponent.html":{},"interfaces/RawgAchievementApi.html":{},"interfaces/RawgAchievementsApiResponse.html":{},"interfaces/RawgApiResponse.html":{},"interfaces/RawgGame.html":{},"components/RecoverPasswordComponent.html":{},"components/RegisterComponent.html":{},"interfaces/User.html":{},"components/UserProfileComponent.html":{},"properties.html":{}}}],["property",{"_index":833,"title":{},"body":{"interfaces/Game.html":{},"interfaces/GameAchievement.html":{},"injectables/GameService.html":{}}}],["propia",{"_index":1294,"title":{},"body":{"components/MyLibraryComponent.html":{}}}],["propiedades",{"_index":1228,"title":{},"body":{"components/MyLibraryComponent.html":{}}}],["proporciona",{"_index":826,"title":{},"body":{"interfaces/Game.html":{},"interfaces/GameAchievement.html":{},"components/GameCardComponent.html":{},"injectables/GameService.html":{}}}],["proporcionando",{"_index":1300,"title":{},"body":{"components/RecoverPasswordComponent.html":{},"components/RegisterComponent.html":{}}}],["providedin",{"_index":169,"title":{},"body":{"injectables/ApiService.html":{},"injectables/AuthService.html":{},"interfaces/Game.html":{},"interfaces/GameAchievement.html":{},"injectables/GameService.html":{},"interfaces/RawgAchievementApi.html":{},"interfaces/RawgAchievementsApiResponse.html":{},"interfaces/RawgApiResponse.html":{},"interfaces/RawgGame.html":{},"interfaces/User.html":{}}}],["providers",{"_index":350,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["prueba",{"_index":472,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/User.html":{}}}],["public",{"_index":419,"title":{},"body":{"injectables/AuthService.html":{},"components/GameDetailModalComponent.html":{},"components/HeaderComponent.html":{},"interfaces/User.html":{}}}],["pudieron",{"_index":713,"title":{},"body":{"components/CategoryComponent.html":{}}}],["puede",{"_index":933,"title":{},"body":{"components/GameCardComponent.html":{},"components/MyLibraryComponent.html":{}}}],["pueden",{"_index":1589,"title":{},"body":{"miscellaneous/variables.html":{}}}],["puedes",{"_index":510,"title":{},"body":{"injectables/AuthService.html":{},"components/MyLibraryComponent.html":{},"interfaces/User.html":{}}}],["punto",{"_index":269,"title":{},"body":{"components/AppComponent.html":{}}}],["puzzle",{"_index":1107,"title":{},"body":{"components/HomeComponent.html":{}}}],["página",{"_index":95,"title":{},"body":{"injectables/ApiService.html":{},"components/AppComponent.html":{},"components/FooterComponent.html":{},"components/HomeComponent.html":{},"interfaces/RawgAchievementApi.html":{},"interfaces/RawgAchievementsApiResponse.html":{},"interfaces/RawgApiResponse.html":{},"interfaces/RawgGame.html":{},"miscellaneous/variables.html":{}}}],["páginas",{"_index":926,"title":{},"body":{"components/GameCardComponent.html":{}}}],["que",{"_index":127,"title":{},"body":{"injectables/ApiService.html":{},"components/ConfirmationModalComponent.html":{},"interfaces/Game.html":{},"interfaces/GameAchievement.html":{},"components/GameCardComponent.html":{},"components/GameDetailModalComponent.html":{},"injectables/GameService.html":{},"components/MyLibraryComponent.html":{},"interfaces/RawgAchievementApi.html":{},"interfaces/RawgAchievementsApiResponse.html":{},"interfaces/RawgApiResponse.html":{},"interfaces/RawgGame.html":{},"components/RecoverPasswordComponent.html":{},"components/RegisterComponent.html":{},"miscellaneous/functions.html":{}}}],["quieres",{"_index":1267,"title":{},"body":{"components/MyLibraryComponent.html":{}}}],["racing",{"_index":1109,"title":{},"body":{"components/HomeComponent.html":{}}}],["raised",{"_index":1088,"title":{},"body":{"components/HomeComponent.html":{}}}],["rawg",{"_index":52,"title":{},"body":{"injectables/ApiService.html":{},"components/CategoryComponent.html":{},"interfaces/Game.html":{},"interfaces/GameAchievement.html":{},"injectables/GameService.html":{},"components/HomeComponent.html":{},"components/MyLibraryComponent.html":{},"interfaces/RawgAchievementApi.html":{},"interfaces/RawgAchievementsApiResponse.html":{},"interfaces/RawgApiResponse.html":{},"interfaces/RawgGame.html":{}}}],["rawgachievement",{"_index":113,"title":{},"body":{"injectables/ApiService.html":{},"interfaces/RawgAchievementApi.html":{},"interfaces/RawgAchievementsApiResponse.html":{},"interfaces/RawgApiResponse.html":{},"interfaces/RawgGame.html":{}}}],["rawgachievement.description",{"_index":245,"title":{},"body":{"injectables/ApiService.html":{},"interfaces/RawgAchievementApi.html":{},"interfaces/RawgAchievementsApiResponse.html":{},"interfaces/RawgApiResponse.html":{},"interfaces/RawgGame.html":{}}}],["rawgachievement.id",{"_index":243,"title":{},"body":{"injectables/ApiService.html":{},"interfaces/RawgAchievementApi.html":{},"interfaces/RawgAchievementsApiResponse.html":{},"interfaces/RawgApiResponse.html":{},"interfaces/RawgGame.html":{}}}],["rawgachievement.image",{"_index":246,"title":{},"body":{"injectables/ApiService.html":{},"interfaces/RawgAchievementApi.html":{},"interfaces/RawgAchievementsApiResponse.html":{},"interfaces/RawgApiResponse.html":{},"interfaces/RawgGame.html":{}}}],["rawgachievement.name",{"_index":244,"title":{},"body":{"injectables/ApiService.html":{},"interfaces/RawgAchievementApi.html":{},"interfaces/RawgAchievementsApiResponse.html":{},"interfaces/RawgApiResponse.html":{},"interfaces/RawgGame.html":{}}}],["rawgachievement.percent",{"_index":248,"title":{},"body":{"injectables/ApiService.html":{},"interfaces/RawgAchievementApi.html":{},"interfaces/RawgAchievementsApiResponse.html":{},"interfaces/RawgApiResponse.html":{},"interfaces/RawgGame.html":{}}}],["rawgachievementapi",{"_index":107,"title":{"interfaces/RawgAchievementApi.html":{}},"body":{"injectables/ApiService.html":{},"interfaces/RawgAchievementApi.html":{},"interfaces/RawgAchievementsApiResponse.html":{},"interfaces/RawgApiResponse.html":{},"interfaces/RawgGame.html":{},"coverage.html":{}}}],["rawgachievementsapiresponse",{"_index":165,"title":{"interfaces/RawgAchievementsApiResponse.html":{}},"body":{"injectables/ApiService.html":{},"interfaces/RawgAchievementApi.html":{},"interfaces/RawgAchievementsApiResponse.html":{},"interfaces/RawgApiResponse.html":{},"interfaces/RawgGame.html":{},"coverage.html":{}}}],["rawgapiresponse",{"_index":152,"title":{"interfaces/RawgApiResponse.html":{}},"body":{"injectables/ApiService.html":{},"interfaces/RawgAchievementApi.html":{},"interfaces/RawgAchievementsApiResponse.html":{},"interfaces/RawgApiResponse.html":{},"interfaces/RawgGame.html":{},"coverage.html":{}}}],["rawgapiservice",{"_index":577,"title":{},"body":{"components/CategoryComponent.html":{},"components/HomeComponent.html":{},"components/MyLibraryComponent.html":{}}}],["rawggame",{"_index":98,"title":{"interfaces/RawgGame.html":{}},"body":{"injectables/ApiService.html":{},"interfaces/RawgAchievementApi.html":{},"interfaces/RawgAchievementsApiResponse.html":{},"interfaces/RawgApiResponse.html":{},"interfaces/RawgGame.html":{},"coverage.html":{}}}],["rawggame.background_image",{"_index":239,"title":{},"body":{"injectables/ApiService.html":{},"interfaces/RawgAchievementApi.html":{},"interfaces/RawgAchievementsApiResponse.html":{},"interfaces/RawgApiResponse.html":{},"interfaces/RawgGame.html":{}}}],["rawggame.description_raw",{"_index":225,"title":{},"body":{"injectables/ApiService.html":{},"interfaces/RawgAchievementApi.html":{},"interfaces/RawgAchievementsApiResponse.html":{},"interfaces/RawgApiResponse.html":{},"interfaces/RawgGame.html":{}}}],["rawggame.genres.map(g",{"_index":235,"title":{},"body":{"injectables/ApiService.html":{},"interfaces/RawgAchievementApi.html":{},"interfaces/RawgAchievementsApiResponse.html":{},"interfaces/RawgApiResponse.html":{},"interfaces/RawgGame.html":{}}}],["rawggame.id",{"_index":227,"title":{},"body":{"injectables/ApiService.html":{},"interfaces/RawgAchievementApi.html":{},"interfaces/RawgAchievementsApiResponse.html":{},"interfaces/RawgApiResponse.html":{},"interfaces/RawgGame.html":{}}}],["rawggame.name",{"_index":226,"title":{},"body":{"injectables/ApiService.html":{},"interfaces/RawgAchievementApi.html":{},"interfaces/RawgAchievementsApiResponse.html":{},"interfaces/RawgApiResponse.html":{},"interfaces/RawgGame.html":{}}}],["rawggame.platforms.map(p",{"_index":232,"title":{},"body":{"injectables/ApiService.html":{},"interfaces/RawgAchievementApi.html":{},"interfaces/RawgAchievementsApiResponse.html":{},"interfaces/RawgApiResponse.html":{},"interfaces/RawgGame.html":{}}}],["rawgs",{"_index":159,"title":{},"body":{"injectables/ApiService.html":{},"interfaces/RawgAchievementApi.html":{},"interfaces/RawgAchievementsApiResponse.html":{},"interfaces/RawgApiResponse.html":{},"interfaces/RawgGame.html":{}}}],["raíz",{"_index":264,"title":{},"body":{"components/AppComponent.html":{}}}],["reactiveformsmodule",{"_index":391,"title":{},"body":{"modules/AppModule.html":{}}}],["reactivo",{"_index":1147,"title":{},"body":{"components/LoginComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/RegisterComponent.html":{},"components/UserProfileComponent.html":{}}}],["reactivos",{"_index":1124,"title":{},"body":{"components/LoginComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/RegisterComponent.html":{}}}],["readonly",{"_index":10,"title":{},"body":{"injectables/ApiService.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/CategoryComponent.html":{},"components/GameDetailModalComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/MyLibraryComponent.html":{},"interfaces/RawgAchievementApi.html":{},"interfaces/RawgAchievementsApiResponse.html":{},"interfaces/RawgApiResponse.html":{},"interfaces/RawgGame.html":{},"components/RecoverPasswordComponent.html":{},"components/RegisterComponent.html":{},"interfaces/User.html":{},"components/UserProfileComponent.html":{}}}],["realiza",{"_index":183,"title":{},"body":{"injectables/ApiService.html":{},"interfaces/RawgAchievementApi.html":{},"interfaces/RawgAchievementsApiResponse.html":{},"interfaces/RawgApiResponse.html":{},"interfaces/RawgGame.html":{}}}],["recover",{"_index":336,"title":{},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/CategoryComponent.html":{},"components/ConfirmationModalComponent.html":{},"components/FooterComponent.html":{},"components/GameCardComponent.html":{},"components/GameDetailModalComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/MyLibraryComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/RegisterComponent.html":{},"components/UserProfileComponent.html":{}}}],["recoverpasswordcomponent",{"_index":335,"title":{"components/RecoverPasswordComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/CategoryComponent.html":{},"components/ConfirmationModalComponent.html":{},"components/FooterComponent.html":{},"components/GameCardComponent.html":{},"components/GameDetailModalComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/MyLibraryComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/RegisterComponent.html":{},"components/UserProfileComponent.html":{},"coverage.html":{},"overview.html":{}}}],["recoveryform",{"_index":1309,"title":{},"body":{"components/RecoverPasswordComponent.html":{}}}],["recoverymessage",{"_index":1310,"title":{},"body":{"components/RecoverPasswordComponent.html":{}}}],["recupera",{"_index":540,"title":{},"body":{"components/CategoryComponent.html":{}}}],["recuperación",{"_index":1299,"title":{},"body":{"components/RecoverPasswordComponent.html":{}}}],["recuperar",{"_index":1332,"title":{},"body":{"components/RecoverPasswordComponent.html":{}}}],["redirecciona",{"_index":416,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["redirectto",{"_index":403,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["redirige",{"_index":1324,"title":{},"body":{"components/RecoverPasswordComponent.html":{},"components/RegisterComponent.html":{},"components/UserProfileComponent.html":{}}}],["redirigiendo",{"_index":524,"title":{},"body":{"injectables/AuthService.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"interfaces/User.html":{}}}],["reference",{"_index":1562,"title":{},"body":{"index.html":{}}}],["referencia",{"_index":997,"title":{},"body":{"components/GameDetailModalComponent.html":{}}}],["regames",{"_index":817,"title":{},"body":{"components/FooterComponent.html":{}}}],["regamescreative",{"_index":265,"title":{},"body":{"components/AppComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{}}}],["regamescreativeangular",{"_index":1511,"title":{},"body":{"index.html":{}}}],["register",{"_index":410,"title":{},"body":{"modules/AppRoutingModule.html":{},"injectables/AuthService.html":{},"components/RegisterComponent.html":{}}}],["register'},{'name",{"_index":339,"title":{},"body":{"components/AppComponent.html":{},"components/CategoryComponent.html":{},"components/ConfirmationModalComponent.html":{},"components/FooterComponent.html":{},"components/GameCardComponent.html":{},"components/GameDetailModalComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/MyLibraryComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/RegisterComponent.html":{},"components/UserProfileComponent.html":{}}}],["register(newuser",{"_index":434,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/User.html":{}}}],["register.component.css",{"_index":1351,"title":{},"body":{"components/RegisterComponent.html":{}}}],["register.component.html",{"_index":1352,"title":{},"body":{"components/RegisterComponent.html":{}}}],["registercomponent",{"_index":338,"title":{"components/RegisterComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/CategoryComponent.html":{},"components/ConfirmationModalComponent.html":{},"components/FooterComponent.html":{},"components/GameCardComponent.html":{},"components/GameDetailModalComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/MyLibraryComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/RegisterComponent.html":{},"components/UserProfileComponent.html":{},"coverage.html":{},"overview.html":{}}}],["registerform",{"_index":1353,"title":{},"body":{"components/RegisterComponent.html":{}}}],["registermessage",{"_index":1354,"title":{},"body":{"components/RegisterComponent.html":{}}}],["registrar",{"_index":501,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/User.html":{}}}],["registre",{"_index":1377,"title":{},"body":{"components/RegisterComponent.html":{}}}],["registro",{"_index":507,"title":{},"body":{"injectables/AuthService.html":{},"components/HeaderComponent.html":{},"components/RegisterComponent.html":{},"interfaces/User.html":{}}}],["regístrate",{"_index":1168,"title":{},"body":{"components/LoginComponent.html":{},"components/MyLibraryComponent.html":{}}}],["released",{"_index":163,"title":{},"body":{"injectables/ApiService.html":{},"interfaces/RawgAchievementApi.html":{},"interfaces/RawgAchievementsApiResponse.html":{},"interfaces/RawgApiResponse.html":{},"interfaces/RawgGame.html":{}}}],["reload",{"_index":1527,"title":{},"body":{"index.html":{}}}],["renderiza",{"_index":1234,"title":{},"body":{"components/MyLibraryComponent.html":{}}}],["renderizar",{"_index":1279,"title":{},"body":{"components/MyLibraryComponent.html":{}}}],["representa",{"_index":822,"title":{},"body":{"interfaces/Game.html":{},"interfaces/GameAchievement.html":{},"injectables/GameService.html":{}}}],["requerida",{"_index":1503,"title":{},"body":{"miscellaneous/functions.html":{}}}],["requerido",{"_index":1433,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["requisitos",{"_index":1305,"title":{},"body":{"components/RecoverPasswordComponent.html":{}}}],["reservados",{"_index":819,"title":{},"body":{"components/FooterComponent.html":{}}}],["reset",{"_index":359,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["resetfilters",{"_index":573,"title":{},"body":{"components/CategoryComponent.html":{}}}],["response.results.map((genre",{"_index":250,"title":{},"body":{"injectables/ApiService.html":{},"interfaces/RawgAchievementApi.html":{},"interfaces/RawgAchievementsApiResponse.html":{},"interfaces/RawgApiResponse.html":{},"interfaces/RawgGame.html":{}}}],["response.results.map((platform",{"_index":253,"title":{},"body":{"injectables/ApiService.html":{},"interfaces/RawgAchievementApi.html":{},"interfaces/RawgAchievementsApiResponse.html":{},"interfaces/RawgApiResponse.html":{},"interfaces/RawgGame.html":{}}}],["response.results.map(rawgachievement",{"_index":219,"title":{},"body":{"injectables/ApiService.html":{},"interfaces/RawgAchievementApi.html":{},"interfaces/RawgAchievementsApiResponse.html":{},"interfaces/RawgApiResponse.html":{},"interfaces/RawgGame.html":{}}}],["response.results.map(rawggame",{"_index":192,"title":{},"body":{"injectables/ApiService.html":{},"interfaces/RawgAchievementApi.html":{},"interfaces/RawgAchievementsApiResponse.html":{},"interfaces/RawgApiResponse.html":{},"interfaces/RawgGame.html":{}}}],["respuesta",{"_index":150,"title":{},"body":{"injectables/ApiService.html":{},"components/MyLibraryComponent.html":{},"interfaces/RawgAchievementApi.html":{},"interfaces/RawgAchievementsApiResponse.html":{},"interfaces/RawgApiResponse.html":{},"interfaces/RawgGame.html":{}}}],["restablece",{"_index":675,"title":{},"body":{"components/CategoryComponent.html":{}}}],["result",{"_index":709,"title":{},"body":{"components/CategoryComponent.html":{},"components/LoginComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/RegisterComponent.html":{},"components/UserProfileComponent.html":{}}}],["result.message",{"_index":1161,"title":{},"body":{"components/LoginComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/RegisterComponent.html":{},"components/UserProfileComponent.html":{}}}],["result.success",{"_index":1157,"title":{},"body":{"components/LoginComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/RegisterComponent.html":{},"components/UserProfileComponent.html":{}}}],["resultados",{"_index":94,"title":{},"body":{"injectables/ApiService.html":{},"interfaces/RawgAchievementApi.html":{},"interfaces/RawgAchievementsApiResponse.html":{},"interfaces/RawgApiResponse.html":{},"interfaces/RawgGame.html":{}}}],["results",{"_index":157,"title":{},"body":{"injectables/ApiService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthService.html":{},"components/CategoryComponent.html":{},"components/ConfirmationModalComponent.html":{},"components/FooterComponent.html":{},"interfaces/Game.html":{},"interfaces/GameAchievement.html":{},"components/GameCardComponent.html":{},"components/GameDetailModalComponent.html":{},"injectables/GameService.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/MyLibraryComponent.html":{},"interfaces/RawgAchievementApi.html":{},"interfaces/RawgAchievementsApiResponse.html":{},"interfaces/RawgApiResponse.html":{},"interfaces/RawgGame.html":{},"components/RecoverPasswordComponent.html":{},"components/RegisterComponent.html":{},"interfaces/User.html":{},"components/UserProfileComponent.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["retorna",{"_index":199,"title":{},"body":{"injectables/ApiService.html":{},"interfaces/RawgAchievementApi.html":{},"interfaces/RawgAchievementsApiResponse.html":{},"interfaces/RawgApiResponse.html":{},"interfaces/RawgGame.html":{}}}],["return",{"_index":188,"title":{},"body":{"injectables/ApiService.html":{},"injectables/AuthService.html":{},"components/CategoryComponent.html":{},"interfaces/Game.html":{},"interfaces/GameAchievement.html":{},"components/GameDetailModalComponent.html":{},"injectables/GameService.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/MyLibraryComponent.html":{},"interfaces/RawgAchievementApi.html":{},"interfaces/RawgAchievementsApiResponse.html":{},"interfaces/RawgApiResponse.html":{},"interfaces/RawgGame.html":{},"components/RecoverPasswordComponent.html":{},"components/RegisterComponent.html":{},"interfaces/User.html":{},"components/UserProfileComponent.html":{},"miscellaneous/variables.html":{}}}],["returns",{"_index":53,"title":{},"body":{"injectables/ApiService.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/CategoryComponent.html":{},"components/ConfirmationModalComponent.html":{},"components/GameDetailModalComponent.html":{},"injectables/GameService.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/MyLibraryComponent.html":{},"interfaces/RawgAchievementApi.html":{},"interfaces/RawgAchievementsApiResponse.html":{},"interfaces/RawgApiResponse.html":{},"interfaces/RawgGame.html":{},"components/RecoverPasswordComponent.html":{},"components/RegisterComponent.html":{},"components/UserProfileComponent.html":{},"miscellaneous/functions.html":{}}}],["reutilizable",{"_index":737,"title":{},"body":{"components/ConfirmationModalComponent.html":{}}}],["revisa",{"_index":644,"title":{},"body":{"components/CategoryComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/RegisterComponent.html":{},"components/UserProfileComponent.html":{}}}],["rol",{"_index":1053,"title":{},"body":{"components/HeaderComponent.html":{},"components/UserProfileComponent.html":{}}}],["role",{"_index":460,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/User.html":{},"components/UserProfileComponent.html":{}}}],["root",{"_index":170,"title":{},"body":{"injectables/ApiService.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"interfaces/Game.html":{},"interfaces/GameAchievement.html":{},"injectables/GameService.html":{},"interfaces/RawgAchievementApi.html":{},"interfaces/RawgAchievementsApiResponse.html":{},"interfaces/RawgApiResponse.html":{},"interfaces/RawgGame.html":{},"interfaces/User.html":{}}}],["root'},{'name",{"_index":315,"title":{},"body":{"components/AppComponent.html":{},"components/CategoryComponent.html":{},"components/ConfirmationModalComponent.html":{},"components/FooterComponent.html":{},"components/GameCardComponent.html":{},"components/GameDetailModalComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/MyLibraryComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/RegisterComponent.html":{},"components/UserProfileComponent.html":{}}}],["route",{"_index":579,"title":{},"body":{"components/CategoryComponent.html":{},"miscellaneous/variables.html":{}}}],["route.data",{"_index":1584,"title":{},"body":{"miscellaneous/variables.html":{}}}],["route.data['role",{"_index":1585,"title":{},"body":{"miscellaneous/variables.html":{}}}],["router",{"_index":276,"title":{},"body":{"components/AppComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/RegisterComponent.html":{},"components/UserProfileComponent.html":{},"miscellaneous/variables.html":{}}}],["router.createurltree(['/inicio",{"_index":1591,"title":{},"body":{"miscellaneous/variables.html":{}}}],["router.createurltree(['/login",{"_index":1592,"title":{},"body":{"miscellaneous/variables.html":{}}}],["routermodule",{"_index":397,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routermodule.forroot(routes",{"_index":417,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routes",{"_index":398,"title":{"routes.html":{}},"body":{"modules/AppRoutingModule.html":{},"overview.html":{},"routes.html":{}}}],["routesubscription",{"_index":561,"title":{},"body":{"components/CategoryComponent.html":{}}}],["routing.module",{"_index":368,"title":{},"body":{"modules/AppModule.html":{}}}],["routing.module.ts",{"_index":396,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["rpg",{"_index":1049,"title":{},"body":{"components/HeaderComponent.html":{},"components/HomeComponent.html":{}}}],["run",{"_index":1519,"title":{},"body":{"index.html":{}}}],["running",{"_index":1540,"title":{},"body":{"index.html":{}}}],["ruta",{"_index":413,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["rxjs",{"_index":143,"title":{},"body":{"injectables/ApiService.html":{},"injectables/AuthService.html":{},"components/CategoryComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/MyLibraryComponent.html":{},"interfaces/RawgAchievementApi.html":{},"interfaces/RawgAchievementsApiResponse.html":{},"interfaces/RawgApiResponse.html":{},"interfaces/RawgGame.html":{},"components/RecoverPasswordComponent.html":{},"components/RegisterComponent.html":{},"interfaces/User.html":{},"components/UserProfileComponent.html":{},"dependencies.html":{}}}],["rxjs/operators",{"_index":146,"title":{},"body":{"injectables/ApiService.html":{},"interfaces/RawgAchievementApi.html":{},"interfaces/RawgAchievementsApiResponse.html":{},"interfaces/RawgApiResponse.html":{},"interfaces/RawgGame.html":{}}}],["sanzana",{"_index":477,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/User.html":{}}}],["scaffolding",{"_index":1531,"title":{},"body":{"index.html":{}}}],["se",{"_index":128,"title":{},"body":{"injectables/ApiService.html":{},"components/CategoryComponent.html":{},"components/ConfirmationModalComponent.html":{},"components/GameCardComponent.html":{},"components/GameDetailModalComponent.html":{},"components/HomeComponent.html":{},"components/MyLibraryComponent.html":{},"interfaces/RawgAchievementApi.html":{},"interfaces/RawgAchievementsApiResponse.html":{},"interfaces/RawgApiResponse.html":{},"interfaces/RawgGame.html":{},"components/RegisterComponent.html":{},"miscellaneous/functions.html":{}}}],["searchquery",{"_index":82,"title":{},"body":{"injectables/ApiService.html":{},"interfaces/RawgAchievementApi.html":{},"interfaces/RawgAchievementsApiResponse.html":{},"interfaces/RawgApiResponse.html":{},"interfaces/RawgGame.html":{}}}],["searchterm",{"_index":562,"title":{},"body":{"components/CategoryComponent.html":{},"components/MyLibraryComponent.html":{}}}],["searchtermlower",{"_index":684,"title":{},"body":{"components/CategoryComponent.html":{},"components/MyLibraryComponent.html":{}}}],["segura",{"_index":1349,"title":{},"body":{"components/RegisterComponent.html":{}}}],["seguridad",{"_index":1306,"title":{},"body":{"components/RecoverPasswordComponent.html":{}}}],["seguro",{"_index":767,"title":{},"body":{"components/ConfirmationModalComponent.html":{},"components/MyLibraryComponent.html":{}}}],["seleccionado",{"_index":718,"title":{},"body":{"components/CategoryComponent.html":{},"components/GameDetailModalComponent.html":{}}}],["selección",{"_index":683,"title":{},"body":{"components/CategoryComponent.html":{}}}],["selectedfavorite",{"_index":1187,"title":{},"body":{"components/MyLibraryComponent.html":{}}}],["selectedfavoritevalue",{"_index":1237,"title":{},"body":{"components/MyLibraryComponent.html":{}}}],["selectedgameformodal",{"_index":563,"title":{},"body":{"components/CategoryComponent.html":{},"components/MyLibraryComponent.html":{}}}],["selectedgenre",{"_index":564,"title":{},"body":{"components/CategoryComponent.html":{}}}],["selectedgenrelower",{"_index":688,"title":{},"body":{"components/CategoryComponent.html":{}}}],["selectedplatform",{"_index":565,"title":{},"body":{"components/CategoryComponent.html":{}}}],["selectedplatformlower",{"_index":686,"title":{},"body":{"components/CategoryComponent.html":{}}}],["selectedstatus",{"_index":1188,"title":{},"body":{"components/MyLibraryComponent.html":{}}}],["selectedstatusvalue",{"_index":1235,"title":{},"body":{"components/MyLibraryComponent.html":{}}}],["selector",{"_index":288,"title":{},"body":{"components/AppComponent.html":{},"components/CategoryComponent.html":{},"components/ConfirmationModalComponent.html":{},"components/FooterComponent.html":{},"components/GameCardComponent.html":{},"components/GameDetailModalComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/MyLibraryComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/RegisterComponent.html":{},"components/UserProfileComponent.html":{}}}],["separado",{"_index":131,"title":{},"body":{"injectables/ApiService.html":{},"interfaces/RawgAchievementApi.html":{},"interfaces/RawgAchievementsApiResponse.html":{},"interfaces/RawgApiResponse.html":{},"interfaces/RawgGame.html":{}}}],["separados",{"_index":89,"title":{},"body":{"injectables/ApiService.html":{},"interfaces/RawgAchievementApi.html":{},"interfaces/RawgAchievementsApiResponse.html":{},"interfaces/RawgApiResponse.html":{},"interfaces/RawgGame.html":{}}}],["serve",{"_index":1521,"title":{},"body":{"index.html":{}}}],["server",{"_index":1518,"title":{},"body":{"index.html":{}}}],["servicio",{"_index":824,"title":{},"body":{"interfaces/Game.html":{},"interfaces/GameAchievement.html":{},"components/GameDetailModalComponent.html":{},"injectables/GameService.html":{},"components/HomeComponent.html":{}}}],["servicios",{"_index":860,"title":{},"body":{"interfaces/Game.html":{},"interfaces/GameAchievement.html":{},"injectables/GameService.html":{}}}],["sesión",{"_index":487,"title":{},"body":{"injectables/AuthService.html":{},"components/CategoryComponent.html":{},"components/GameDetailModalComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/MyLibraryComponent.html":{},"components/RegisterComponent.html":{},"interfaces/User.html":{},"components/UserProfileComponent.html":{},"miscellaneous/variables.html":{}}}],["set",{"_index":663,"title":{},"body":{"components/CategoryComponent.html":{}}}],["settimeout",{"_index":1158,"title":{},"body":{"components/LoginComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/RegisterComponent.html":{},"components/UserProfileComponent.html":{}}}],["shared/confirmation",{"_index":393,"title":{},"body":{"modules/AppModule.html":{}}}],["shared/footer/footer.component",{"_index":371,"title":{},"body":{"modules/AppModule.html":{}}}],["shared/game",{"_index":372,"title":{},"body":{"modules/AppModule.html":{}}}],["shared/header/header.component",{"_index":370,"title":{},"body":{"modules/AppModule.html":{}}}],["shooter",{"_index":1105,"title":{},"body":{"components/HomeComponent.html":{}}}],["show",{"_index":758,"title":{},"body":{"components/ConfirmationModalComponent.html":{},"components/GameDetailModalComponent.html":{}}}],["showlibrarycontrols",{"_index":940,"title":{},"body":{"components/GameCardComponent.html":{}}}],["si",{"_index":68,"title":{},"body":{"injectables/ApiService.html":{},"injectables/AuthService.html":{},"interfaces/Game.html":{},"interfaces/GameAchievement.html":{},"components/GameCardComponent.html":{},"components/GameDetailModalComponent.html":{},"injectables/GameService.html":{},"components/MyLibraryComponent.html":{},"interfaces/RawgAchievementApi.html":{},"interfaces/RawgAchievementsApiResponse.html":{},"interfaces/RawgApiResponse.html":{},"interfaces/RawgGame.html":{},"components/RecoverPasswordComponent.html":{},"components/RegisterComponent.html":{},"interfaces/User.html":{}}}],["sido",{"_index":837,"title":{},"body":{"interfaces/Game.html":{},"interfaces/GameAchievement.html":{},"components/GameDetailModalComponent.html":{},"injectables/GameService.html":{}}}],["simplificada",{"_index":158,"title":{},"body":{"injectables/ApiService.html":{},"interfaces/RawgAchievementApi.html":{},"interfaces/RawgAchievementsApiResponse.html":{},"interfaces/RawgApiResponse.html":{},"interfaces/RawgGame.html":{}}}],["sin",{"_index":903,"title":{},"body":{"interfaces/Game.html":{},"interfaces/GameAchievement.html":{},"injectables/GameService.html":{}}}],["slug",{"_index":161,"title":{},"body":{"injectables/ApiService.html":{},"interfaces/RawgAchievementApi.html":{},"interfaces/RawgAchievementsApiResponse.html":{},"interfaces/RawgApiResponse.html":{},"interfaces/RawgGame.html":{}}}],["slugs",{"_index":87,"title":{},"body":{"injectables/ApiService.html":{},"interfaces/RawgAchievementApi.html":{},"interfaces/RawgAchievementsApiResponse.html":{},"interfaces/RawgApiResponse.html":{},"interfaces/RawgGame.html":{}}}],["sobre",{"_index":831,"title":{},"body":{"interfaces/Game.html":{},"interfaces/GameAchievement.html":{},"injectables/GameService.html":{}}}],["solo",{"_index":222,"title":{},"body":{"injectables/ApiService.html":{},"interfaces/RawgAchievementApi.html":{},"interfaces/RawgAchievementsApiResponse.html":{},"interfaces/RawgApiResponse.html":{},"interfaces/RawgGame.html":{},"miscellaneous/variables.html":{}}}],["source",{"_index":4,"title":{},"body":{"injectables/ApiService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthService.html":{},"components/CategoryComponent.html":{},"components/ConfirmationModalComponent.html":{},"components/FooterComponent.html":{},"interfaces/Game.html":{},"interfaces/GameAchievement.html":{},"components/GameCardComponent.html":{},"components/GameDetailModalComponent.html":{},"injectables/GameService.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/MyLibraryComponent.html":{},"interfaces/RawgAchievementApi.html":{},"interfaces/RawgAchievementsApiResponse.html":{},"interfaces/RawgApiResponse.html":{},"interfaces/RawgGame.html":{},"components/RecoverPasswordComponent.html":{},"components/RegisterComponent.html":{},"interfaces/User.html":{},"components/UserProfileComponent.html":{},"index.html":{}}}],["sports",{"_index":1111,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/.../auth.guard.ts",{"_index":1573,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../auth.service.ts",{"_index":1572,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../category.component.ts",{"_index":1574,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../confirmation",{"_index":1575,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../game",{"_index":1576,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../game.service.ts",{"_index":1577,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../validator.ts",{"_index":1496,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/app/app",{"_index":395,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["src/app/app.component.ts",{"_index":263,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.component.ts:21",{"_index":303,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:22",{"_index":298,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:26",{"_index":299,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.module.ts",{"_index":361,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app/core/api/api.service",{"_index":615,"title":{},"body":{"components/CategoryComponent.html":{},"components/HomeComponent.html":{},"components/MyLibraryComponent.html":{}}}],["src/app/core/api/api.service.ts",{"_index":6,"title":{},"body":{"injectables/ApiService.html":{},"interfaces/RawgAchievementApi.html":{},"interfaces/RawgAchievementsApiResponse.html":{},"interfaces/RawgApiResponse.html":{},"interfaces/RawgGame.html":{},"coverage.html":{}}}],["src/app/core/api/api.service.ts:103",{"_index":34,"title":{},"body":{"injectables/ApiService.html":{}}}],["src/app/core/api/api.service.ts:121",{"_index":123,"title":{},"body":{"injectables/ApiService.html":{}}}],["src/app/core/api/api.service.ts:143",{"_index":108,"title":{},"body":{"injectables/ApiService.html":{}}}],["src/app/core/api/api.service.ts:158",{"_index":99,"title":{},"body":{"injectables/ApiService.html":{}}}],["src/app/core/api/api.service.ts:173",{"_index":104,"title":{},"body":{"injectables/ApiService.html":{}}}],["src/app/core/api/api.service.ts:46",{"_index":138,"title":{},"body":{"injectables/ApiService.html":{}}}],["src/app/core/api/api.service.ts:47",{"_index":25,"title":{},"body":{"injectables/ApiService.html":{}}}],["src/app/core/api/api.service.ts:59",{"_index":76,"title":{},"body":{"injectables/ApiService.html":{}}}],["src/app/core/api/api.service.ts:87",{"_index":59,"title":{},"body":{"injectables/ApiService.html":{}}}],["src/app/core/auth/auth.service",{"_index":616,"title":{},"body":{"components/CategoryComponent.html":{},"components/GameDetailModalComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/MyLibraryComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/RegisterComponent.html":{},"components/UserProfileComponent.html":{}}}],["src/app/core/auth/auth.service.ts",{"_index":418,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/User.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/core/auth/auth.service.ts:101",{"_index":443,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/core/auth/auth.service.ts:125",{"_index":433,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/core/auth/auth.service.ts:22",{"_index":446,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/core/auth/auth.service.ts:23",{"_index":427,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/core/auth/auth.service.ts:35",{"_index":428,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/core/auth/auth.service.ts:51",{"_index":448,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/core/auth/auth.service.ts:56",{"_index":430,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/core/auth/auth.service.ts:69",{"_index":435,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/core/auth/auth.service.ts:81",{"_index":439,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/core/game/game.service",{"_index":617,"title":{},"body":{"components/CategoryComponent.html":{},"components/GameCardComponent.html":{},"components/GameDetailModalComponent.html":{},"components/MyLibraryComponent.html":{}}}],["src/app/core/game/game.service.ts",{"_index":821,"title":{},"body":{"interfaces/Game.html":{},"interfaces/GameAchievement.html":{},"injectables/GameService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/core/game/game.service.ts:138",{"_index":1033,"title":{},"body":{"injectables/GameService.html":{}}}],["src/app/core/game/game.service.ts:147",{"_index":1031,"title":{},"body":{"injectables/GameService.html":{}}}],["src/app/core/game/game.service.ts:79",{"_index":1028,"title":{},"body":{"injectables/GameService.html":{}}}],["src/app/core/game/game.service.ts:84",{"_index":1032,"title":{},"body":{"injectables/GameService.html":{}}}],["src/app/core/game/game.service.ts:90",{"_index":1029,"title":{},"body":{"injectables/GameService.html":{}}}],["src/app/core/game/game.service.ts:96",{"_index":1030,"title":{},"body":{"injectables/GameService.html":{}}}],["src/app/features/category/category.component.ts",{"_index":535,"title":{},"body":{"components/CategoryComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/features/category/category.component.ts:123",{"_index":583,"title":{},"body":{"components/CategoryComponent.html":{}}}],["src/app/features/category/category.component.ts:137",{"_index":593,"title":{},"body":{"components/CategoryComponent.html":{}}}],["src/app/features/category/category.component.ts:145",{"_index":584,"title":{},"body":{"components/CategoryComponent.html":{}}}],["src/app/features/category/category.component.ts:162",{"_index":586,"title":{},"body":{"components/CategoryComponent.html":{}}}],["src/app/features/category/category.component.ts:184",{"_index":592,"title":{},"body":{"components/CategoryComponent.html":{}}}],["src/app/features/category/category.component.ts:212",{"_index":589,"title":{},"body":{"components/CategoryComponent.html":{}}}],["src/app/features/category/category.component.ts:29",{"_index":606,"title":{},"body":{"components/CategoryComponent.html":{}}}],["src/app/features/category/category.component.ts:30",{"_index":602,"title":{},"body":{"components/CategoryComponent.html":{}}}],["src/app/features/category/category.component.ts:31",{"_index":599,"title":{},"body":{"components/CategoryComponent.html":{}}}],["src/app/features/category/category.component.ts:32",{"_index":600,"title":{},"body":{"components/CategoryComponent.html":{}}}],["src/app/features/category/category.component.ts:33",{"_index":594,"title":{},"body":{"components/CategoryComponent.html":{}}}],["src/app/features/category/category.component.ts:34",{"_index":603,"title":{},"body":{"components/CategoryComponent.html":{}}}],["src/app/features/category/category.component.ts:36",{"_index":608,"title":{},"body":{"components/CategoryComponent.html":{}}}],["src/app/features/category/category.component.ts:37",{"_index":611,"title":{},"body":{"components/CategoryComponent.html":{}}}],["src/app/features/category/category.component.ts:38",{"_index":610,"title":{},"body":{"components/CategoryComponent.html":{}}}],["src/app/features/category/category.component.ts:40",{"_index":598,"title":{},"body":{"components/CategoryComponent.html":{}}}],["src/app/features/category/category.component.ts:41",{"_index":597,"title":{},"body":{"components/CategoryComponent.html":{}}}],["src/app/features/category/category.component.ts:43",{"_index":609,"title":{},"body":{"components/CategoryComponent.html":{}}}],["src/app/features/category/category.component.ts:45",{"_index":607,"title":{},"body":{"components/CategoryComponent.html":{}}}],["src/app/features/category/category.component.ts:46",{"_index":596,"title":{},"body":{"components/CategoryComponent.html":{}}}],["src/app/features/category/category.component.ts:47",{"_index":601,"title":{},"body":{"components/CategoryComponent.html":{}}}],["src/app/features/category/category.component.ts:49",{"_index":578,"title":{},"body":{"components/CategoryComponent.html":{}}}],["src/app/features/category/category.component.ts:58",{"_index":590,"title":{},"body":{"components/CategoryComponent.html":{}}}],["src/app/features/category/category.component.ts:92",{"_index":581,"title":{},"body":{"components/CategoryComponent.html":{}}}],["src/app/features/category/category.component.ts:97",{"_index":588,"title":{},"body":{"components/CategoryComponent.html":{}}}],["src/app/features/home/home.component.ts",{"_index":1057,"title":{},"body":{"components/HomeComponent.html":{},"coverage.html":{}}}],["src/app/features/home/home.component.ts:24",{"_index":1075,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/features/home/home.component.ts:25",{"_index":1076,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/features/home/home.component.ts:26",{"_index":1077,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/features/home/home.component.ts:27",{"_index":1070,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/features/home/home.component.ts:34",{"_index":1074,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/features/home/home.component.ts:58",{"_index":1072,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/features/home/home.component.ts:84",{"_index":1073,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/features/login/login.component.ts",{"_index":1118,"title":{},"body":{"components/LoginComponent.html":{},"coverage.html":{}}}],["src/app/features/login/login.component.ts:25",{"_index":1142,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/features/login/login.component.ts:26",{"_index":1141,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/features/login/login.component.ts:28",{"_index":1139,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/features/login/login.component.ts:29",{"_index":1140,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/features/login/login.component.ts:30",{"_index":1134,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/features/login/login.component.ts:38",{"_index":1136,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/features/login/login.component.ts:47",{"_index":1137,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/features/login/login.component.ts:65",{"_index":1135,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/features/my",{"_index":1170,"title":{},"body":{"components/MyLibraryComponent.html":{},"coverage.html":{}}}],["src/app/features/recover",{"_index":1297,"title":{},"body":{"components/RecoverPasswordComponent.html":{},"coverage.html":{}}}],["src/app/features/register/register.component.ts",{"_index":1345,"title":{},"body":{"components/RegisterComponent.html":{},"coverage.html":{}}}],["src/app/features/register/register.component.ts:25",{"_index":1367,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/features/register/register.component.ts:26",{"_index":1366,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/features/register/register.component.ts:27",{"_index":1359,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/features/register/register.component.ts:29",{"_index":1363,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/features/register/register.component.ts:30",{"_index":1368,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/features/register/register.component.ts:31",{"_index":1362,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/features/register/register.component.ts:32",{"_index":1360,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/features/register/register.component.ts:33",{"_index":1365,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/features/register/register.component.ts:34",{"_index":1361,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/features/register/register.component.ts:35",{"_index":1364,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/features/register/register.component.ts:36",{"_index":1355,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/features/register/register.component.ts:44",{"_index":1357,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/features/register/register.component.ts:67",{"_index":1358,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/features/register/register.component.ts:86",{"_index":1356,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/features/user",{"_index":1390,"title":{},"body":{"components/UserProfileComponent.html":{},"coverage.html":{}}}],["src/app/guards/auth.guard.ts",{"_index":1465,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/shared/confirmation",{"_index":735,"title":{},"body":{"components/ConfirmationModalComponent.html":{},"components/MyLibraryComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/shared/footer/footer.component.ts",{"_index":808,"title":{},"body":{"components/FooterComponent.html":{},"coverage.html":{}}}],["src/app/shared/game",{"_index":618,"title":{},"body":{"components/CategoryComponent.html":{},"components/GameCardComponent.html":{},"components/GameDetailModalComponent.html":{},"components/MyLibraryComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/shared/header/header.component.ts",{"_index":1034,"title":{},"body":{"components/HeaderComponent.html":{},"coverage.html":{}}}],["src/app/shared/header/header.component.ts:21",{"_index":1043,"title":{},"body":{"components/HeaderComponent.html":{}}}],["src/app/shared/header/header.component.ts:22",{"_index":1045,"title":{},"body":{"components/HeaderComponent.html":{}}}],["src/app/shared/header/header.component.ts:25",{"_index":1044,"title":{},"body":{"components/HeaderComponent.html":{}}}],["src/app/utils/validator",{"_index":1145,"title":{},"body":{"components/LoginComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/UserProfileComponent.html":{}}}],["src/app/utils/validator.ts",{"_index":1473,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["started",{"_index":1510,"title":{"index.html":{}},"body":{}}],["state",{"_index":1579,"title":{},"body":{"miscellaneous/variables.html":{}}}],["statements",{"_index":1439,"title":{},"body":{"coverage.html":{}}}],["stored",{"_index":1537,"title":{},"body":{"index.html":{}}}],["storeduser",{"_index":464,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/User.html":{}}}],["str",{"_index":582,"title":{},"body":{"components/CategoryComponent.html":{}}}],["str.charat(0).touppercase",{"_index":649,"title":{},"body":{"components/CategoryComponent.html":{}}}],["str.slice(1",{"_index":650,"title":{},"body":{"components/CategoryComponent.html":{}}}],["strategy",{"_index":1104,"title":{},"body":{"components/HomeComponent.html":{}}}],["string",{"_index":72,"title":{},"body":{"injectables/ApiService.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/CategoryComponent.html":{},"components/ConfirmationModalComponent.html":{},"interfaces/Game.html":{},"interfaces/GameAchievement.html":{},"components/GameDetailModalComponent.html":{},"injectables/GameService.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/MyLibraryComponent.html":{},"interfaces/RawgAchievementApi.html":{},"interfaces/RawgAchievementsApiResponse.html":{},"interfaces/RawgApiResponse.html":{},"interfaces/RawgGame.html":{},"components/RecoverPasswordComponent.html":{},"components/RegisterComponent.html":{},"interfaces/User.html":{},"components/UserProfileComponent.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["string(gametoupdate.hoursplayed",{"_index":1253,"title":{},"body":{"components/MyLibraryComponent.html":{}}}],["strings",{"_index":101,"title":{},"body":{"injectables/ApiService.html":{},"interfaces/RawgAchievementApi.html":{},"interfaces/RawgAchievementsApiResponse.html":{},"interfaces/RawgApiResponse.html":{},"interfaces/RawgGame.html":{}}}],["styles",{"_index":260,"title":{},"body":{"components/AppComponent.html":{},"components/CategoryComponent.html":{},"components/ConfirmationModalComponent.html":{},"components/FooterComponent.html":{},"components/GameCardComponent.html":{},"components/GameDetailModalComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/MyLibraryComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/RegisterComponent.html":{},"components/UserProfileComponent.html":{}}}],["styleurls",{"_index":290,"title":{},"body":{"components/AppComponent.html":{},"components/CategoryComponent.html":{},"components/ConfirmationModalComponent.html":{},"components/FooterComponent.html":{},"components/GameCardComponent.html":{},"components/GameDetailModalComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/MyLibraryComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/RegisterComponent.html":{},"components/UserProfileComponent.html":{}}}],["su",{"_index":45,"title":{},"body":{"injectables/ApiService.html":{},"components/MyLibraryComponent.html":{},"interfaces/RawgAchievementApi.html":{},"interfaces/RawgAchievementsApiResponse.html":{},"interfaces/RawgApiResponse.html":{},"interfaces/RawgGame.html":{},"components/RecoverPasswordComponent.html":{},"components/UserProfileComponent.html":{}}}],["subscribe",{"_index":634,"title":{},"body":{"components/CategoryComponent.html":{}}}],["subscribe(fulldetailsgame",{"_index":1285,"title":{},"body":{"components/MyLibraryComponent.html":{}}}],["subscription",{"_index":595,"title":{},"body":{"components/CategoryComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/MyLibraryComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/RegisterComponent.html":{},"components/UserProfileComponent.html":{}}}],["success",{"_index":488,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Game.html":{},"interfaces/GameAchievement.html":{},"injectables/GameService.html":{},"interfaces/User.html":{}}}],["summary",{"_index":305,"title":{},"body":{"components/AppComponent.html":{},"components/CategoryComponent.html":{},"components/ConfirmationModalComponent.html":{},"components/FooterComponent.html":{},"interfaces/Game.html":{},"interfaces/GameAchievement.html":{},"components/GameCardComponent.html":{},"components/GameDetailModalComponent.html":{},"injectables/GameService.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/MyLibraryComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/RegisterComponent.html":{},"components/UserProfileComponent.html":{}}}],["support",{"_index":1564,"title":{},"body":{"modules.html":{}}}],["sus",{"_index":719,"title":{},"body":{"components/CategoryComponent.html":{},"components/GameDetailModalComponent.html":{},"components/LoginComponent.html":{},"components/MyLibraryComponent.html":{},"components/RegisterComponent.html":{}}}],["suscribe",{"_index":1229,"title":{},"body":{"components/MyLibraryComponent.html":{},"components/UserProfileComponent.html":{}}}],["suscripción",{"_index":280,"title":{},"body":{"components/AppComponent.html":{}}}],["svg",{"_index":1565,"title":{},"body":{"modules.html":{}}}],["switch",{"_index":1098,"title":{},"body":{"components/HomeComponent.html":{}}}],["switchmap",{"_index":614,"title":{},"body":{"components/CategoryComponent.html":{}}}],["switchmap(params",{"_index":624,"title":{},"body":{"components/CategoryComponent.html":{}}}],["table",{"_index":1476,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":1475,"title":{},"body":{"coverage.html":{}}}],["también",{"_index":1176,"title":{},"body":{"components/MyLibraryComponent.html":{}}}],["tarde",{"_index":648,"title":{},"body":{"components/CategoryComponent.html":{}}}],["tarjeta",{"_index":924,"title":{},"body":{"components/GameCardComponent.html":{}}}],["template",{"_index":259,"title":{},"body":{"components/AppComponent.html":{},"components/CategoryComponent.html":{},"components/ConfirmationModalComponent.html":{},"components/FooterComponent.html":{},"components/GameCardComponent.html":{},"components/GameDetailModalComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/MyLibraryComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/RegisterComponent.html":{},"components/UserProfileComponent.html":{}}}],["templateurl",{"_index":292,"title":{},"body":{"components/AppComponent.html":{},"components/CategoryComponent.html":{},"components/ConfirmationModalComponent.html":{},"components/FooterComponent.html":{},"components/GameCardComponent.html":{},"components/GameDetailModalComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/MyLibraryComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/RegisterComponent.html":{},"components/UserProfileComponent.html":{}}}],["tener",{"_index":1334,"title":{},"body":{"components/RecoverPasswordComponent.html":{},"components/RegisterComponent.html":{},"components/UserProfileComponent.html":{}}}],["test",{"_index":1543,"title":{},"body":{"index.html":{}}}],["testing",{"_index":1554,"title":{},"body":{"index.html":{}}}],["tests",{"_index":1542,"title":{},"body":{"index.html":{}}}],["texto",{"_index":743,"title":{},"body":{"components/ConfirmationModalComponent.html":{}}}],["this._saveusergames(username",{"_index":911,"title":{},"body":{"interfaces/Game.html":{},"interfaces/GameAchievement.html":{},"injectables/GameService.html":{}}}],["this.achievementupdated.emit",{"_index":1018,"title":{},"body":{"components/GameDetailModalComponent.html":{}}}],["this.allgames",{"_index":635,"title":{},"body":{"components/CategoryComponent.html":{}}}],["this.allgames.filter(game",{"_index":691,"title":{},"body":{"components/CategoryComponent.html":{}}}],["this.allgames.foreach(game",{"_index":664,"title":{},"body":{"components/CategoryComponent.html":{}}}],["this.allusergames",{"_index":1231,"title":{},"body":{"components/MyLibraryComponent.html":{}}}],["this.allusergames.filter(game",{"_index":1239,"title":{},"body":{"components/MyLibraryComponent.html":{}}}],["this.allusergames.find(game",{"_index":1245,"title":{},"body":{"components/MyLibraryComponent.html":{}}}],["this.api_key",{"_index":203,"title":{},"body":{"injectables/ApiService.html":{},"interfaces/RawgAchievementApi.html":{},"interfaces/RawgAchievementsApiResponse.html":{},"interfaces/RawgApiResponse.html":{},"interfaces/RawgGame.html":{}}}],["this.api_key).set('page_size",{"_index":178,"title":{},"body":{"injectables/ApiService.html":{},"interfaces/RawgAchievementApi.html":{},"interfaces/RawgAchievementsApiResponse.html":{},"interfaces/RawgApiResponse.html":{},"interfaces/RawgGame.html":{}}}],["this.authservice.currentuser.subscribe(user",{"_index":308,"title":{},"body":{"components/AppComponent.html":{},"components/CategoryComponent.html":{},"components/MyLibraryComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/RegisterComponent.html":{},"components/UserProfileComponent.html":{}}}],["this.authservice.getcurrentuser",{"_index":705,"title":{},"body":{"components/CategoryComponent.html":{},"components/GameDetailModalComponent.html":{}}}],["this.authservice.init",{"_index":620,"title":{},"body":{"components/CategoryComponent.html":{},"components/HomeComponent.html":{}}}],["this.authservice.login(username",{"_index":1156,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.authservice.logout",{"_index":1047,"title":{},"body":{"components/HeaderComponent.html":{}}}],["this.authservice.register(newuser",{"_index":1383,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.authservice.updatepassword(email",{"_index":1331,"title":{},"body":{"components/RecoverPasswordComponent.html":{}}}],["this.authservice.updateprofile(this.currentuser.username",{"_index":1428,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["this.authsubscription",{"_index":621,"title":{},"body":{"components/CategoryComponent.html":{},"components/LoginComponent.html":{},"components/MyLibraryComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/RegisterComponent.html":{},"components/UserProfileComponent.html":{}}}],["this.authsubscription.unsubscribe",{"_index":729,"title":{},"body":{"components/CategoryComponent.html":{},"components/LoginComponent.html":{},"components/MyLibraryComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/RegisterComponent.html":{},"components/UserProfileComponent.html":{}}}],["this.availablegenres",{"_index":636,"title":{},"body":{"components/CategoryComponent.html":{}}}],["this.availableplatforms",{"_index":637,"title":{},"body":{"components/CategoryComponent.html":{}}}],["this.bsmodal",{"_index":790,"title":{},"body":{"components/ConfirmationModalComponent.html":{},"components/GameDetailModalComponent.html":{}}}],["this.bsmodal.hide",{"_index":801,"title":{},"body":{"components/ConfirmationModalComponent.html":{},"components/GameDetailModalComponent.html":{}}}],["this.bsmodal.show",{"_index":800,"title":{},"body":{"components/ConfirmationModalComponent.html":{},"components/GameDetailModalComponent.html":{}}}],["this.capitalizefirstletter(this.categoryslug.replace",{"_index":628,"title":{},"body":{"components/CategoryComponent.html":{}}}],["this.categories",{"_index":1082,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.categoriessubscription",{"_index":1079,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.categoriessubscription.unsubscribe",{"_index":1114,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.categoryname",{"_index":627,"title":{},"body":{"components/CategoryComponent.html":{}}}],["this.categoryslug",{"_index":625,"title":{},"body":{"components/CategoryComponent.html":{}}}],["this.confirmationmodal.show",{"_index":1271,"title":{},"body":{"components/MyLibraryComponent.html":{}}}],["this.confirmationmodalconfirmtext",{"_index":1270,"title":{},"body":{"components/MyLibraryComponent.html":{}}}],["this.confirmationmodalmessage",{"_index":1266,"title":{},"body":{"components/MyLibraryComponent.html":{}}}],["this.confirmationmodaltitle",{"_index":1265,"title":{},"body":{"components/MyLibraryComponent.html":{}}}],["this.confirmed.emit(false",{"_index":807,"title":{},"body":{"components/ConfirmationModalComponent.html":{}}}],["this.confirmed.emit(true",{"_index":803,"title":{},"body":{"components/ConfirmationModalComponent.html":{}}}],["this.currentuser",{"_index":309,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/CategoryComponent.html":{},"components/MyLibraryComponent.html":{},"interfaces/User.html":{},"components/UserProfileComponent.html":{}}}],["this.currentuser.email",{"_index":1424,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["this.currentuser.role",{"_index":1427,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["this.currentusersubject",{"_index":466,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/User.html":{}}}],["this.currentusersubject.asobservable",{"_index":468,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/User.html":{}}}],["this.currentusersubject.next(null",{"_index":534,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/User.html":{}}}],["this.currentusersubject.next(user",{"_index":497,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/User.html":{}}}],["this.currentusersubject.value",{"_index":485,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/User.html":{}}}],["this.error",{"_index":1005,"title":{},"body":{"components/GameDetailModalComponent.html":{},"components/MyLibraryComponent.html":{}}}],["this.fb.group",{"_index":1149,"title":{},"body":{"components/LoginComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/RegisterComponent.html":{},"components/UserProfileComponent.html":{}}}],["this.filterandrendergames",{"_index":1233,"title":{},"body":{"components/MyLibraryComponent.html":{}}}],["this.filteredgames",{"_index":690,"title":{},"body":{"components/CategoryComponent.html":{},"components/MyLibraryComponent.html":{}}}],["this.filtergames",{"_index":638,"title":{},"body":{"components/CategoryComponent.html":{}}}],["this.game",{"_index":1004,"title":{},"body":{"components/GameDetailModalComponent.html":{}}}],["this.gamedetailmodal",{"_index":725,"title":{},"body":{"components/CategoryComponent.html":{},"components/MyLibraryComponent.html":{}}}],["this.gamedetailmodal.show",{"_index":726,"title":{},"body":{"components/CategoryComponent.html":{},"components/MyLibraryComponent.html":{}}}],["this.gameidtodelete",{"_index":1263,"title":{},"body":{"components/MyLibraryComponent.html":{}}}],["this.gameservice.addgame('nombreusuario",{"_index":866,"title":{},"body":{"interfaces/Game.html":{},"interfaces/GameAchievement.html":{},"injectables/GameService.html":{}}}],["this.gameservice.addgame(currentuser.username",{"_index":710,"title":{},"body":{"components/CategoryComponent.html":{}}}],["this.gameservice.deletegame(this.currentuser.username",{"_index":1277,"title":{},"body":{"components/MyLibraryComponent.html":{}}}],["this.gameservice.getusergames('nombreusuario",{"_index":865,"title":{},"body":{"interfaces/Game.html":{},"interfaces/GameAchievement.html":{},"injectables/GameService.html":{}}}],["this.gameservice.getusergames(currentuser.username",{"_index":1011,"title":{},"body":{"components/GameDetailModalComponent.html":{}}}],["this.gameservice.getusergames(this.currentuser.username",{"_index":1232,"title":{},"body":{"components/MyLibraryComponent.html":{}}}],["this.gameservice.updategame(currentuser.username",{"_index":1017,"title":{},"body":{"components/GameDetailModalComponent.html":{}}}],["this.gameservice.updategame(this.currentuser.username",{"_index":1247,"title":{},"body":{"components/MyLibraryComponent.html":{}}}],["this.getcategoryicon(name",{"_index":1084,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.getcurrentuser",{"_index":519,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/User.html":{}}}],["this.getusergames(username",{"_index":880,"title":{},"body":{"interfaces/Game.html":{},"interfaces/GameAchievement.html":{},"injectables/GameService.html":{}}}],["this.hide",{"_index":804,"title":{},"body":{"components/ConfirmationModalComponent.html":{}}}],["this.http.get(`${this.base_url}/games",{"_index":189,"title":{},"body":{"injectables/ApiService.html":{},"interfaces/RawgAchievementApi.html":{},"interfaces/RawgAchievementsApiResponse.html":{},"interfaces/RawgApiResponse.html":{},"interfaces/RawgGame.html":{}}}],["this.http.get(`${this.base_url}/games/${gameid}/achievements",{"_index":218,"title":{},"body":{"injectables/ApiService.html":{},"interfaces/RawgAchievementApi.html":{},"interfaces/RawgAchievementsApiResponse.html":{},"interfaces/RawgApiResponse.html":{},"interfaces/RawgGame.html":{}}}],["this.http.get(`${this.base_url}/games/${id",{"_index":204,"title":{},"body":{"injectables/ApiService.html":{},"interfaces/RawgAchievementApi.html":{},"interfaces/RawgAchievementsApiResponse.html":{},"interfaces/RawgApiResponse.html":{},"interfaces/RawgGame.html":{}}}],["this.http.get(`${this.base_url}/genres",{"_index":249,"title":{},"body":{"injectables/ApiService.html":{},"interfaces/RawgAchievementApi.html":{},"interfaces/RawgAchievementsApiResponse.html":{},"interfaces/RawgApiResponse.html":{},"interfaces/RawgGame.html":{}}}],["this.http.get(`${this.base_url}/platforms",{"_index":252,"title":{},"body":{"injectables/ApiService.html":{},"interfaces/RawgAchievementApi.html":{},"interfaces/RawgAchievementsApiResponse.html":{},"interfaces/RawgApiResponse.html":{},"interfaces/RawgGame.html":{}}}],["this.init",{"_index":463,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/User.html":{}}}],["this.initprofileform(user",{"_index":1411,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["this.loadusergames",{"_index":1230,"title":{},"body":{"components/MyLibraryComponent.html":{}}}],["this.loginform",{"_index":1148,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.loginform.invalid",{"_index":1151,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.loginform.markallastouched",{"_index":1152,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.loginform.value",{"_index":1155,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.loginmessage",{"_index":1153,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.maprawgachievementtogameachievement(rawgachievement",{"_index":220,"title":{},"body":{"injectables/ApiService.html":{},"interfaces/RawgAchievementApi.html":{},"interfaces/RawgAchievementsApiResponse.html":{},"interfaces/RawgApiResponse.html":{},"interfaces/RawgGame.html":{}}}],["this.maprawggametogame(rawggame",{"_index":193,"title":{},"body":{"injectables/ApiService.html":{},"interfaces/RawgAchievementApi.html":{},"interfaces/RawgAchievementsApiResponse.html":{},"interfaces/RawgApiResponse.html":{},"interfaces/RawgGame.html":{}}}],["this.modalelementref.nativeelement.addeventlistener('hidden.bs.modal",{"_index":795,"title":{},"body":{"components/ConfirmationModalComponent.html":{},"components/GameDetailModalComponent.html":{}}}],["this.modalelementref?.nativeelement",{"_index":789,"title":{},"body":{"components/ConfirmationModalComponent.html":{},"components/GameDetailModalComponent.html":{}}}],["this.profileform",{"_index":1412,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["this.profileform.get('birthday')?.value",{"_index":1425,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["this.profileform.get('fullname')?.value",{"_index":1422,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["this.profileform.get('password')?.value",{"_index":1426,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["this.profileform.get('username')?.value",{"_index":1423,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["this.profileform.invalid",{"_index":1418,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["this.profileform.markallastouched",{"_index":1419,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["this.profilemessage",{"_index":1420,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["this.rawgapiservice.getgameachievements(game.id).pipe",{"_index":721,"title":{},"body":{"components/CategoryComponent.html":{}}}],["this.rawgapiservice.getgameachievements(game.id).subscribe",{"_index":707,"title":{},"body":{"components/CategoryComponent.html":{}}}],["this.rawgapiservice.getgamedetails(game.id",{"_index":720,"title":{},"body":{"components/CategoryComponent.html":{}}}],["this.rawgapiservice.getgamedetails(game.id).pipe",{"_index":1283,"title":{},"body":{"components/MyLibraryComponent.html":{}}}],["this.rawgapiservice.getgames",{"_index":631,"title":{},"body":{"components/CategoryComponent.html":{}}}],["this.rawgapiservice.getgenres",{"_index":632,"title":{},"body":{"components/CategoryComponent.html":{}}}],["this.rawgapiservice.getgenres().subscribe",{"_index":1080,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.rawgapiservice.getplatforms",{"_index":633,"title":{},"body":{"components/CategoryComponent.html":{}}}],["this.recoveryform",{"_index":1320,"title":{},"body":{"components/RecoverPasswordComponent.html":{}}}],["this.recoveryform.invalid",{"_index":1326,"title":{},"body":{"components/RecoverPasswordComponent.html":{}}}],["this.recoveryform.markallastouched",{"_index":1327,"title":{},"body":{"components/RecoverPasswordComponent.html":{}}}],["this.recoveryform.value",{"_index":1330,"title":{},"body":{"components/RecoverPasswordComponent.html":{}}}],["this.recoverymessage",{"_index":1328,"title":{},"body":{"components/RecoverPasswordComponent.html":{}}}],["this.registerform",{"_index":1373,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.registerform.invalid",{"_index":1379,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.registerform.markallastouched",{"_index":1380,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.registerform.value",{"_index":1382,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.registermessage",{"_index":1381,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.resetfilters",{"_index":630,"title":{},"body":{"components/CategoryComponent.html":{}}}],["this.route.parammap.pipe",{"_index":623,"title":{},"body":{"components/CategoryComponent.html":{}}}],["this.router.navigate(['/inicio",{"_index":1325,"title":{},"body":{"components/RecoverPasswordComponent.html":{},"components/RegisterComponent.html":{},"components/UserProfileComponent.html":{}}}],["this.router.navigate(['/login",{"_index":1048,"title":{},"body":{"components/HeaderComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/RegisterComponent.html":{}}}],["this.router.navigate(['/mi",{"_index":1159,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.routesubscription",{"_index":622,"title":{},"body":{"components/CategoryComponent.html":{}}}],["this.routesubscription.unsubscribe",{"_index":728,"title":{},"body":{"components/CategoryComponent.html":{}}}],["this.searchterm",{"_index":677,"title":{},"body":{"components/CategoryComponent.html":{}}}],["this.searchterm.tolowercase",{"_index":685,"title":{},"body":{"components/CategoryComponent.html":{},"components/MyLibraryComponent.html":{}}}],["this.selectedfavorite",{"_index":1238,"title":{},"body":{"components/MyLibraryComponent.html":{}}}],["this.selectedgameformodal",{"_index":724,"title":{},"body":{"components/CategoryComponent.html":{},"components/MyLibraryComponent.html":{}}}],["this.selectedgenre",{"_index":679,"title":{},"body":{"components/CategoryComponent.html":{}}}],["this.selectedgenre.tolowercase",{"_index":689,"title":{},"body":{"components/CategoryComponent.html":{}}}],["this.selectedplatform",{"_index":678,"title":{},"body":{"components/CategoryComponent.html":{}}}],["this.selectedplatform.tolowercase",{"_index":687,"title":{},"body":{"components/CategoryComponent.html":{}}}],["this.selectedstatus",{"_index":1236,"title":{},"body":{"components/MyLibraryComponent.html":{}}}],["throw",{"_index":213,"title":{},"body":{"injectables/ApiService.html":{},"interfaces/RawgAchievementApi.html":{},"interfaces/RawgAchievementsApiResponse.html":{},"interfaces/RawgApiResponse.html":{},"interfaces/RawgGame.html":{}}}],["tienes",{"_index":1166,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["title",{"_index":228,"title":{},"body":{"injectables/ApiService.html":{},"components/AppComponent.html":{},"components/ConfirmationModalComponent.html":{},"interfaces/Game.html":{},"interfaces/GameAchievement.html":{},"injectables/GameService.html":{},"interfaces/RawgAchievementApi.html":{},"interfaces/RawgAchievementsApiResponse.html":{},"interfaces/RawgApiResponse.html":{},"interfaces/RawgGame.html":{}}}],["titlecase",{"_index":1055,"title":{},"body":{"components/HeaderComponent.html":{}}}],["todas",{"_index":730,"title":{},"body":{"components/CategoryComponent.html":{},"components/HeaderComponent.html":{}}}],["todos",{"_index":731,"title":{},"body":{"components/CategoryComponent.html":{},"components/FooterComponent.html":{},"interfaces/Game.html":{},"interfaces/GameAchievement.html":{},"injectables/GameService.html":{},"components/LoginComponent.html":{},"components/MyLibraryComponent.html":{}}}],["toggle",{"_index":1244,"title":{},"body":{"components/MyLibraryComponent.html":{}}}],["togglefavorite",{"_index":943,"title":{},"body":{"components/GameCardComponent.html":{}}}],["toggleplayed",{"_index":944,"title":{},"body":{"components/GameCardComponent.html":{}}}],["transformado",{"_index":96,"title":{},"body":{"injectables/ApiService.html":{},"interfaces/RawgAchievementApi.html":{},"interfaces/RawgAchievementsApiResponse.html":{},"interfaces/RawgApiResponse.html":{},"interfaces/RawgGame.html":{}}}],["tree",{"_index":262,"title":{},"body":{"components/AppComponent.html":{},"components/CategoryComponent.html":{},"components/ConfirmationModalComponent.html":{},"components/FooterComponent.html":{},"components/GameCardComponent.html":{},"components/GameDetailModalComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/MyLibraryComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/RegisterComponent.html":{},"components/UserProfileComponent.html":{}}}],["trofeos",{"_index":1020,"title":{},"body":{"components/GameDetailModalComponent.html":{}}}],["true",{"_index":206,"title":{},"body":{"injectables/ApiService.html":{},"injectables/AuthService.html":{},"interfaces/Game.html":{},"interfaces/GameAchievement.html":{},"injectables/GameService.html":{},"interfaces/RawgAchievementApi.html":{},"interfaces/RawgAchievementsApiResponse.html":{},"interfaces/RawgApiResponse.html":{},"interfaces/RawgGame.html":{},"interfaces/User.html":{},"components/UserProfileComponent.html":{},"miscellaneous/variables.html":{}}}],["tslib",{"_index":1490,"title":{},"body":{"dependencies.html":{}}}],["tu",{"_index":116,"title":{},"body":{"injectables/ApiService.html":{},"components/CategoryComponent.html":{},"interfaces/Game.html":{},"interfaces/GameAchievement.html":{},"injectables/GameService.html":{},"components/LoginComponent.html":{},"components/MyLibraryComponent.html":{},"interfaces/RawgAchievementApi.html":{},"interfaces/RawgAchievementsApiResponse.html":{},"interfaces/RawgApiResponse.html":{},"interfaces/RawgGame.html":{},"components/RegisterComponent.html":{},"components/UserProfileComponent.html":{}}}],["tus",{"_index":858,"title":{},"body":{"interfaces/Game.html":{},"interfaces/GameAchievement.html":{},"injectables/GameService.html":{},"components/MyLibraryComponent.html":{}}}],["tutorial",{"_index":897,"title":{},"body":{"interfaces/Game.html":{},"interfaces/GameAchievement.html":{},"injectables/GameService.html":{}}}],["type",{"_index":29,"title":{},"body":{"injectables/ApiService.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/CategoryComponent.html":{},"components/ConfirmationModalComponent.html":{},"interfaces/Game.html":{},"interfaces/GameAchievement.html":{},"components/GameCardComponent.html":{},"components/GameDetailModalComponent.html":{},"injectables/GameService.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/MyLibraryComponent.html":{},"interfaces/RawgAchievementApi.html":{},"interfaces/RawgAchievementsApiResponse.html":{},"interfaces/RawgApiResponse.html":{},"interfaces/RawgGame.html":{},"components/RecoverPasswordComponent.html":{},"components/RegisterComponent.html":{},"interfaces/User.html":{},"components/UserProfileComponent.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["typescript",{"_index":863,"title":{},"body":{"interfaces/Game.html":{},"interfaces/GameAchievement.html":{},"injectables/GameService.html":{}}}],["término",{"_index":83,"title":{},"body":{"injectables/ApiService.html":{},"interfaces/RawgAchievementApi.html":{},"interfaces/RawgAchievementsApiResponse.html":{},"interfaces/RawgApiResponse.html":{},"interfaces/RawgGame.html":{}}}],["título",{"_index":741,"title":{},"body":{"components/ConfirmationModalComponent.html":{},"interfaces/Game.html":{},"interfaces/GameAchievement.html":{},"components/GameDetailModalComponent.html":{},"injectables/GameService.html":{}}}],["u.email",{"_index":515,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/User.html":{}}}],["u.password",{"_index":494,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/User.html":{}}}],["u.username",{"_index":493,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/User.html":{}}}],["un",{"_index":41,"title":{},"body":{"injectables/ApiService.html":{},"injectables/AuthService.html":{},"components/CategoryComponent.html":{},"components/ConfirmationModalComponent.html":{},"interfaces/Game.html":{},"interfaces/GameAchievement.html":{},"components/GameDetailModalComponent.html":{},"injectables/GameService.html":{},"components/LoginComponent.html":{},"components/MyLibraryComponent.html":{},"interfaces/RawgAchievementApi.html":{},"interfaces/RawgAchievementsApiResponse.html":{},"interfaces/RawgApiResponse.html":{},"interfaces/RawgGame.html":{},"components/RegisterComponent.html":{},"interfaces/User.html":{},"components/UserProfileComponent.html":{},"miscellaneous/functions.html":{}}}],["una",{"_index":77,"title":{},"body":{"injectables/ApiService.html":{},"components/CategoryComponent.html":{},"components/GameCardComponent.html":{},"components/GameDetailModalComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"interfaces/RawgAchievementApi.html":{},"interfaces/RawgAchievementsApiResponse.html":{},"interfaces/RawgApiResponse.html":{},"interfaces/RawgGame.html":{},"components/RecoverPasswordComponent.html":{},"components/RegisterComponent.html":{},"miscellaneous/functions.html":{}}}],["unit",{"_index":1541,"title":{},"body":{"index.html":{}}}],["updateddata",{"_index":1421,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["updatedgame",{"_index":917,"title":{},"body":{"interfaces/Game.html":{},"interfaces/GameAchievement.html":{},"injectables/GameService.html":{}}}],["updatedgame.id",{"_index":919,"title":{},"body":{"interfaces/Game.html":{},"interfaces/GameAchievement.html":{},"injectables/GameService.html":{}}}],["updategame",{"_index":1027,"title":{},"body":{"injectables/GameService.html":{}}}],["updategame(username",{"_index":916,"title":{},"body":{"interfaces/Game.html":{},"interfaces/GameAchievement.html":{},"injectables/GameService.html":{}}}],["updatehours",{"_index":945,"title":{},"body":{"components/GameCardComponent.html":{}}}],["updatepassword",{"_index":423,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/User.html":{}}}],["updatepassword(useremail",{"_index":437,"title":{},"body":{"injectables/AuthService.html":{}}}],["updateprofile",{"_index":424,"title":{},"body":{"injectables/AuthService.html":{}}}],["updateprofile(originalusername",{"_index":441,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/User.html":{}}}],["url",{"_index":841,"title":{},"body":{"interfaces/Game.html":{},"interfaces/GameAchievement.html":{},"injectables/GameService.html":{}}}],["usa",{"_index":936,"title":{},"body":{"components/GameCardComponent.html":{},"components/HomeComponent.html":{}}}],["usagenotes",{"_index":306,"title":{},"body":{"components/AppComponent.html":{},"components/CategoryComponent.html":{},"components/ConfirmationModalComponent.html":{},"components/FooterComponent.html":{},"interfaces/Game.html":{},"interfaces/GameAchievement.html":{},"components/GameCardComponent.html":{},"components/GameDetailModalComponent.html":{},"injectables/GameService.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/MyLibraryComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/RegisterComponent.html":{},"components/UserProfileComponent.html":{}}}],["usar",{"_index":652,"title":{},"body":{"components/CategoryComponent.html":{},"components/MyLibraryComponent.html":{}}}],["use",{"_index":1533,"title":{},"body":{"index.html":{}}}],["user",{"_index":301,"title":{"interfaces/User.html":{}},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/CategoryComponent.html":{},"components/ConfirmationModalComponent.html":{},"components/FooterComponent.html":{},"components/GameCardComponent.html":{},"components/GameDetailModalComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/MyLibraryComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/RegisterComponent.html":{},"interfaces/User.html":{},"components/UserProfileComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["user.email",{"_index":1414,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["user.fullname",{"_index":1413,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["user.password",{"_index":1417,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["user.role",{"_index":1054,"title":{},"body":{"components/HeaderComponent.html":{},"miscellaneous/variables.html":{}}}],["user.username",{"_index":1052,"title":{},"body":{"components/HeaderComponent.html":{},"components/UserProfileComponent.html":{}}}],["user1",{"_index":1295,"title":{},"body":{"components/MyLibraryComponent.html":{}}}],["user123",{"_index":1296,"title":{},"body":{"components/MyLibraryComponent.html":{}}}],["user_games_key",{"_index":455,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Game.html":{},"interfaces/GameAchievement.html":{},"injectables/GameService.html":{},"interfaces/User.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["useremail",{"_index":440,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/User.html":{}}}],["usergames",{"_index":864,"title":{},"body":{"interfaces/Game.html":{},"interfaces/GameAchievement.html":{},"components/GameDetailModalComponent.html":{},"injectables/GameService.html":{}}}],["usergames.filter(game",{"_index":922,"title":{},"body":{"interfaces/Game.html":{},"interfaces/GameAchievement.html":{},"injectables/GameService.html":{}}}],["usergames.find(g",{"_index":1013,"title":{},"body":{"components/GameDetailModalComponent.html":{}}}],["usergames.map(game",{"_index":918,"title":{},"body":{"interfaces/Game.html":{},"interfaces/GameAchievement.html":{},"injectables/GameService.html":{}}}],["usergames.push(newgame",{"_index":910,"title":{},"body":{"interfaces/Game.html":{},"interfaces/GameAchievement.html":{},"injectables/GameService.html":{}}}],["usergames.some(game",{"_index":886,"title":{},"body":{"interfaces/Game.html":{},"interfaces/GameAchievement.html":{},"injectables/GameService.html":{}}}],["userindex",{"_index":513,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/User.html":{}}}],["username",{"_index":431,"title":{},"body":{"injectables/AuthService.html":{},"injectables/GameService.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"interfaces/User.html":{},"components/UserProfileComponent.html":{}}}],["userprofilecomponent",{"_index":340,"title":{"components/UserProfileComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/CategoryComponent.html":{},"components/ConfirmationModalComponent.html":{},"components/FooterComponent.html":{},"components/GameCardComponent.html":{},"components/GameDetailModalComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/MyLibraryComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/RegisterComponent.html":{},"components/UserProfileComponent.html":{},"coverage.html":{},"overview.html":{}}}],["users",{"_index":490,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/User.html":{}}}],["users.find(u",{"_index":492,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/User.html":{}}}],["users.findindex((u",{"_index":514,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/User.html":{}}}],["users.push(newuser",{"_index":505,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/User.html":{}}}],["users.some((u",{"_index":502,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/User.html":{}}}],["users[userindex",{"_index":530,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/User.html":{}}}],["users[userindex].password",{"_index":518,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/User.html":{}}}],["uso",{"_index":529,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/User.html":{}}}],["usuario",{"_index":283,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/CategoryComponent.html":{},"components/ConfirmationModalComponent.html":{},"interfaces/Game.html":{},"interfaces/GameAchievement.html":{},"components/GameDetailModalComponent.html":{},"injectables/GameService.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/MyLibraryComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/RegisterComponent.html":{},"interfaces/User.html":{},"components/UserProfileComponent.html":{}}}],["usuarios",{"_index":471,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Game.html":{},"interfaces/GameAchievement.html":{},"injectables/GameService.html":{},"components/LoginComponent.html":{},"components/MyLibraryComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/RegisterComponent.html":{},"interfaces/User.html":{}}}],["utiliza",{"_index":1122,"title":{},"body":{"components/LoginComponent.html":{},"components/RecoverPasswordComponent.html":{}}}],["utilizado",{"_index":925,"title":{},"body":{"components/GameCardComponent.html":{}}}],["utilizando",{"_index":1281,"title":{},"body":{"components/MyLibraryComponent.html":{}}}],["utils/validator",{"_index":1370,"title":{},"body":{"components/RegisterComponent.html":{}}}],["vacío",{"_index":200,"title":{},"body":{"injectables/ApiService.html":{},"interfaces/RawgAchievementApi.html":{},"interfaces/RawgAchievementsApiResponse.html":{},"interfaces/RawgApiResponse.html":{},"interfaces/RawgGame.html":{}}}],["validaciones",{"_index":1371,"title":{},"body":{"components/RegisterComponent.html":{},"components/UserProfileComponent.html":{}}}],["validación",{"_index":1350,"title":{},"body":{"components/RegisterComponent.html":{}}}],["validadora",{"_index":1498,"title":{},"body":{"miscellaneous/functions.html":{}}}],["validadores",{"_index":1125,"title":{},"body":{"components/LoginComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/RegisterComponent.html":{}}}],["validatorfn",{"_index":1497,"title":{},"body":{"miscellaneous/functions.html":{}}}],["validators",{"_index":1143,"title":{},"body":{"components/LoginComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/RegisterComponent.html":{},"components/UserProfileComponent.html":{}}}],["validators.required",{"_index":1150,"title":{},"body":{"components/LoginComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/RegisterComponent.html":{},"components/UserProfileComponent.html":{}}}],["valores",{"_index":1061,"title":{},"body":{"components/HomeComponent.html":{}}}],["value",{"_index":81,"title":{},"body":{"injectables/ApiService.html":{},"components/AppComponent.html":{},"components/CategoryComponent.html":{},"components/ConfirmationModalComponent.html":{},"components/GameCardComponent.html":{},"components/GameDetailModalComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/MyLibraryComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/RegisterComponent.html":{},"components/UserProfileComponent.html":{},"miscellaneous/variables.html":{}}}],["van",{"_index":996,"title":{},"body":{"components/GameDetailModalComponent.html":{}}}],["var",{"_index":313,"title":{},"body":{"components/AppComponent.html":{},"components/CategoryComponent.html":{},"components/ConfirmationModalComponent.html":{},"components/FooterComponent.html":{},"components/GameCardComponent.html":{},"components/GameDetailModalComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/MyLibraryComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/RegisterComponent.html":{},"components/UserProfileComponent.html":{}}}],["variable",{"_index":1449,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":1571,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["varios",{"_index":907,"title":{},"body":{"interfaces/Game.html":{},"interfaces/GameAchievement.html":{},"injectables/GameService.html":{}}}],["ver",{"_index":547,"title":{},"body":{"components/CategoryComponent.html":{},"components/GameCardComponent.html":{},"components/HeaderComponent.html":{},"components/MyLibraryComponent.html":{},"components/UserProfileComponent.html":{}}}],["verifica",{"_index":884,"title":{},"body":{"interfaces/Game.html":{},"interfaces/GameAchievement.html":{},"injectables/GameService.html":{}}}],["verificar",{"_index":972,"title":{},"body":{"components/GameDetailModalComponent.html":{}}}],["version",{"_index":1515,"title":{},"body":{"index.html":{},"properties.html":{}}}],["via",{"_index":1545,"title":{},"body":{"index.html":{}}}],["videojuego",{"_index":727,"title":{},"body":{"components/CategoryComponent.html":{},"interfaces/Game.html":{},"interfaces/GameAchievement.html":{},"components/GameDetailModalComponent.html":{},"injectables/GameService.html":{}}}],["videojuegos",{"_index":537,"title":{},"body":{"components/CategoryComponent.html":{},"components/HomeComponent.html":{},"components/MyLibraryComponent.html":{}}}],["viene",{"_index":223,"title":{},"body":{"injectables/ApiService.html":{},"interfaces/RawgAchievementApi.html":{},"interfaces/RawgAchievementsApiResponse.html":{},"interfaces/RawgApiResponse.html":{},"interfaces/RawgGame.html":{}}}],["viewchild",{"_index":612,"title":{},"body":{"components/CategoryComponent.html":{},"components/ConfirmationModalComponent.html":{},"components/GameDetailModalComponent.html":{},"components/MyLibraryComponent.html":{}}}],["viewchild('confirmationmodalelement",{"_index":778,"title":{},"body":{"components/ConfirmationModalComponent.html":{}}}],["viewchild('gamedetailmodalelement",{"_index":993,"title":{},"body":{"components/GameDetailModalComponent.html":{}}}],["viewchild(confirmationmodalcomponent",{"_index":1214,"title":{},"body":{"components/MyLibraryComponent.html":{}}}],["viewchild(gamedetailmodalcomponent",{"_index":605,"title":{},"body":{"components/CategoryComponent.html":{},"components/MyLibraryComponent.html":{}}}],["viewdetails",{"_index":946,"title":{},"body":{"components/GameCardComponent.html":{}}}],["vista",{"_index":786,"title":{},"body":{"components/ConfirmationModalComponent.html":{},"components/GameDetailModalComponent.html":{},"components/MyLibraryComponent.html":{}}}],["visualización",{"_index":1037,"title":{},"body":{"components/HeaderComponent.html":{}}}],["void",{"_index":300,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/CategoryComponent.html":{},"components/ConfirmationModalComponent.html":{},"interfaces/Game.html":{},"interfaces/GameAchievement.html":{},"components/GameDetailModalComponent.html":{},"injectables/GameService.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/MyLibraryComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/RegisterComponent.html":{},"interfaces/User.html":{},"components/UserProfileComponent.html":{}}}],["volver",{"_index":1344,"title":{},"body":{"components/RecoverPasswordComponent.html":{}}}],["vs",{"_index":1039,"title":{},"body":{"components/HeaderComponent.html":{}}}],["vuelve",{"_index":1278,"title":{},"body":{"components/MyLibraryComponent.html":{}}}],["válida",{"_index":1258,"title":{},"body":{"components/MyLibraryComponent.html":{}}}],["wizard",{"_index":1090,"title":{},"body":{"components/HomeComponent.html":{}}}],["y",{"_index":185,"title":{},"body":{"injectables/ApiService.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/CategoryComponent.html":{},"components/ConfirmationModalComponent.html":{},"interfaces/Game.html":{},"interfaces/GameAchievement.html":{},"components/GameCardComponent.html":{},"components/GameDetailModalComponent.html":{},"injectables/GameService.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/MyLibraryComponent.html":{},"interfaces/RawgAchievementApi.html":{},"interfaces/RawgAchievementsApiResponse.html":{},"interfaces/RawgApiResponse.html":{},"interfaces/RawgGame.html":{},"components/RecoverPasswordComponent.html":{},"components/RegisterComponent.html":{},"interfaces/User.html":{},"components/UserProfileComponent.html":{}}}],["ya",{"_index":126,"title":{},"body":{"injectables/ApiService.html":{},"injectables/AuthService.html":{},"interfaces/Game.html":{},"interfaces/GameAchievement.html":{},"injectables/GameService.html":{},"interfaces/RawgAchievementApi.html":{},"interfaces/RawgAchievementsApiResponse.html":{},"interfaces/RawgApiResponse.html":{},"interfaces/RawgGame.html":{},"components/RecoverPasswordComponent.html":{},"components/RegisterComponent.html":{},"interfaces/User.html":{}}}],["zone.js",{"_index":1492,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":358,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"injectables/ApiService.html":{"url":"injectables/ApiService.html","title":"injectable - ApiService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ApiService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/api/api.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                API_KEY\n                            \n                            \n                                    Private\n                                    Readonly\n                                BASE_URL\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getGameAchievements\n                            \n                            \n                                getGameDetails\n                            \n                            \n                                getGames\n                            \n                            \n                                getGenres\n                            \n                            \n                                getPlatforms\n                            \n                            \n                                    Private\n                                mapRawgAchievementToGameAchievement\n                            \n                            \n                                    Private\n                                mapRawgGameToGame\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/api/api.service.ts:47\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getGameAchievements\n                        \n                    \n                \n            \n            \n                \ngetGameAchievements(gameId: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/api/api.service.ts:103\n                        \n                    \n\n\n            \n                \n                        Obtiene la lista de logros para un juego específico por su ID.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                gameId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    El ID del juego en RAWG.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                Un Observable de un array de objetos GameAchievement.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getGameDetails\n                        \n                    \n                \n            \n            \n                \ngetGameDetails(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/api/api.service.ts:87\n                        \n                    \n\n\n            \n                \n                        Obtiene los detalles completos de un juego específico por su ID.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    El ID del juego en RAWG.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                Un Observable de un objeto Game. Incluye la descripción completa si está disponible.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getGames\n                        \n                    \n                \n            \n            \n                \ngetGames(searchQuery: string, genres: string, platforms: string, page_size: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/api/api.service.ts:59\n                        \n                    \n\n\n            \n                \n                        Obtiene una lista de juegos de la API de RAWG.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                searchQuery\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    ''\n                                            \n\n                                            \n                                                    Término de búsqueda para juegos.\n\n                                            \n                                        \n                                        \n                                                genres\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    ''\n                                            \n\n                                            \n                                                    IDs o slugs de géneros (separados por coma).\n\n                                            \n                                        \n                                        \n                                                platforms\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    ''\n                                            \n\n                                            \n                                                    IDs o slugs de plataformas (separados por coma).\n\n                                            \n                                        \n                                        \n                                                page_size\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    20\n                                            \n\n                                            \n                                                    Número de resultados por página.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                Un Observable de un array de objetos Game (transformado desde RawgGame).\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getGenres\n                        \n                    \n                \n            \n            \n                \ngetGenres()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/api/api.service.ts:158\n                        \n                    \n\n\n            \n                \n                        Obtiene la lista de géneros disponibles de la API de RAWG.\n\n\n                        \n                            Returns :     Observable\n\n                        \n                            \n                                Un Observable de un array de strings con los nombres de los géneros.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getPlatforms\n                        \n                    \n                \n            \n            \n                \ngetPlatforms()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/api/api.service.ts:173\n                        \n                    \n\n\n            \n                \n                        Obtiene la lista de plataformas disponibles de la API de RAWG.\n\n\n                        \n                            Returns :     Observable\n\n                        \n                            \n                                Un Observable de un array de strings con los nombres de las plataformas.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        mapRawgAchievementToGameAchievement\n                        \n                    \n                \n            \n            \n                \n                        \n                    mapRawgAchievementToGameAchievement(rawgAchievement: RawgAchievementApi)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/api/api.service.ts:143\n                        \n                    \n\n\n            \n                \n                        Mapea un objeto RawgAchievementApi a la interfaz GameAchievement de nuestra aplicación.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                rawgAchievement\n                                            \n                                                            RawgAchievementApi\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    El objeto de logro de la API.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         GameAchievement\n\n                        \n                            \n                                Un objeto GameAchievement compatible con tu aplicación (con 'completed' en false por defecto).\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        mapRawgGameToGame\n                        \n                    \n                \n            \n            \n                \n                        \n                    mapRawgGameToGame(rawgGame: RawgGame, includeFullDescription: boolean)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/api/api.service.ts:121\n                        \n                    \n\n\n            \n                \n                        Mapea un objeto RawgGame a la interfaz Game de nuestra aplicación.\nEsta función NO mapea los logros, ya que se obtienen de un endpoint separado.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                rawgGame\n                                            \n                                                            RawgGame\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                            \n                                                    El objeto RawgGame de la API.\n\n                                            \n                                        \n                                        \n                                                includeFullDescription\n                                            \n                                                            boolean\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    false\n                                            \n\n                                            \n                                                    Indica si se debe incluir la descripción completa (description_raw).\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Game\n\n                        \n                            \n                                Un objeto Game compatible con tu aplicación.\n\n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        API_KEY\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'e8efc69ecead49639193319812de4f90'\n                    \n                \n                    \n                        \n                                Defined in src/app/core/api/api.service.ts:47\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        BASE_URL\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'https://api.rawg.io/api'\n                    \n                \n                    \n                        \n                                Defined in src/app/core/api/api.service.ts:46\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient, HttpParams } from '@angular/common/http';\nimport { Observable, of } from 'rxjs';\nimport { map, catchError } from 'rxjs/operators';\nimport { Game, GameAchievement } from '../game/game.service';\n\n// Define la estructura de una respuesta de la API de RAWG para la lista de juegos\ninterface RawgApiResponse {\n  count: number;\n  next: string | null;\n  previous: string | null;\n  results: RawgGame[];\n}\n\n// Define la estructura simplificada de un juego de RAWGS\ninterface RawgGame {\n  id: number;\n  name: string;\n  background_image: string;\n  genres: { id: number; name: string; slug: string }[];\n  platforms: { platform: { id: number; name: string; slug: string } }[];\n  released: string;\n  description_raw?: string;\n  achievements_count?: number;\n}\n\n// Interfaz para la respuesta de la API de logros de RAWG\ninterface RawgAchievementsApiResponse {\n  count: number;\n  results: RawgAchievementApi[];\n}\n\n// Interfaz para la estructura de un logro individual de la API de RAWG\ninterface RawgAchievementApi {\n  id: number;\n  name: string;\n  description: string;\n  image: string;\n  percent: string;\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ApiService {\n  private readonly BASE_URL = 'https://api.rawg.io/api';\n  private readonly API_KEY = 'e8efc69ecead49639193319812de4f90';\n\n  constructor(private readonly http: HttpClient) { }\n\n  /**\n   * Obtiene una lista de juegos de la API de RAWG.\n   * @param searchQuery Término de búsqueda para juegos.\n   * @param genres IDs o slugs de géneros (separados por coma).\n   * @param platforms IDs o slugs de plataformas (separados por coma).\n   * @param page_size Número de resultados por página.\n   * @returns Un Observable de un array de objetos Game (transformado desde RawgGame).\n   */\n  getGames(searchQuery: string = '', genres: string = '', platforms: string = '', page_size: number = 20): Observable {\n    let params = new HttpParams().set('key', this.API_KEY).set('page_size', page_size.toString());\n\n    if (searchQuery) {\n      params = params.set('search', searchQuery);\n    }\n    if (genres) {\n      params = params.set('genres', genres);\n    }\n    if (platforms) {\n      params = params.set('platforms', platforms);\n    }\n\n    // Realiza la petición HTTP y mapea la respuesta al formato Game[]\n    return this.http.get(`${this.BASE_URL}/games`, { params }).pipe(\n      map(response => response.results.map(rawgGame => this.mapRawgGameToGame(rawgGame))),\n      catchError(error => {\n        console.error('Error fetching games from RAWG API:', error);\n        return of([]); // Retorna un observable de array vacío en caso de error\n      })\n    );\n  }\n\n  /**\n   * Obtiene los detalles completos de un juego específico por su ID.\n   * @param id El ID del juego en RAWG.\n   * @returns Un Observable de un objeto Game. Incluye la descripción completa si está disponible.\n   */\n  getGameDetails(id: number): Observable {\n    const params = new HttpParams().set('key', this.API_KEY);\n    return this.http.get(`${this.BASE_URL}/games/${id}`, { params }).pipe(\n      map(rawgGame => this.mapRawgGameToGame(rawgGame, true)), // Pasar true para indicar que es un detalle\n      catchError(error => {\n        console.error(`Error fetching details for game ID ${id} from RAWG API:`, error);\n        throw error; // Propaga el error para que el componente lo maneje\n      })\n    );\n  }\n\n  /**\n   * Obtiene la lista de logros para un juego específico por su ID.\n   * @param gameId El ID del juego en RAWG.\n   * @returns Un Observable de un array de objetos GameAchievement.\n   */\n  getGameAchievements(gameId: number): Observable {\n    const params = new HttpParams().set('key', this.API_KEY);\n    return this.http.get(`${this.BASE_URL}/games/${gameId}/achievements`, { params }).pipe(\n      map(response => response.results.map(rawgAchievement => this.mapRawgAchievementToGameAchievement(rawgAchievement))),\n      catchError(error => {\n        console.error(`Error fetching achievements for game ID ${gameId} from RAWG API:`, error);\n        return of([]); // Retorna un observable de array vacío en caso de error\n      })\n    );\n  }\n\n  /**\n   * Mapea un objeto RawgGame a la interfaz Game de nuestra aplicación.\n   * Esta función NO mapea los logros, ya que se obtienen de un endpoint separado.\n   * @param rawgGame El objeto RawgGame de la API.\n   * @param includeFullDescription Indica si se debe incluir la descripción completa (description_raw).\n   * @returns Un objeto Game compatible con tu aplicación.\n   */\n  private mapRawgGameToGame(rawgGame: RawgGame, includeFullDescription: boolean = false): Game {\n    // description_raw solo viene en la respuesta del endpoint de detalle de un juego (/games/{id})\n    const description = rawgGame.description_raw || rawgGame.name;\n    return {\n      id: rawgGame.id,\n      title: rawgGame.name,\n      description: includeFullDescription ? description : description.substring(0, 150) + (description.length > 150 ? '...' : ''),\n      platform: rawgGame.platforms.map(p => p.platform.name).join(', '),\n      genre: rawgGame.genres.map(g => g.name).join(', '),\n      hoursPlayed: 0,\n      image: rawgGame.background_image || 'https://placehold.co/400x250/374151/D1D5DB?text=No+Image',\n      isFavorite: false,\n      played: false,\n      achievements: [] \n    };\n  }\n\n  /**\n   * Mapea un objeto RawgAchievementApi a la interfaz GameAchievement de nuestra aplicación.\n   * @param rawgAchievement El objeto de logro de la API.\n   * @returns Un objeto GameAchievement compatible con tu aplicación (con 'completed' en false por defecto).\n   */\n  private mapRawgAchievementToGameAchievement(rawgAchievement: RawgAchievementApi): GameAchievement {\n    return {\n      id: rawgAchievement.id,\n      name: rawgAchievement.name,\n      description: rawgAchievement.description,\n      image: rawgAchievement.image || 'https://placehold.co/100x100/374151/D1D5DB?text=Ach',\n      percent: rawgAchievement.percent,\n      completed: false\n    };\n  }\n\n  /**\n   * Obtiene la lista de géneros disponibles de la API de RAWG.\n   * @returns Un Observable de un array de strings con los nombres de los géneros.\n   */\n  getGenres(): Observable {\n    const params = new HttpParams().set('key', this.API_KEY);\n    return this.http.get(`${this.BASE_URL}/genres`, { params }).pipe(\n      map(response => response.results.map((genre: any) => genre.name)),\n      catchError(error => {\n        console.error('Error fetching genres from RAWG API:', error);\n        return of([]);\n      })\n    );\n  }\n\n  /**\n   * Obtiene la lista de plataformas disponibles de la API de RAWG.\n   * @returns Un Observable de un array de strings con los nombres de las plataformas.\n   */\n  getPlatforms(): Observable {\n    const params = new HttpParams().set('key', this.API_KEY);\n    return this.http.get(`${this.BASE_URL}/platforms`, { params }).pipe(\n      map(response => response.results.map((platform: any) => platform.name)),\n      catchError(error => {\n        console.error('Error fetching platforms from RAWG API:', error);\n        return of([]);\n      })\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n    \n        Description\n    \n    \n        Componente raíz de la aplicación ReGamesCreative.\nEste componente actúa como el punto de entrada principal, configurando la estructura base (encabezado, contenido principal con router-outlet y pie de página)\ny gestionando la suscripción al estado de autenticación del usuario.\nExample :\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n\n\n            \n                styleUrls\n                ./app.component.css\n            \n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                currentUser\n                            \n                            \n                                title\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService)\n                    \n                \n                        \n                            \n                                Defined in src/app/app.component.ts:22\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/app.component.ts:26\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        currentUser\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'ReGamesCreative-Angular'\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:21\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { AuthService, User } from './core/auth/auth.service';\n\n/**\n * @description \n * Componente raíz de la aplicación ReGamesCreative.\n * @summary\n * Este componente actúa como el punto de entrada principal, configurando la estructura base (encabezado, contenido principal con router-outlet y pie de página)\n * y gestionando la suscripción al estado de autenticación del usuario.\n * @usageNotes\n * ```html\n * \n * ```\n */\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements OnInit{\n  title = 'ReGamesCreative-Angular';\n  currentUser: User | null = null;\n\n  constructor(private readonly authService: AuthService) {}\n\n  ngOnInit(): void {\n    this.authService.currentUser.subscribe(user => {\n      this.currentUser = user;\n    });\n  }\n}\n\n    \n\n    \n        \n\n\n    \n\n\n\n    \n\n    \n                \n                    ./app.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CategoryComponent', 'selector': 'app-category'},{'name': 'ConfirmationModalComponent', 'selector': 'app-confirmation-modal'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'GameCardComponent', 'selector': 'app-game-card'},{'name': 'GameDetailModalComponent', 'selector': 'app-game-detail-modal'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MyLibraryComponent', 'selector': 'app-my-library'},{'name': 'RecoverPasswordComponent', 'selector': 'app-recover-password'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'UserProfileComponent', 'selector': 'app-user-profile'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AppModule_declarations\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nCategoryComponent\n\nCategoryComponent\n\nAppModule -->\n\nCategoryComponent->AppModule\n\n\n\n\n\nConfirmationModalComponent\n\nConfirmationModalComponent\n\nAppModule -->\n\nConfirmationModalComponent->AppModule\n\n\n\n\n\nFooterComponent\n\nFooterComponent\n\nAppModule -->\n\nFooterComponent->AppModule\n\n\n\n\n\nGameCardComponent\n\nGameCardComponent\n\nAppModule -->\n\nGameCardComponent->AppModule\n\n\n\n\n\nGameDetailModalComponent\n\nGameDetailModalComponent\n\nAppModule -->\n\nGameDetailModalComponent->AppModule\n\n\n\n\n\nHeaderComponent\n\nHeaderComponent\n\nAppModule -->\n\nHeaderComponent->AppModule\n\n\n\n\n\nHomeComponent\n\nHomeComponent\n\nAppModule -->\n\nHomeComponent->AppModule\n\n\n\n\n\nLoginComponent\n\nLoginComponent\n\nAppModule -->\n\nLoginComponent->AppModule\n\n\n\n\n\nMyLibraryComponent\n\nMyLibraryComponent\n\nAppModule -->\n\nMyLibraryComponent->AppModule\n\n\n\n\n\nRecoverPasswordComponent\n\nRecoverPasswordComponent\n\nAppModule -->\n\nRecoverPasswordComponent->AppModule\n\n\n\n\n\nRegisterComponent\n\nRegisterComponent\n\nAppModule -->\n\nRegisterComponent->AppModule\n\n\n\n\n\nUserProfileComponent\n\nUserProfileComponent\n\nAppModule -->\n\nUserProfileComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nAuthService\n\nAuthService\n\nAppModule -->\n\nAuthService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AppComponent\n                        \n                        \n                            CategoryComponent\n                        \n                        \n                            ConfirmationModalComponent\n                        \n                        \n                            FooterComponent\n                        \n                        \n                            GameCardComponent\n                        \n                        \n                            GameDetailModalComponent\n                        \n                        \n                            HeaderComponent\n                        \n                        \n                            HomeComponent\n                        \n                        \n                            LoginComponent\n                        \n                        \n                            MyLibraryComponent\n                        \n                        \n                            RecoverPasswordComponent\n                        \n                        \n                            RegisterComponent\n                        \n                        \n                            UserProfileComponent\n                        \n                    \n                \n                \n                    Providers\n                    \n                        \n                            AuthService\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AppRoutingModule\n                        \n                    \n                \n                \n                    Bootstrap\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { HttpClientModule } from '@angular/common/http';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { HeaderComponent } from './shared/header/header.component';\nimport { FooterComponent } from './shared/footer/footer.component';\nimport { GameCardComponent } from './shared/game-card/game-card.component';\nimport { GameDetailModalComponent } from './shared/game-detail-modal/game-detail-modal.component';\nimport { HomeComponent } from './features/home/home.component';\nimport { CategoryComponent } from './features/category/category.component';\nimport { MyLibraryComponent } from './features/my-library/my-library.component';\nimport { LoginComponent } from './features/login/login.component';\nimport { RegisterComponent } from './features/register/register.component';\nimport { UserProfileComponent } from './features/user-profile/user-profile.component';\nimport { RecoverPasswordComponent } from './features/recover-password/recover-password.component';\nimport { AuthService } from './core/auth/auth.service';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { ConfirmationModalComponent } from './shared/confirmation-modal/confirmation-modal.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    HeaderComponent,\n    FooterComponent,\n    GameCardComponent,\n    GameDetailModalComponent,\n    HomeComponent,\n    CategoryComponent,\n    MyLibraryComponent,\n    LoginComponent,\n    RegisterComponent,\n    UserProfileComponent,\n    RecoverPasswordComponent,\n    ConfirmationModalComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    FormsModule,\n    ReactiveFormsModule,\n    HttpClientModule\n  ],\n  providers: [AuthService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppRoutingModule.html":{"url":"modules/AppRoutingModule.html","title":"module - AppRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    AppRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app-routing.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { CategoryComponent } from './features/category/category.component';\nimport { HomeComponent } from './features/home/home.component';\nimport { LoginComponent } from './features/login/login.component';\nimport { MyLibraryComponent } from './features/my-library/my-library.component';\nimport { RecoverPasswordComponent } from './features/recover-password/recover-password.component';\nimport { RegisterComponent } from './features/register/register.component';\nimport { UserProfileComponent } from './features/user-profile/user-profile.component';\nimport { authGuard } from './guards/auth.guard';\n\nconst routes: Routes = [\n\t{ path: '', redirectTo: '/inicio', pathMatch: 'full' },\n\t{ path: 'inicio', component: HomeComponent },\n\t{ path: 'my-librery', component: MyLibraryComponent, canActivate: [authGuard] },\n\t{ path: 'login', component: LoginComponent },\n\t{ path: 'register', component: RegisterComponent },\n\t{ path: 'profile', component: UserProfileComponent, canActivate: [authGuard] },\n\t{ path: 'recover-password', component: RecoverPasswordComponent },\n\t{ path: 'categorias/:categorySlug', component: CategoryComponent },\n\t// Ruta comodín para 404 (redirecciona al inicio)\n\t{ path: '**', redirectTo: '/inicio' }\n];\n\n@NgModule({\n\timports: [RouterModule.forRoot(routes)],\n\texports: [RouterModule]\n})\nexport class AppRoutingModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/auth/auth.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                currentUser\n                            \n                            \n                                    Private\n                                    Readonly\n                                currentUserSubject\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                init\n                            \n                            \n                                login\n                            \n                            \n                                logout\n                            \n                            \n                                register\n                            \n                            \n                                updatePassword\n                            \n                            \n                                updateProfile\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    getCurrentUser\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/core/auth/auth.service.ts:23\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        init\n                        \n                    \n                \n            \n            \n                \n                        \n                    init()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/auth/auth.service.ts:35\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        login\n                        \n                    \n                \n            \n            \n                \nlogin(username: string, password: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/auth/auth.service.ts:56\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                username\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                password\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     literal type\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        logout\n                        \n                    \n                \n            \n            \n                \nlogout()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/auth/auth.service.ts:125\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        register\n                        \n                    \n                \n            \n            \n                \nregister(newUser: User)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/auth/auth.service.ts:69\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                newUser\n                                            \n                                                            User\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     literal type\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updatePassword\n                        \n                    \n                \n            \n            \n                \nupdatePassword(userEmail: string, newPassword: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/auth/auth.service.ts:81\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                userEmail\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                newPassword\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     literal type\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateProfile\n                        \n                    \n                \n            \n            \n                \nupdateProfile(originalUsername: string, newUserData: User)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/auth/auth.service.ts:101\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                originalUsername\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                newUserData\n                                            \n                                                            User\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     literal type\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        currentUser\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Observable\n\n                    \n                \n                    \n                        \n                                Defined in src/app/core/auth/auth.service.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        currentUserSubject\n                        \n                    \n                \n            \n                \n                    \n                        Type :         BehaviorSubject\n\n                    \n                \n                    \n                        \n                                Defined in src/app/core/auth/auth.service.ts:22\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        getCurrentUser\n                    \n                \n\n                \n                    \n                        getgetCurrentUser()\n                    \n                \n                            \n                                \n                                    Defined in src/app/core/auth/auth.service.ts:51\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { BehaviorSubject, Observable } from 'rxjs';\n\n// Claves de almacenamiento\nconst AUTH_STORAGE_KEY = 'my_game_library_users';\nconst CURRENT_USER_KEY = 'my_game_library_currentUser';\nconst USER_GAMES_KEY = 'my_game_library_userGames';\n\nexport interface User {\n\tfullName: string;\n\tusername: string;\n\temail: string;\n\tbirthDay: string;\n\tpassword: string;\n\trole: 'admin' | 'normal';\n}\n\n@Injectable({\n\tprovidedIn: 'root'\n})\nexport class AuthService {\n\tprivate readonly currentUserSubject: BehaviorSubject;\n  \tpublic currentUser: Observable;\n\n\tconstructor() {\n\t\tthis.init();\n\t\tconst storedUser = localStorage.getItem(CURRENT_USER_KEY);\n\t\tthis.currentUserSubject = new BehaviorSubject(\n\t\t\tstoredUser ? JSON.parse(storedUser) : null\n\t\t);\n\t\tthis.currentUser = this.currentUserSubject.asObservable();\n\t}\n\n\t// Inicializa algunos usuarios de prueba\n\tpublic init(): void {\n\t\tif (!localStorage.getItem(AUTH_STORAGE_KEY)) {\n\t\t\tlocalStorage.setItem(AUTH_STORAGE_KEY, JSON.stringify([\n\t\t\t\t{\n\t\t\t\t\tfullName: \"Oscar Sanzana\",\n\t\t\t\t\tusername: 'admin',\n\t\t\t\t\temail: \"oscar.sanzana.97@gmail.com\",\n\t\t\t\t\tbirthDay: \"1997-11-17\",\n\t\t\t\t\tpassword: 'Admin123!',\n\t\t\t\t\trole: 'admin'\n\t\t\t\t}\n\t\t\t]));\n\t\t}\n\t}\n\n\t// Obtener usuario actual\n\tpublic get getCurrentUser(): User | null {\n\t\treturn this.currentUserSubject.value;\n\t}\n\n\t// Iniciar sesión\n  \tlogin(username: string, password: string): { success: boolean; message?: string } {\n\t\tconst users: User[] = JSON.parse(localStorage.getItem(AUTH_STORAGE_KEY) ?? '[]');\n\t\tconst user = users.find(u => u.username === username && u.password === password);\n\t\tif (user) {\n            localStorage.setItem(CURRENT_USER_KEY, JSON.stringify(user));\n\t\t\tthis.currentUserSubject.next(user);\n            return { success: true };\n        }\n\n\t\treturn { success: false, message: 'Nombre de usuario o contraseña incorrectos.' };\n\t}\n\n\t// Registrar usuario\n\tregister(newUser: User): { success: boolean; message?: string } {\n        const users = JSON.parse(localStorage.getItem(AUTH_STORAGE_KEY) ?? '[]');\n        if (users.some((u: { username: string; }) => u.username === newUser.username)) {\n            return { success: false, message: 'El nombre de usuario ya existe.' };\n        }\n        users.push(newUser);\n        localStorage.setItem(AUTH_STORAGE_KEY, JSON.stringify(users));\n\n        return { success: true, message: 'Registro exitoso. ¡Ahora puedes iniciar sesión!' };\n    }\n\n\t// Función para actualizar la contrasena de un usuario\n\tupdatePassword (userEmail: string, newPassword: string): { success: boolean; message?: string } {\n        let users = JSON.parse(localStorage.getItem(AUTH_STORAGE_KEY) ?? '[]');\n        const userIndex = users.findIndex((u: { email: string; }) => u.email === userEmail);\n\n        if (userIndex === -1) {\n            return { success: false, message: 'Usuario no encontrado.' };\n        }\n\n        users[userIndex].password = newPassword;\n        localStorage.setItem(AUTH_STORAGE_KEY, JSON.stringify(users));\n\n\t\tconst currentUser = this.getCurrentUser;\n        if (currentUser && currentUser.email === userEmail) {\n            localStorage.setItem(CURRENT_USER_KEY, JSON.stringify(users[userIndex]));\n        }\n\n        return { success: true, message: 'Contraseña actualizada correctamente. Redirigiendo a Login...' };\n    }\n\n\t// Función para actualizar el perfil de un usuario\n\tupdateProfile(originalUsername: string, newUserData: User): { success: boolean; message?: string } {\n\t\tlet users = JSON.parse(localStorage.getItem(AUTH_STORAGE_KEY) ?? '[]');\n        const userIndex = users.findIndex((u: { username: string; }) => u.username === originalUsername);\n\n\t\tif (userIndex === -1) {\n            return { success: false, message: 'Usuario no encontrado.' };\n        }\n\n\t\t// Si el nuevo nombre de usuario es diferente y ya existe\n        if (newUserData.username && newUserData.username !== originalUsername && users.some((u: { username: string; }) => u.username === newUserData.username)) {\n            return { success: false, message: 'El nuevo nombre de usuario ya está en uso.' };\n        }\n\n\t\tusers[userIndex] = { ...users[userIndex], ...newUserData };\n        localStorage.setItem(AUTH_STORAGE_KEY, JSON.stringify(users));\n\t\t\n\t\tconst currentUser = this.getCurrentUser;\n        if (currentUser && currentUser.username === originalUsername) {\n            localStorage.setItem(CURRENT_USER_KEY, JSON.stringify(users[userIndex]));\n        }\n\n\t\treturn { success: true, message: 'Perfil actualizado correctamente.' };\n\t}\n\n\tlogout(): void {\n        localStorage.removeItem(CURRENT_USER_KEY);\n\t\tthis.currentUserSubject.next(null);\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CategoryComponent.html":{"url":"components/CategoryComponent.html","title":"component - CategoryComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  CategoryComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/features/category/category.component.ts\n\n\n\n    \n        Description\n    \n    \n        Componente para mostrar una lista de videojuegos filtrados por categoría.\nEste componente recupera juegos, géneros y plataformas de la API de RAWG,\npermite la búsqueda y el filtrado, y ofrece funcionalidad para añadir juegos a la\nbiblioteca del usuario y ver detalles en un modal.\nExample :\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n                OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-category\n            \n\n\n\n            \n                styleUrls\n                ./category.component.css\n            \n\n\n\n            \n                templateUrl\n                ./category.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                allGames\n                            \n                            \n                                    Private\n                                authSubscription\n                            \n                            \n                                availableGenres\n                            \n                            \n                                availablePlatforms\n                            \n                            \n                                categoryName\n                            \n                            \n                                categorySlug\n                            \n                            \n                                currentUser\n                            \n                            \n                                error\n                            \n                            \n                                filteredGames\n                            \n                            \n                                    \n                                gameDetailModal\n                            \n                            \n                                message\n                            \n                            \n                                    Private\n                                routeSubscription\n                            \n                            \n                                searchTerm\n                            \n                            \n                                selectedGameForModal\n                            \n                            \n                                selectedGenre\n                            \n                            \n                                selectedPlatform\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                capitalizeFirstLetter\n                            \n                            \n                                extractFilterOptions\n                            \n                            \n                                filterGames\n                            \n                            \n                                handleAddToLibrary\n                            \n                            \n                                loadGamesAndFiltersFromRawg\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                openGameDetailModal\n                            \n                            \n                                resetFilters\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(route: ActivatedRoute, authService: AuthService, gameService: GameService, rawgApiService: ApiService)\n                    \n                \n                        \n                            \n                                Defined in src/app/features/category/category.component.ts:49\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                    ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        gameService\n                                                  \n                                                        \n                                                                        GameService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        rawgApiService\n                                                  \n                                                        \n                                                                        ApiService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        capitalizeFirstLetter\n                        \n                    \n                \n            \n            \n                \n                        \n                    capitalizeFirstLetter(str: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/category/category.component.ts:92\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                str\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        extractFilterOptions\n                        \n                    \n                \n            \n            \n                \nextractFilterOptions()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/category/category.component.ts:123\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        filterGames\n                        \n                    \n                \n            \n            \n                \nfilterGames()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/category/category.component.ts:145\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        handleAddToLibrary\n                        \n                    \n                \n            \n            \n                \nhandleAddToLibrary(game: Game)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/category/category.component.ts:162\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                game\n                                            \n                                                            Game\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loadGamesAndFiltersFromRawg\n                        \n                    \n                \n            \n            \n                \nloadGamesAndFiltersFromRawg(category: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/category/category.component.ts:97\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                category\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/category/category.component.ts:212\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/category/category.component.ts:58\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        openGameDetailModal\n                        \n                    \n                \n            \n            \n                \nopenGameDetailModal(game: Game)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/category/category.component.ts:184\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                game\n                                            \n                                                            Game\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        resetFilters\n                        \n                    \n                \n            \n            \n                \nresetFilters()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/category/category.component.ts:137\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        allGames\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Game[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/features/category/category.component.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        authSubscription\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription\n\n                    \n                \n                    \n                        \n                                Defined in src/app/features/category/category.component.ts:46\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        availableGenres\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/features/category/category.component.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        availablePlatforms\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/features/category/category.component.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        categoryName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/features/category/category.component.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        categorySlug\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/features/category/category.component.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        currentUser\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/features/category/category.component.ts:47\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        error\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/features/category/category.component.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        filteredGames\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Game[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/features/category/category.component.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        gameDetailModal\n                        \n                    \n                \n            \n                \n                    \n                        Type :         GameDetailModalComponent\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild(GameDetailModalComponent)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/features/category/category.component.ts:49\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        message\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/features/category/category.component.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        routeSubscription\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription\n\n                    \n                \n                    \n                        \n                                Defined in src/app/features/category/category.component.ts:45\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        searchTerm\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/features/category/category.component.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectedGameForModal\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Game | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/features/category/category.component.ts:43\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectedGenre\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/features/category/category.component.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectedPlatform\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/features/category/category.component.ts:37\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnDestroy, OnInit, ViewChild } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { catchError, forkJoin, of, Subscription, switchMap } from 'rxjs';\nimport { ApiService } from 'src/app/core/api/api.service';\nimport { User, AuthService } from 'src/app/core/auth/auth.service';\nimport { Game, GameService } from 'src/app/core/game/game.service';\nimport { GameDetailModalComponent } from 'src/app/shared/game-detail-modal/game-detail-modal.component';\n\ndeclare let bootstrap: any;\n\n/**\n * @description \n * Componente para mostrar una lista de videojuegos filtrados por categoría.\n * @summary \n * Este componente recupera juegos, géneros y plataformas de la API de RAWG,\n * permite la búsqueda y el filtrado, y ofrece funcionalidad para añadir juegos a la\n * biblioteca del usuario y ver detalles en un modal.\n * @usageNotes\n * ```html\n * \n * ```\n */\n@Component({\n\tselector: 'app-category',\n\ttemplateUrl: './category.component.html',\n\tstyleUrls: ['./category.component.css']\n})\nexport class CategoryComponent implements OnInit, OnDestroy {\n\tmessage = '';\n\terror = '';\n\tcategoryName: string = '';\n\tcategorySlug: string = '';\n\tallGames: Game[] = [];\n\tfilteredGames: Game[] = [];\n\n\tsearchTerm: string = '';\n\tselectedPlatform: string = '';\n\tselectedGenre: string = '';\n\n\tavailablePlatforms: string[] = [];\n\tavailableGenres: string[] = [];\n\n\tselectedGameForModal: Game | null = null;\n\n\tprivate routeSubscription!: Subscription;\n\tprivate authSubscription!: Subscription;\n\tcurrentUser: User | null = null;\n\n\t@ViewChild(GameDetailModalComponent) gameDetailModal!: GameDetailModalComponent;\n\n\tconstructor(\n\t\tprivate readonly route: ActivatedRoute,\n\t\tprivate readonly authService: AuthService,\n\t\tprivate readonly gameService: GameService,\n\t\tprivate readonly rawgApiService: ApiService\n\t) { }\n\n\tngOnInit(): void {\n\t\tthis.authService.init();\n\t\tthis.authSubscription = this.authService.currentUser.subscribe(user => {\n\t\t\tthis.currentUser = user;\n\t\t});\n\n\t\tthis.routeSubscription = this.route.paramMap.pipe(\n\t\t\tswitchMap(params => {\n\t\t\t\tthis.categorySlug = params.get('categorySlug') ?? '';\n\t\t\t\tthis.categoryName = this.capitalizeFirstLetter(this.categorySlug.replace(/-/g, ' '));\n\t\t\t\tthis.resetFilters();\n\t\t\t\treturn forkJoin({\n\t\t\t\t\tgames: this.rawgApiService.getGames('', this.categorySlug),\n\t\t\t\t\tgenres: this.rawgApiService.getGenres(),\n\t\t\t\t\tplatforms: this.rawgApiService.getPlatforms()\n\t\t\t\t});\n\t\t\t})\n\t\t).subscribe({\n\t\t\tnext: ({ games, genres, platforms }) => {\n\t\t\t\tthis.allGames = games;\n\t\t\t\tthis.availableGenres = genres;\n\t\t\t\tthis.availablePlatforms = platforms;\n\t\t\t\tthis.filterGames();\n\t\t\t},\n\t\t\terror: (err) => {\n\t\t\t\tconsole.error('Error al cargar datos de RAWG API para la categoría:', this.categorySlug, err);\n\t\t\t\tthis.allGames = [];\n\t\t\t\tthis.availableGenres = [];\n\t\t\t\tthis.availablePlatforms = [];\n\t\t\t\talert('Error al cargar videojuegos para esta categoría. Por favor, revisa tu clave API o inténtalo más tarde.');\n\t\t\t}\n\t\t});\n\t}\n\n\tprivate capitalizeFirstLetter(str: string): string {\n\t\tif (!str) return '';\n\t\treturn str.charAt(0).toUpperCase() + str.slice(1);\n\t}\n\n\tloadGamesAndFiltersFromRawg(category: string): void {\n\t\tconst categorySlug = category.toLowerCase().replace(/\\s/g, '-');\n\n\t\t// Usar forkJoin para hacer múltiples llamadas API en paralelo\n\t\tforkJoin({\n\t\t\tgames: this.rawgApiService.getGames('', categorySlug),\n\t\t\tgenres: this.rawgApiService.getGenres(),\n\t\t\tplatforms: this.rawgApiService.getPlatforms()\n\t\t}).subscribe({\n\t\t\tnext: ({ games, genres, platforms }) => {\n\t\t\t\tthis.allGames = games;\n\t\t\t\tthis.availableGenres = genres;\n\t\t\t\tthis.availablePlatforms = platforms;\n\t\t\t\tthis.filterGames();\n\t\t\t},\n\t\t\terror: (err) => {\n\t\t\t\tconsole.error('Error al cargar datos de RAWG API:', err);\n\t\t\t\tthis.allGames = [];\n\t\t\t\tthis.availableGenres = [];\n\t\t\t\tthis.availablePlatforms = [];\n\t\t\t\talert('Error al cargar videojuegos. Por favor, revisa tu clave API o inténtalo más tarde.');\n\t\t\t}\n\t\t});\n\t}\n\n\t// Extrae las opciones únicas de plataforma y género de los juegos cargados\n\textractFilterOptions(): void {\n\t\tconst platforms = new Set();\n\t\tconst genres = new Set();\n\n\t\tthis.allGames.forEach(game => {\n\t\t\tgame.platform.split(',').map(p => p.trim()).forEach(p => platforms.add(p));\n\t\t\tgame.genre.split(',').map(g => g.trim()).forEach(g => genres.add(g));\n\t\t});\n\n\t\tthis.availablePlatforms = Array.from(platforms).sort((a, b) => a.localeCompare(b));\n\t\tthis.availableGenres = Array.from(genres).sort((a, b) => a.localeCompare(b));\n\t}\n\n\t// Restablece los filtros de búsqueda\n\tresetFilters(): void {\n\t\tthis.searchTerm = '';\n\t\tthis.selectedPlatform = '';\n\t\tthis.selectedGenre = '';\n\t\tthis.filterGames();\n\t}\n\n\t// Filtra los juegos basándose en los criterios de búsqueda y selección\n\tfilterGames(): void {\n\t\tconst searchTermLower = this.searchTerm.toLowerCase();\n\t\tconst selectedPlatformLower = this.selectedPlatform.toLowerCase();\n\t\tconst selectedGenreLower = this.selectedGenre.toLowerCase();\n\n\t\tthis.filteredGames = this.allGames.filter(game => {\n\t\t\tconst matchesSearch = game.title.toLowerCase().includes(searchTermLower) ||\n\t\t\t\tgame.description.toLowerCase().includes(searchTermLower);\n\n\t\t\tconst matchesPlatform = selectedPlatformLower === '' || game.platform.toLowerCase().includes(selectedPlatformLower);\n\t\t\tconst matchesGenre = selectedGenreLower === '' || game.genre.toLowerCase().includes(selectedGenreLower);\n\n\t\t\treturn matchesSearch && matchesPlatform && matchesGenre;\n\t\t});\n\t}\n\n\t// Maneja el evento cuando se hace clic en \"Añadir a Mi Biblioteca\"\n\thandleAddToLibrary(game: Game): void {\n\t\tconst currentUser = this.authService.getCurrentUser;\n\t\tif (!currentUser) {\n\t\t\talert('Debes iniciar sesión para añadir juegos a tu biblioteca.');\n\t\t\treturn;\n\t\t}\n\n\t\tthis.rawgApiService.getGameAchievements(game.id).subscribe({\n\t\t\tnext: (achievements) => {\n\t\t\t\tconst gameWithAchievements: Game = { ...game, achievements: achievements };\n\t\t\t\tconst result = this.gameService.addGame(currentUser.username, gameWithAchievements);\n\t\t\t\talert(result.message);\n\t\t\t},\n\t\t\terror: (err) => {\n\t\t\t\tconsole.warn('No se pudieron cargar los logros para el juego:', game.title, err);\n\t\t\t\tconst result = this.gameService.addGame(currentUser.username, game);\n\t\t\t\talert(result.message + ' (Logros no cargados debido a un error de API)');\n\t\t\t}\n\t\t});\n\t}\n\n\t// Abre el modal de detalles del juego y pasa el juego seleccionado\n\topenGameDetailModal(game: Game): void {\n\t\t// Usar forkJoin para obtener los detalles completos del juego Y sus logros en paralelo\n\t\tforkJoin({\n\t\t\tdetails: this.rawgApiService.getGameDetails(game.id),\n\t\t\tachievements: this.rawgApiService.getGameAchievements(game.id).pipe(\n\t\t\t\tcatchError(err => {\n\t\t\t\t\tconsole.error('Error al obtener logros para el juego', game.id, err);\n\t\t\t\t\treturn of([]);\n\t\t\t\t})\n\t\t\t)\n\t\t}).subscribe({\n\t\t\tnext: ({ details, achievements }) => {\n\t\t\t\tthis.selectedGameForModal = { ...details, achievements: achievements };\n\t\t\t\tif (this.gameDetailModal) {\n\t\t\t\t\tthis.gameDetailModal.show();\n\t\t\t\t}\n\t\t\t},\n\t\t\terror: (err) => {\n\t\t\t\tconsole.error('Error al cargar detalles o logros del juego de RAWG API:', err);\n\t\t\t\tthis.selectedGameForModal = game;\n\t\t\t\tif (this.gameDetailModal) {\n\t\t\t\t\tthis.gameDetailModal.show();\n\t\t\t\t}\n\t\t\t\talert('Error al cargar los detalles completos del videojuego o sus logros.');\n\t\t\t}\n\t\t});\n\t}\n\n\tngOnDestroy(): void {\n\t\tif (this.routeSubscription) {\n\t\t\tthis.routeSubscription.unsubscribe();\n\t\t}\n\t\tif (this.authSubscription) {\n\t\t\tthis.authSubscription.unsubscribe();\n\t\t}\n\t}\n}\n\n    \n\n    \n        \n    {{ message }}\n\t{{ error }}\n    Juegos de {{ categoryName }}\n\n    \n        \n            \n        \n        \n            \n                Todas las plataformas\n                {{ platform }}\n            \n        \n        \n            \n                Todos los géneros\n                {{ genre }}\n            \n        \n    \n\n    \n         0; else noGamesFound\">\n            \n                \n            \n        \n        \n            \n                No se encontraron juegos para esta categoría con los filtros aplicados.\n            \n        \n    \n\n\n\n    \n\n    \n                \n                    ./category.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    {{ message }}\t{{ error }}    Juegos de {{ categoryName }}                                                                    Todas las plataformas                {{ platform }}                                                        Todos los géneros                {{ genre }}                                     0; else noGamesFound\">                                                                                    No se encontraron juegos para esta categoría con los filtros aplicados.                        '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CategoryComponent', 'selector': 'app-category'},{'name': 'ConfirmationModalComponent', 'selector': 'app-confirmation-modal'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'GameCardComponent', 'selector': 'app-game-card'},{'name': 'GameDetailModalComponent', 'selector': 'app-game-detail-modal'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MyLibraryComponent', 'selector': 'app-my-library'},{'name': 'RecoverPasswordComponent', 'selector': 'app-recover-password'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'UserProfileComponent', 'selector': 'app-user-profile'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'CategoryComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ConfirmationModalComponent.html":{"url":"components/ConfirmationModalComponent.html","title":"component - ConfirmationModalComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ConfirmationModalComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/confirmation-modal/confirmation-modal.component.ts\n\n\n\n    \n        Description\n    \n    \n        Componente reutilizable para mostrar un modal de confirmación genérico.\nPermite configurar el título, el mensaje y el texto del botón de confirmación.\nEmite un evento cuando el usuario confirma o cancela la acción.\nExample :\n\n    \n\n\n    \n        Implements\n    \n    \n                AfterViewInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-confirmation-modal\n            \n\n\n\n            \n                styleUrls\n                ./confirmation-modal.component.css\n            \n\n\n\n            \n                templateUrl\n                ./confirmation-modal.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                bsModal\n                            \n                            \n                                    \n                                modalElementRef\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                hide\n                            \n                            \n                                ngAfterViewInit\n                            \n                            \n                                onCancel\n                            \n                            \n                                onConfirm\n                            \n                            \n                                show\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                confirmButtonText\n                            \n                            \n                                message\n                            \n                            \n                                title\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                confirmed\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/confirmation-modal/confirmation-modal.component.ts:35\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        confirmButtonText\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'Confirmar'\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/confirmation-modal/confirmation-modal.component.ts:30\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        message\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '¿Estás seguro de esta acción?'\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/confirmation-modal/confirmation-modal.component.ts:29\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        title\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'Confirmación'\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/confirmation-modal/confirmation-modal.component.ts:28\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        confirmed\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/confirmation-modal/confirmation-modal.component.ts:32\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        hide\n                        \n                    \n                \n            \n            \n                \nhide()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/confirmation-modal/confirmation-modal.component.ts:62\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngAfterViewInit\n                        \n                    \n                \n            \n            \n                \nngAfterViewInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/confirmation-modal/confirmation-modal.component.ts:39\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onCancel\n                        \n                    \n                \n            \n            \n                \nonCancel()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/confirmation-modal/confirmation-modal.component.ts:75\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onConfirm\n                        \n                    \n                \n            \n            \n                \nonConfirm()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/confirmation-modal/confirmation-modal.component.ts:69\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        show\n                        \n                    \n                \n            \n            \n                \nshow()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/confirmation-modal/confirmation-modal.component.ts:55\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        bsModal\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/confirmation-modal/confirmation-modal.component.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        modalElementRef\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ElementRef\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild('confirmationModalElement')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/shared/confirmation-modal/confirmation-modal.component.ts:34\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { AfterViewInit, Component, ElementRef, EventEmitter, Input, Output, ViewChild } from '@angular/core';\n\n// Importa la función Modal de Bootstrap\ndeclare let bootstrap: any;\n\n/**\n * @description \n * Componente reutilizable para mostrar un modal de confirmación genérico.\n * @summary \n * Permite configurar el título, el mensaje y el texto del botón de confirmación.\n * Emite un evento cuando el usuario confirma o cancela la acción.\n * @usageNotes\n * ```html\n * \n * \n * ```\n */\n@Component({\n\tselector: 'app-confirmation-modal',\n\ttemplateUrl: './confirmation-modal.component.html',\n\tstyleUrls: ['./confirmation-modal.component.css']\n})\nexport class ConfirmationModalComponent implements AfterViewInit {\n\t@Input() title: string = 'Confirmación';\n\t@Input() message: string = '¿Estás seguro de esta acción?';\n\t@Input() confirmButtonText: string = 'Confirmar';\n\n\t@Output() confirmed = new EventEmitter();\n\n\t@ViewChild('confirmationModalElement') modalElementRef!: ElementRef;\n\tprivate bsModal: any;\n\n\tconstructor() { }\n\n\tngAfterViewInit(): void {\n\t\t// Inicializar la instancia del modal de Bootstrap después de que la vista se haya inicializado\n\t\tif (this.modalElementRef?.nativeElement) {\n\t\t\tthis.bsModal = new bootstrap.Modal(this.modalElementRef.nativeElement);\n\n\t\t\t// Listener para cuando el modal se oculta (se cierra)\n\t\t\tthis.modalElementRef.nativeElement.addEventListener('hidden.bs.modal', () => {\n\t\t\t\tconst backdrop = document.querySelector('.modal-backdrop');\n\t\t\t\tif (backdrop) {\n\t\t\t\t   backdrop.remove();\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t}\n\n\t// Muestra el modal\n\tshow(): void {\n\t\tif (this.bsModal) {\n\t\t\tthis.bsModal.show();\n\t\t}\n\t}\n\n\t// Oculta el modal\n\thide(): void {\n\t\tif (this.bsModal) {\n\t\t\tthis.bsModal.hide();\n\t\t}\n\t}\n\n\t// Se llama cuando el usuario hace clic en el botón de confirmar\n\tonConfirm(): void {\n\t\tthis.confirmed.emit(true);\n\t\tthis.hide();\n\t}\n\n\t// Se llama cuando el usuario hace clic en el botón de cancelar o en el botón de cerrar\n\tonCancel(): void {\n\t\tthis.confirmed.emit(false);\n\t\tthis.hide();\n\t}\n\n}\n\n    \n\n    \n        \n    \n        \n            \n                {{ title }}\n                \n            \n            \n                {{ message }}\n            \n            \n                Cancelar\n                {{ confirmButtonText }}\n            \n        \n    \n\n    \n\n    \n                \n                    ./confirmation-modal.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                        {{ title }}                                                        {{ message }}                                        Cancelar                {{ confirmButtonText }}                        '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CategoryComponent', 'selector': 'app-category'},{'name': 'ConfirmationModalComponent', 'selector': 'app-confirmation-modal'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'GameCardComponent', 'selector': 'app-game-card'},{'name': 'GameDetailModalComponent', 'selector': 'app-game-detail-modal'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MyLibraryComponent', 'selector': 'app-my-library'},{'name': 'RecoverPasswordComponent', 'selector': 'app-recover-password'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'UserProfileComponent', 'selector': 'app-user-profile'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ConfirmationModalComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/FooterComponent.html":{"url":"components/FooterComponent.html","title":"component - FooterComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  FooterComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/footer/footer.component.ts\n\n\n\n    \n        Description\n    \n    \n        Componente para el pie de página de la aplicación.\nContiene información de copyright.\nExample :\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-footer\n            \n\n\n\n            \n                styleUrls\n                ./footer.component.css\n            \n\n\n\n            \n                templateUrl\n                ./footer.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n/**\n * @description \n * Componente para el pie de página de la aplicación.\n * @summary \n * Contiene información de copyright.\n * @usageNotes\n * ```html\n * \n * ```\n */\n@Component({\n  selector: 'app-footer',\n  templateUrl: './footer.component.html',\n  styleUrls: ['./footer.component.css']\n})\nexport class FooterComponent {\n\n}\n\n    \n\n    \n        \n    \n        &copy; 2025 ReGames. Todos los derechos reservados.\n    \n\n\n    \n\n    \n                \n                    ./footer.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            © 2025 ReGames. Todos los derechos reservados.    '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CategoryComponent', 'selector': 'app-category'},{'name': 'ConfirmationModalComponent', 'selector': 'app-confirmation-modal'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'GameCardComponent', 'selector': 'app-game-card'},{'name': 'GameDetailModalComponent', 'selector': 'app-game-detail-modal'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MyLibraryComponent', 'selector': 'app-my-library'},{'name': 'RecoverPasswordComponent', 'selector': 'app-recover-password'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'UserProfileComponent', 'selector': 'app-user-profile'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'FooterComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Game.html":{"url":"interfaces/Game.html","title":"interface - Game","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Game\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/game/game.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Representa un videojuego en la aplicación, incluyendo detalles y logros.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            achievements\n                                        \n                                \n                                \n                                        \n                                            description\n                                        \n                                \n                                \n                                        \n                                            genre\n                                        \n                                \n                                \n                                        \n                                            hoursPlayed\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            image\n                                        \n                                \n                                \n                                        \n                                            isFavorite\n                                        \n                                \n                                \n                                        \n                                            platform\n                                        \n                                \n                                \n                                        \n                                            played\n                                        \n                                \n                                \n                                        \n                                            title\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        achievements\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        achievements:     GameAchievement[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     GameAchievement[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        description:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        genre\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        genre:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        hoursPlayed\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        hoursPlayed:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        image\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        image:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        isFavorite\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        isFavorite:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        platform\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        platform:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        played\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        played:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        title:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@angular/core';\nconst USER_GAMES_KEY = 'my_game_library_userGames';\n/**\n * @description \n * Define la estructura de datos para un videojuego y el servicio para gestionar la biblioteca de juegos del usuario.\n * @summary \n * Proporciona interfaces para `Achievement` y `Game`, y el `GameService` para operaciones CRUD\n * (añadir, obtener, actualizar, eliminar) sobre los juegos en la biblioteca local del usuario.\n */\n\n/**\n * @interface GameAchievement\n * @description \n * Representa un logro individual de un videojuego.\n * @property {number} id El ID del logro.\n * @property {string} name El nombre del logro.\n * @property {string} description La descripción del logro.\n * @property {string} image La imagen del logro.\n * @property {string} percent El procentaje del logro\n * @property {boolean} completed Indica si el logro ha sido completado por el usuario.\n */\nexport interface GameAchievement {\n\tid: number;\n\tname: string;\n\tdescription: string;\n\timage: string;\n\tpercent: string;\n\tcompleted: boolean;\n}\n\n/**\n * @interface Game\n * @description \n * Representa un videojuego en la aplicación, incluyendo detalles y logros.\n * @property {number} id El identificador único del juego (ID de RAWG).\n * @property {string} title El título del videojuego.\n * @property {string} image La URL de la imagen de portada del juego.\n * @property {string} description La descripción detallada del juego.\n * @property {string} platform Las plataformas en las que está disponible el juego.\n * @property {string} genre Los géneros a los que pertenece el juego.\n * @property {number} hoursPlayed El número de horas que el usuario ha jugado a este juego.\n * @property {boolean} played Indica si el usuario ha marcado el juego como \"jugado\".\n * @property {boolean} isFavorite Indica si el usuario ha marcado el juego como favorito.\n * @property {GameAchievement[]} [achievements] Un array opcional de logros asociados al juego.\n */\nexport interface Game {\n\tid: number;\n\ttitle: string;\n\tdescription: string;\n\tplatform: string;\n\tgenre: string;\n\thoursPlayed: number;\n\timage: string;\n\tisFavorite: boolean;\n\tplayed: boolean;\n\tachievements: GameAchievement[];\n}\n\n/**\n * @class GameService\n * @description\n * Servicio que gestiona las operaciones de la biblioteca de juegos de los usuarios,\n * persistiendo los datos en el almacenamiento local (localStorage).\n * @summary Ofrece métodos para añadir, obtener, actualizar y eliminar juegos de la biblioteca\n * de un usuario específico, manteniendo la integridad de los datos de la biblioteca.\n * @usageNotes\n * Inyecta este servicio en tus componentes o servicios que necesiten interactuar con la biblioteca de juegos:\n * ```typescript\n * constructor(private gameService: GameService) { }\n * // Para obtener juegos:\n * const userGames = this.gameService.getUserGames('nombreUsuario');\n * // Para añadir un juego:\n * this.gameService.addGame('nombreUsuario', newGame);\n * ```\n */\n@Injectable({\n\tprovidedIn: 'root'\n})\nexport class GameService {\n\n\tconstructor() { }\n\n\t// Obtiene todos los juegos para un usuario específico\n\tgetUserGames(username: string): Game[] {\n\t\tconst allUserGames: { [key: string]: Game[] } = JSON.parse(localStorage.getItem(USER_GAMES_KEY) ?? '{}');\n\t\treturn allUserGames[username] ?? [];\n\t}\n\n\t// Guardar todos los juegos para un usuario específico\n\tprivate _saveUserGames(username: string, games: Game[]): void {\n\t\tconst allUserGames: { [key: string]: Game[] } = JSON.parse(localStorage.getItem(USER_GAMES_KEY) ?? '{}');\n\t\tallUserGames[username] = games;\n\t\tlocalStorage.setItem(USER_GAMES_KEY, JSON.stringify(allUserGames));\n\t}\n\t// Añadir un nuevo juego a la biblioteca de un usuario\n\taddGame(username: string, gameData: Partial): { success: boolean, message: string, game?: Game } {\n\t\tconst userGames = this.getUserGames(username);\n\t\tconst newGameId = gameData.id ?? Date.now();\n\n\t\t// Verifica si el juego ya existe en la biblioteca del usuario (por título y plataforma)\n\t\tconst alreadyExists = userGames.some(game =>\n\t\t\tgame.title === gameData.title && game.platform === gameData.platform\n\t\t);\n\n\t\tif (alreadyExists) {\n\t\t\treturn { success: false, message: 'El juego ya está en tu biblioteca.' };\n\t\t}\n\n\t\tlet initialAchievements: GameAchievement[] = [];\n\t\tif (gameData.achievements && gameData.achievements.length > 0) {\n\t\t\tinitialAchievements = gameData.achievements.map(ach => ({ ...ach, completed: false }));\n\t\t} else {\n\t\t\tinitialAchievements = [\n\t\t\t\t{ id: 101, name: \"Completar Tutorial\", description: \"Completa el tutorial del juego.\", image: \"\", percent: \"0%\", completed: false },\n\t\t\t\t{ id: 102, name: \"Derrotar Primer Jefe\", description: \"Derrota al primer jefe del juego.\", image: \"\", percent: \"0%\", completed: false }\n\t\t\t];\n\t\t}\n\n\t\tconst newGame: Game = {\n\t\t\tid: newGameId,\n\t\t\ttitle: gameData.title ?? 'Juego sin título',\n\t\t\tdescription: gameData.description ?? '',\n\t\t\tplatform: gameData.platform ?? 'Desconocida',\n\t\t\tgenre: gameData.genre ?? 'Varios',\n\t\t\thoursPlayed: gameData.hoursPlayed ?? 0,\n\t\t\timage: gameData.image ?? 'https://placehold.co/400x250/374151/D1D5DB?text=No+Image',\n\t\t\tisFavorite: false,\n\t\t\tplayed: false,\n\t\t\tachievements: initialAchievements\n\t\t};\n\n\t\tuserGames.push(newGame);\n\t\tthis._saveUserGames(username, userGames);\n\t\treturn { success: true, message: `\"${newGame.title}\" añadido correctamente.`, game: newGame };\n\t}\n\n\t// Actualiza un juego existente en la biblioteca de un usuario\n\tupdateGame(username: string, updatedGame: Game): void {\n\t\tlet userGames = this.getUserGames(username);\n\t\tuserGames = userGames.map(game =>\n\t\t\tgame.id === updatedGame.id ? { ...game, ...updatedGame } : game\n\t\t);\n\t\tthis._saveUserGames(username, userGames);\n\t}\n\n\t// Elimina un juego de la biblioteca de un usuario\n\tdeleteGame(username: string, gameId: number): void {\n\t\tlet userGames = this.getUserGames(username);\n\t\tuserGames = userGames.filter(game => game.id !== gameId);\n\t\tthis._saveUserGames(username, userGames);\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/GameAchievement.html":{"url":"interfaces/GameAchievement.html","title":"interface - GameAchievement","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  GameAchievement\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/game/game.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Representa un logro individual de un videojuego.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            completed\n                                        \n                                \n                                \n                                        \n                                            description\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            image\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            percent\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        completed\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        completed:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        description:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        image\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        image:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        percent\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        percent:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@angular/core';\nconst USER_GAMES_KEY = 'my_game_library_userGames';\n/**\n * @description \n * Define la estructura de datos para un videojuego y el servicio para gestionar la biblioteca de juegos del usuario.\n * @summary \n * Proporciona interfaces para `Achievement` y `Game`, y el `GameService` para operaciones CRUD\n * (añadir, obtener, actualizar, eliminar) sobre los juegos en la biblioteca local del usuario.\n */\n\n/**\n * @interface GameAchievement\n * @description \n * Representa un logro individual de un videojuego.\n * @property {number} id El ID del logro.\n * @property {string} name El nombre del logro.\n * @property {string} description La descripción del logro.\n * @property {string} image La imagen del logro.\n * @property {string} percent El procentaje del logro\n * @property {boolean} completed Indica si el logro ha sido completado por el usuario.\n */\nexport interface GameAchievement {\n\tid: number;\n\tname: string;\n\tdescription: string;\n\timage: string;\n\tpercent: string;\n\tcompleted: boolean;\n}\n\n/**\n * @interface Game\n * @description \n * Representa un videojuego en la aplicación, incluyendo detalles y logros.\n * @property {number} id El identificador único del juego (ID de RAWG).\n * @property {string} title El título del videojuego.\n * @property {string} image La URL de la imagen de portada del juego.\n * @property {string} description La descripción detallada del juego.\n * @property {string} platform Las plataformas en las que está disponible el juego.\n * @property {string} genre Los géneros a los que pertenece el juego.\n * @property {number} hoursPlayed El número de horas que el usuario ha jugado a este juego.\n * @property {boolean} played Indica si el usuario ha marcado el juego como \"jugado\".\n * @property {boolean} isFavorite Indica si el usuario ha marcado el juego como favorito.\n * @property {GameAchievement[]} [achievements] Un array opcional de logros asociados al juego.\n */\nexport interface Game {\n\tid: number;\n\ttitle: string;\n\tdescription: string;\n\tplatform: string;\n\tgenre: string;\n\thoursPlayed: number;\n\timage: string;\n\tisFavorite: boolean;\n\tplayed: boolean;\n\tachievements: GameAchievement[];\n}\n\n/**\n * @class GameService\n * @description\n * Servicio que gestiona las operaciones de la biblioteca de juegos de los usuarios,\n * persistiendo los datos en el almacenamiento local (localStorage).\n * @summary Ofrece métodos para añadir, obtener, actualizar y eliminar juegos de la biblioteca\n * de un usuario específico, manteniendo la integridad de los datos de la biblioteca.\n * @usageNotes\n * Inyecta este servicio en tus componentes o servicios que necesiten interactuar con la biblioteca de juegos:\n * ```typescript\n * constructor(private gameService: GameService) { }\n * // Para obtener juegos:\n * const userGames = this.gameService.getUserGames('nombreUsuario');\n * // Para añadir un juego:\n * this.gameService.addGame('nombreUsuario', newGame);\n * ```\n */\n@Injectable({\n\tprovidedIn: 'root'\n})\nexport class GameService {\n\n\tconstructor() { }\n\n\t// Obtiene todos los juegos para un usuario específico\n\tgetUserGames(username: string): Game[] {\n\t\tconst allUserGames: { [key: string]: Game[] } = JSON.parse(localStorage.getItem(USER_GAMES_KEY) ?? '{}');\n\t\treturn allUserGames[username] ?? [];\n\t}\n\n\t// Guardar todos los juegos para un usuario específico\n\tprivate _saveUserGames(username: string, games: Game[]): void {\n\t\tconst allUserGames: { [key: string]: Game[] } = JSON.parse(localStorage.getItem(USER_GAMES_KEY) ?? '{}');\n\t\tallUserGames[username] = games;\n\t\tlocalStorage.setItem(USER_GAMES_KEY, JSON.stringify(allUserGames));\n\t}\n\t// Añadir un nuevo juego a la biblioteca de un usuario\n\taddGame(username: string, gameData: Partial): { success: boolean, message: string, game?: Game } {\n\t\tconst userGames = this.getUserGames(username);\n\t\tconst newGameId = gameData.id ?? Date.now();\n\n\t\t// Verifica si el juego ya existe en la biblioteca del usuario (por título y plataforma)\n\t\tconst alreadyExists = userGames.some(game =>\n\t\t\tgame.title === gameData.title && game.platform === gameData.platform\n\t\t);\n\n\t\tif (alreadyExists) {\n\t\t\treturn { success: false, message: 'El juego ya está en tu biblioteca.' };\n\t\t}\n\n\t\tlet initialAchievements: GameAchievement[] = [];\n\t\tif (gameData.achievements && gameData.achievements.length > 0) {\n\t\t\tinitialAchievements = gameData.achievements.map(ach => ({ ...ach, completed: false }));\n\t\t} else {\n\t\t\tinitialAchievements = [\n\t\t\t\t{ id: 101, name: \"Completar Tutorial\", description: \"Completa el tutorial del juego.\", image: \"\", percent: \"0%\", completed: false },\n\t\t\t\t{ id: 102, name: \"Derrotar Primer Jefe\", description: \"Derrota al primer jefe del juego.\", image: \"\", percent: \"0%\", completed: false }\n\t\t\t];\n\t\t}\n\n\t\tconst newGame: Game = {\n\t\t\tid: newGameId,\n\t\t\ttitle: gameData.title ?? 'Juego sin título',\n\t\t\tdescription: gameData.description ?? '',\n\t\t\tplatform: gameData.platform ?? 'Desconocida',\n\t\t\tgenre: gameData.genre ?? 'Varios',\n\t\t\thoursPlayed: gameData.hoursPlayed ?? 0,\n\t\t\timage: gameData.image ?? 'https://placehold.co/400x250/374151/D1D5DB?text=No+Image',\n\t\t\tisFavorite: false,\n\t\t\tplayed: false,\n\t\t\tachievements: initialAchievements\n\t\t};\n\n\t\tuserGames.push(newGame);\n\t\tthis._saveUserGames(username, userGames);\n\t\treturn { success: true, message: `\"${newGame.title}\" añadido correctamente.`, game: newGame };\n\t}\n\n\t// Actualiza un juego existente en la biblioteca de un usuario\n\tupdateGame(username: string, updatedGame: Game): void {\n\t\tlet userGames = this.getUserGames(username);\n\t\tuserGames = userGames.map(game =>\n\t\t\tgame.id === updatedGame.id ? { ...game, ...updatedGame } : game\n\t\t);\n\t\tthis._saveUserGames(username, userGames);\n\t}\n\n\t// Elimina un juego de la biblioteca de un usuario\n\tdeleteGame(username: string, gameId: number): void {\n\t\tlet userGames = this.getUserGames(username);\n\t\tuserGames = userGames.filter(game => game.id !== gameId);\n\t\tthis._saveUserGames(username, userGames);\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/GameCardComponent.html":{"url":"components/GameCardComponent.html","title":"component - GameCardComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  GameCardComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/game-card/game-card.component.ts\n\n\n\n    \n        Description\n    \n    \n        Componente para mostrar una tarjeta de juego individual.\nUtilizado en las páginas de categorías y en la biblioteca personal,\nmuestra información del juego y proporciona botones de acción que emiten eventos al componente padre.\nPuede mostrar controles adicionales si se usa en la biblioteca personal.\nExample :\n\n\n\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-game-card\n            \n\n\n\n            \n                styleUrls\n                ./game-card.component.css\n            \n\n\n\n            \n                templateUrl\n                ./game-card.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                game\n                            \n                            \n                                showLibraryControls\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                addGameToLibrary\n                            \n                            \n                                deleteGame\n                            \n                            \n                                toggleFavorite\n                            \n                            \n                                togglePlayed\n                            \n                            \n                                updateHours\n                            \n                            \n                                viewDetails\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/game-card/game-card.component.ts:34\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        game\n                    \n                \n                \n                    \n                        Type :         Game\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/game-card/game-card.component.ts:26\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        showLibraryControls\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/game-card/game-card.component.ts:27\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        addGameToLibrary\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/game-card/game-card.component.ts:29\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        deleteGame\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/game-card/game-card.component.ts:34\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        toggleFavorite\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/game-card/game-card.component.ts:31\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        togglePlayed\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/game-card/game-card.component.ts:32\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        updateHours\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/game-card/game-card.component.ts:33\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        viewDetails\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/game-card/game-card.component.ts:30\n                            \n                        \n            \n        \n\n\n\n\n\n\n\n\n    \n        import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { Game } from 'src/app/core/game/game.service';\n\n/**\n * @description \n * Componente para mostrar una tarjeta de juego individual.\n * @summary \n * Utilizado en las páginas de categorías y en la biblioteca personal,\n * muestra información del juego y proporciona botones de acción que emiten eventos al componente padre.\n * Puede mostrar controles adicionales si se usa en la biblioteca personal.\n * @usageNotes\n * ```html\n * \n * \n *\n * \n * \n * ```\n */\n@Component({\n\tselector: 'app-game-card',\n\ttemplateUrl: './game-card.component.html',\n\tstyleUrls: ['./game-card.component.css']\n})\nexport class GameCardComponent {\n\t@Input() game!: Game;\n\t@Input() showLibraryControls: boolean = false;\n\n\t@Output() addGameToLibrary = new EventEmitter();\n\t@Output() viewDetails = new EventEmitter();\n\t@Output() toggleFavorite = new EventEmitter();\n\t@Output() togglePlayed = new EventEmitter();\n\t@Output() updateHours = new EventEmitter();\n\t@Output() deleteGame = new EventEmitter();\n\n\tconstructor() { }\n\n}\n\n    \n\n    \n        \n    \n    \n        {{ game.title }}\n        Plataforma: {{ game.platform }} | Género: {{ game.genre }}\n        {{ game.description.substring(0, 100) }}{{ game.description.length > 100 ? '...' : '' }}\n        Horas de juego: {{ game.hoursPlayed }}h\n\n        \n            {{ game.played ? 'Jugado' : 'Pendiente' }}\n            \n                 {{ game.isFavorite ? 'Favorito' : 'Añadir a Fav.' }}\n            \n        \n        \n            Ver Detalles\n            {{ game.played ? 'Marcar Pend.' : 'Marcar Jugado' }}\n             Horas\n            \n        \n        \n            Ver Detalles\n            \n                 Añadir a Mi Biblioteca\n            \n        \n        \n    \n\n    \n\n    \n                \n                    ./game-card.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                {{ game.title }}        Plataforma: {{ game.platform }} | Género: {{ game.genre }}        {{ game.description.substring(0, 100) }}{{ game.description.length > 100 ? \\'...\\' : \\'\\' }}        Horas de juego: {{ game.hoursPlayed }}h                    {{ game.played ? \\'Jugado\\' : \\'Pendiente\\' }}                             {{ game.isFavorite ? \\'Favorito\\' : \\'Añadir a Fav.\\' }}                                        Ver Detalles            {{ game.played ? \\'Marcar Pend.\\' : \\'Marcar Jugado\\' }}             Horas                                        Ver Detalles                             Añadir a Mi Biblioteca                                '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CategoryComponent', 'selector': 'app-category'},{'name': 'ConfirmationModalComponent', 'selector': 'app-confirmation-modal'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'GameCardComponent', 'selector': 'app-game-card'},{'name': 'GameDetailModalComponent', 'selector': 'app-game-detail-modal'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MyLibraryComponent', 'selector': 'app-my-library'},{'name': 'RecoverPasswordComponent', 'selector': 'app-recover-password'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'UserProfileComponent', 'selector': 'app-user-profile'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'GameCardComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/GameDetailModalComponent.html":{"url":"components/GameDetailModalComponent.html","title":"component - GameDetailModalComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  GameDetailModalComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/game-detail-modal/game-detail-modal.component.ts\n\n\n\n    \n        Description\n    \n    \n        Componente para mostrar un modal con los detalles completos de un videojuego.\nMuestra el título, descripción, plataforma, género, horas de juego y una lista de logros.\nPermite interactuar con el estado de los logros (marcar/desmarcar).\nExample :\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-game-detail-modal\n            \n\n\n\n            \n                styleUrls\n                ./game-detail-modal.component.css\n            \n\n\n\n            \n                templateUrl\n                ./game-detail-modal.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                bsModal\n                            \n                            \n                                error\n                            \n                            \n                                message\n                            \n                            \n                                    \n                                modalElementRef\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                hide\n                            \n                            \n                                ngAfterViewInit\n                            \n                            \n                                onAchievementChange\n                            \n                            \n                                show\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                game\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                achievementUpdated\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(gameService: GameService, authService: AuthService)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/game-detail-modal/game-detail-modal.component.ts:46\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        gameService\n                                                  \n                                                        \n                                                                        GameService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Servicio para gestionar los juegos y sus logros en la biblioteca del usuario.\n\n                                                        \n                                                \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Servicio de autenticación para verificar el usuario actual antes de guardar cambios.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        game\n                    \n                \n                \n                    \n                        Type :         Game | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/game-detail-modal/game-detail-modal.component.ts:31\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        achievementUpdated\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/game-detail-modal/game-detail-modal.component.ts:38\n                            \n                        \n                \n                    \n                        cuando se actualiza un logro.\n\n                    \n                \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        hide\n                        \n                    \n                \n            \n            \n                \nhide()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/game-detail-modal/game-detail-modal.component.ts:95\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngAfterViewInit\n                        \n                    \n                \n            \n            \n                \nngAfterViewInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/game-detail-modal/game-detail-modal.component.ts:64\n                        \n                    \n\n\n            \n                \n                        Inicializa la instancia del modal de Bootstrap y añade un listener para limpiar el estado del\njuego seleccionado y el backdrop cuando el modal se oculta.\n\n\n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onAchievementChange\n                        \n                    \n                \n            \n            \n                \nonAchievementChange(gameId: number, achievementIndex: number, event: Event)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/game-detail-modal/game-detail-modal.component.ts:110\n                        \n                    \n\n\n            \n                \n                        Actualiza el estado del logro en el GameService si el usuario está autenticado.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                gameId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    El ID del juego al que pertenece el logro.\n\n                                            \n                                        \n                                        \n                                                achievementIndex\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    El índice del logro dentro del array de logros del juego.\n\n                                            \n                                        \n                                        \n                                                event\n                                            \n                                                        Event\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    El evento de cambio del checkbox.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        show\n                        \n                    \n                \n            \n            \n                \nshow()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/game-detail-modal/game-detail-modal.component.ts:84\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        bsModal\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/game-detail-modal/game-detail-modal.component.ts:46\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        error\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/game-detail-modal/game-detail-modal.component.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        message\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/game-detail-modal/game-detail-modal.component.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        modalElementRef\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ElementRef\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild('gameDetailModalElement')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/shared/game-detail-modal/game-detail-modal.component.ts:44\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, ElementRef, EventEmitter, Input, Output, ViewChild } from '@angular/core';\nimport { AuthService } from 'src/app/core/auth/auth.service';\nimport { Game, GameService } from 'src/app/core/game/game.service';\n\ndeclare let bootstrap: any;\n\n/**\n * @description \n * Componente para mostrar un modal con los detalles completos de un videojuego.\n * @summary \n * Muestra el título, descripción, plataforma, género, horas de juego y una lista de logros.\n * Permite interactuar con el estado de los logros (marcar/desmarcar).\n * @usageNotes\n * ```html\n * \n * ```\n */\n@Component({\n\tselector: 'app-game-detail-modal',\n\ttemplateUrl: './game-detail-modal.component.html',\n\tstyleUrls: ['./game-detail-modal.component.css']\n})\nexport class GameDetailModalComponent {\n\tmessage = '';\n\terror = '';\n\n\t/**\n\t * @public\n\t * @description El objeto Game cuyos detalles se van a mostrar en el modal.\n\t */\n\t@Input() game: Game | null = null;\n\n\t/**\n\t * @public\n\t * @description Emite un objeto con el ID del juego, el índice del logro y el nuevo estado de completado\n\t * cuando se actualiza un logro.\n\t */\n\t@Output() achievementUpdated = new EventEmitter();\n\n\t/**\n\t * @public\n\t * @description Referencia al elemento nativo del modal en el DOM.\n\t */\n\t@ViewChild('gameDetailModalElement') modalElementRef!: ElementRef;\n\t\n\tprivate bsModal: any;\n\n\t/**\n\t * @param gameService Servicio para gestionar los juegos y sus logros en la biblioteca del usuario.\n\t * @param authService Servicio de autenticación para verificar el usuario actual antes de guardar cambios.\n\t */\n\tconstructor(\n\t\tprivate readonly gameService: GameService,\n\t\tprivate readonly authService: AuthService\n\t) { }\n\n\t/**\n\t * @lifecycle\n\t * @description Hook que se ejecuta después de que la vista del componente ha sido inicializada.\n\t * Inicializa la instancia del modal de Bootstrap y añade un listener para limpiar el estado del\n\t * juego seleccionado y el backdrop cuando el modal se oculta.\n\t * @returns {void}\n\t */\n\tngAfterViewInit(): void {\n\t\tif (this.modalElementRef?.nativeElement) {\n\t\t\tthis.bsModal = new bootstrap.Modal(this.modalElementRef.nativeElement);\n\n\t\t\tthis.modalElementRef.nativeElement.addEventListener('hidden.bs.modal', () => {\n\t\t\t\tthis.game = null;\n\n\t\t\t\tconst backdrop = document.querySelector('.modal-backdrop');\n\t\t\t\tif (backdrop) {\n\t\t\t\t\tbackdrop.remove();\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t}\n\n\t/**\n\t * @public\n\t * @description Muestra el modal de detalles del juego.\n\t * @returns {void}\n\t */\n\tshow(): void {\n\t\tif (this.bsModal) {\n\t\t\tthis.bsModal.show();\n\t\t}\n\t}\n\n\t/**\n\t * @public\n\t * @description Oculta el modal de detalles del juego.\n\t * @returns {void}\n\t */\n\thide(): void {\n\t\tif (this.bsModal) {\n\t\t\tthis.bsModal.hide();\n\t\t}\n\t}\n\n\t/**\n\t * @public\n\t * @description Maneja el evento de cambio en el estado de un logro (checkbox).\n\t * Actualiza el estado del logro en el `GameService` si el usuario está autenticado.\n\t * @param {number} gameId El ID del juego al que pertenece el logro.\n\t * @param {number} achievementIndex El índice del logro dentro del array de logros del juego.\n\t * @param {Event} event El evento de cambio del checkbox.\n\t * @returns {void}\n\t */\n\tonAchievementChange(gameId: number, achievementIndex: number, event: Event): void {\n\t\tconst currentUser = this.authService.getCurrentUser;\n\t\tif (!currentUser) {\n\t\t\tthis.error = 'Debes iniciar sesión para guardar el progreso de logros.';\n\t\t\t(event.target as HTMLInputElement).checked = !(event.target as HTMLInputElement).checked;\n\t\t\treturn;\n\t\t}\n\t\tconst isCompleted = (event.target as HTMLInputElement).checked;\n\n\t\t// Obtiene los juegos del usuario desde el servicio\n\t\tconst userGames = this.gameService.getUserGames(currentUser.username);\n\t\tconst gameToUpdate = userGames.find(g => g.id === gameId);\n\n\t\tif (gameToUpdate?.achievements) {\n\t\t\tgameToUpdate.achievements[achievementIndex].completed = isCompleted;\n\t\t\tthis.gameService.updateGame(currentUser.username, gameToUpdate);\n\t\t\tthis.achievementUpdated.emit({ gameId, achievementIndex, completed: isCompleted });\n\t\t}\n\t}\n}\n\n    \n\n    \n        \n    \n        \n            \n                Detalles del Videojuego\n                {{ message }}\n\t\t        {{ error }}\n                \n            \n            \n                \n                    \n                        \n                    \n                    \n                        {{ game.title }}\n                        Plataforma: {{ game.platform }} | Género: {{ game.genre }}\n                        {{ game.description }}\n                        Horas de juego: {{ game.hoursPlayed }}h\n                    \n                \n                \n                    Logros / Trofeos\n                    \n                         0; else noAchievements\">\n                            \n                                \n                                \n                                    {{ achievement.name }}\n                                \n                            \n                        \n                        \n                            No hay logros disponibles para este juego.\n                        \n                    \n                \n            \n            \n                Cerrar\n            \n        \n    \n\n    \n\n    \n                \n                    ./game-detail-modal.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                        Detalles del Videojuego                {{ message }}\t\t        {{ error }}                                                                                                                                                                    {{ game.title }}                        Plataforma: {{ game.platform }} | Género: {{ game.genre }}                        {{ game.description }}                        Horas de juego: {{ game.hoursPlayed }}h                                                                        Logros / Trofeos                                             0; else noAchievements\">                                                                                                                                {{ achievement.name }}                                                                                                                                        No hay logros disponibles para este juego.                                                                                                    Cerrar                        '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CategoryComponent', 'selector': 'app-category'},{'name': 'ConfirmationModalComponent', 'selector': 'app-confirmation-modal'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'GameCardComponent', 'selector': 'app-game-card'},{'name': 'GameDetailModalComponent', 'selector': 'app-game-detail-modal'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MyLibraryComponent', 'selector': 'app-my-library'},{'name': 'RecoverPasswordComponent', 'selector': 'app-recover-password'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'UserProfileComponent', 'selector': 'app-user-profile'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'GameDetailModalComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/GameService.html":{"url":"injectables/GameService.html","title":"injectable - GameService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  GameService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/game/game.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Servicio que gestiona las operaciones de la biblioteca de juegos de los usuarios,\npersistiendo los datos en el almacenamiento local (localStorage).\nde un usuario específico, manteniendo la integridad de los datos de la biblioteca.\nInyecta este servicio en tus componentes o servicios que necesiten interactuar con la biblioteca de juegos:\nExample :constructor(private gameService: GameService) { }\n// Para obtener juegos:\nconst userGames = this.gameService.getUserGames('nombreUsuario');\n// Para añadir un juego:\nthis.gameService.addGame('nombreUsuario', newGame);\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _saveUserGames\n                            \n                            \n                                addGame\n                            \n                            \n                                deleteGame\n                            \n                            \n                                getUserGames\n                            \n                            \n                                updateGame\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/core/game/game.service.ts:79\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _saveUserGames\n                        \n                    \n                \n            \n            \n                \n                        \n                    _saveUserGames(username: string, games: Game[])\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/game/game.service.ts:90\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                username\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                games\n                                            \n                                                            Game[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        addGame\n                        \n                    \n                \n            \n            \n                \naddGame(username: string, gameData: Partial)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/game/game.service.ts:96\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                username\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                gameData\n                                            \n                                                            Partial\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     literal type\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deleteGame\n                        \n                    \n                \n            \n            \n                \ndeleteGame(username: string, gameId: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/game/game.service.ts:147\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                username\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                gameId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getUserGames\n                        \n                    \n                \n            \n            \n                \ngetUserGames(username: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/game/game.service.ts:84\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                username\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Game[]\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateGame\n                        \n                    \n                \n            \n            \n                \nupdateGame(username: string, updatedGame: Game)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/game/game.service.ts:138\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                username\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updatedGame\n                                            \n                                                            Game\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nconst USER_GAMES_KEY = 'my_game_library_userGames';\n/**\n * @description \n * Define la estructura de datos para un videojuego y el servicio para gestionar la biblioteca de juegos del usuario.\n * @summary \n * Proporciona interfaces para `Achievement` y `Game`, y el `GameService` para operaciones CRUD\n * (añadir, obtener, actualizar, eliminar) sobre los juegos en la biblioteca local del usuario.\n */\n\n/**\n * @interface GameAchievement\n * @description \n * Representa un logro individual de un videojuego.\n * @property {number} id El ID del logro.\n * @property {string} name El nombre del logro.\n * @property {string} description La descripción del logro.\n * @property {string} image La imagen del logro.\n * @property {string} percent El procentaje del logro\n * @property {boolean} completed Indica si el logro ha sido completado por el usuario.\n */\nexport interface GameAchievement {\n\tid: number;\n\tname: string;\n\tdescription: string;\n\timage: string;\n\tpercent: string;\n\tcompleted: boolean;\n}\n\n/**\n * @interface Game\n * @description \n * Representa un videojuego en la aplicación, incluyendo detalles y logros.\n * @property {number} id El identificador único del juego (ID de RAWG).\n * @property {string} title El título del videojuego.\n * @property {string} image La URL de la imagen de portada del juego.\n * @property {string} description La descripción detallada del juego.\n * @property {string} platform Las plataformas en las que está disponible el juego.\n * @property {string} genre Los géneros a los que pertenece el juego.\n * @property {number} hoursPlayed El número de horas que el usuario ha jugado a este juego.\n * @property {boolean} played Indica si el usuario ha marcado el juego como \"jugado\".\n * @property {boolean} isFavorite Indica si el usuario ha marcado el juego como favorito.\n * @property {GameAchievement[]} [achievements] Un array opcional de logros asociados al juego.\n */\nexport interface Game {\n\tid: number;\n\ttitle: string;\n\tdescription: string;\n\tplatform: string;\n\tgenre: string;\n\thoursPlayed: number;\n\timage: string;\n\tisFavorite: boolean;\n\tplayed: boolean;\n\tachievements: GameAchievement[];\n}\n\n/**\n * @class GameService\n * @description\n * Servicio que gestiona las operaciones de la biblioteca de juegos de los usuarios,\n * persistiendo los datos en el almacenamiento local (localStorage).\n * @summary Ofrece métodos para añadir, obtener, actualizar y eliminar juegos de la biblioteca\n * de un usuario específico, manteniendo la integridad de los datos de la biblioteca.\n * @usageNotes\n * Inyecta este servicio en tus componentes o servicios que necesiten interactuar con la biblioteca de juegos:\n * ```typescript\n * constructor(private gameService: GameService) { }\n * // Para obtener juegos:\n * const userGames = this.gameService.getUserGames('nombreUsuario');\n * // Para añadir un juego:\n * this.gameService.addGame('nombreUsuario', newGame);\n * ```\n */\n@Injectable({\n\tprovidedIn: 'root'\n})\nexport class GameService {\n\n\tconstructor() { }\n\n\t// Obtiene todos los juegos para un usuario específico\n\tgetUserGames(username: string): Game[] {\n\t\tconst allUserGames: { [key: string]: Game[] } = JSON.parse(localStorage.getItem(USER_GAMES_KEY) ?? '{}');\n\t\treturn allUserGames[username] ?? [];\n\t}\n\n\t// Guardar todos los juegos para un usuario específico\n\tprivate _saveUserGames(username: string, games: Game[]): void {\n\t\tconst allUserGames: { [key: string]: Game[] } = JSON.parse(localStorage.getItem(USER_GAMES_KEY) ?? '{}');\n\t\tallUserGames[username] = games;\n\t\tlocalStorage.setItem(USER_GAMES_KEY, JSON.stringify(allUserGames));\n\t}\n\t// Añadir un nuevo juego a la biblioteca de un usuario\n\taddGame(username: string, gameData: Partial): { success: boolean, message: string, game?: Game } {\n\t\tconst userGames = this.getUserGames(username);\n\t\tconst newGameId = gameData.id ?? Date.now();\n\n\t\t// Verifica si el juego ya existe en la biblioteca del usuario (por título y plataforma)\n\t\tconst alreadyExists = userGames.some(game =>\n\t\t\tgame.title === gameData.title && game.platform === gameData.platform\n\t\t);\n\n\t\tif (alreadyExists) {\n\t\t\treturn { success: false, message: 'El juego ya está en tu biblioteca.' };\n\t\t}\n\n\t\tlet initialAchievements: GameAchievement[] = [];\n\t\tif (gameData.achievements && gameData.achievements.length > 0) {\n\t\t\tinitialAchievements = gameData.achievements.map(ach => ({ ...ach, completed: false }));\n\t\t} else {\n\t\t\tinitialAchievements = [\n\t\t\t\t{ id: 101, name: \"Completar Tutorial\", description: \"Completa el tutorial del juego.\", image: \"\", percent: \"0%\", completed: false },\n\t\t\t\t{ id: 102, name: \"Derrotar Primer Jefe\", description: \"Derrota al primer jefe del juego.\", image: \"\", percent: \"0%\", completed: false }\n\t\t\t];\n\t\t}\n\n\t\tconst newGame: Game = {\n\t\t\tid: newGameId,\n\t\t\ttitle: gameData.title ?? 'Juego sin título',\n\t\t\tdescription: gameData.description ?? '',\n\t\t\tplatform: gameData.platform ?? 'Desconocida',\n\t\t\tgenre: gameData.genre ?? 'Varios',\n\t\t\thoursPlayed: gameData.hoursPlayed ?? 0,\n\t\t\timage: gameData.image ?? 'https://placehold.co/400x250/374151/D1D5DB?text=No+Image',\n\t\t\tisFavorite: false,\n\t\t\tplayed: false,\n\t\t\tachievements: initialAchievements\n\t\t};\n\n\t\tuserGames.push(newGame);\n\t\tthis._saveUserGames(username, userGames);\n\t\treturn { success: true, message: `\"${newGame.title}\" añadido correctamente.`, game: newGame };\n\t}\n\n\t// Actualiza un juego existente en la biblioteca de un usuario\n\tupdateGame(username: string, updatedGame: Game): void {\n\t\tlet userGames = this.getUserGames(username);\n\t\tuserGames = userGames.map(game =>\n\t\t\tgame.id === updatedGame.id ? { ...game, ...updatedGame } : game\n\t\t);\n\t\tthis._saveUserGames(username, userGames);\n\t}\n\n\t// Elimina un juego de la biblioteca de un usuario\n\tdeleteGame(username: string, gameId: number): void {\n\t\tlet userGames = this.getUserGames(username);\n\t\tuserGames = userGames.filter(game => game.id !== gameId);\n\t\tthis._saveUserGames(username, userGames);\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/HeaderComponent.html":{"url":"components/HeaderComponent.html","title":"component - HeaderComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  HeaderComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/header/header.component.ts\n\n\n\n    \n        Description\n    \n    \n        Componente para el encabezado de la aplicación.\nMuestra el nombre de la aplicación, enlaces de navegación,\ny gestiona la visualización del estado de autenticación del usuario (login/registro vs. perfil de usuario).\nExample :\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-header\n            \n\n\n\n            \n                styleUrls\n                ./header.component.css\n            \n\n\n\n            \n                templateUrl\n                ./header.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                authService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                logout\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/header/header.component.ts:21\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        logout\n                        \n                    \n                \n            \n            \n                \nlogout()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/header/header.component.ts:25\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        authService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         AuthService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/header/header.component.ts:22\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { AuthService } from 'src/app/core/auth/auth.service';\n\n/**\n * @description \n * Componente para el encabezado de la aplicación.\n * @summary \n * Muestra el nombre de la aplicación, enlaces de navegación,\n * y gestiona la visualización del estado de autenticación del usuario (login/registro vs. perfil de usuario).\n * @usageNotes\n * ```html\n * \n * ```\n */\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.css']\n})\nexport class HeaderComponent {\n  constructor(public authService: AuthService, private readonly router: Router) {\n  }\n\n  logout(): void {\n    this.authService.logout();\n    this.router.navigate(['/login']);\n  }\n}\n\n    \n\n    \n        \n\t\n\t\t\n\t\t\t ReGamesCreative\n\t\t\n\t\t\n\t\t\t\n\t\t\n\t\t\n\t\t\t\n\t\t\t\t\n\t\t\t\t\tInicio\n\t\t\t\t\n\t\t\t\t\n\t\t\t\t\tCategorías\n\t\t\t\t\t\n\t\t\t\t\t\tAcción\n\t\t\t\t\t\tRPG\n\t\t\t\t\t\tAventura\n\t\t\t\t\t\tEstrategia\n\t\t\t\t\t\t\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\n\t\t\t\t\t\tVer Todas\n\t\t\t\t\t\n\t\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\t\n\t\t\t\t\tLogin\n\t\t\t\t\n\t\t\t\t\n\t\t\t\t\tRegistro\n\t\t\t\t\n\t\t\t\t\n\t\t\t\t\t{{ user.username }}\n\t\t\t\t\t\n\t\t\t\t\t\t\n\t\t\t\t\t\t\tRol: {{ user.role | titlecase }}\n\t\t\t\t\t\t\n\t\t\t\t\t\t\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\n\t\t\t\t\t\tMi Perfil\n\t\t\t\t\t\tMi Biblioteca\n\t\t\t\t\t\tFavoritos\n\t\t\t\t\t\tCerrar Sesión\n\t\t\t\t\t\n\t\t\t\t\n\t\t\t\n\t\t\n\t\n\n    \n\n    \n                \n                    ./header.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '\t\t\t\t\t\t ReGamesCreative\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tInicio\t\t\t\t\t\t\t\t\t\t\t\t\tCategorías\t\t\t\t\t\t\t\t\t\t\tAcción\t\t\t\t\t\tRPG\t\t\t\t\t\tAventura\t\t\t\t\t\tEstrategia\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tVer Todas\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tLogin\t\t\t\t\t\t\t\t\t\t\t\t\tRegistro\t\t\t\t\t\t\t\t\t\t\t\t\t{{ user.username }}\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tRol: {{ user.role | titlecase }}\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tMi Perfil\t\t\t\t\t\tMi Biblioteca\t\t\t\t\t\tFavoritos\t\t\t\t\t\tCerrar Sesión\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CategoryComponent', 'selector': 'app-category'},{'name': 'ConfirmationModalComponent', 'selector': 'app-confirmation-modal'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'GameCardComponent', 'selector': 'app-game-card'},{'name': 'GameDetailModalComponent', 'selector': 'app-game-detail-modal'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MyLibraryComponent', 'selector': 'app-my-library'},{'name': 'RecoverPasswordComponent', 'selector': 'app-recover-password'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'UserProfileComponent', 'selector': 'app-user-profile'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'HeaderComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/HomeComponent.html":{"url":"components/HomeComponent.html","title":"component - HomeComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  HomeComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/features/home/home.component.ts\n\n\n\n    \n        Description\n    \n    \n        Componente de la página de inicio de la aplicación.\nMuestra una lista de categorías de videojuegos y permite al usuario navegar\na la página de juegos de cada categoría. Carga las categorías desde la API de RAWG\no usa valores predeterminados en caso de error.\nExample :\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-home\n            \n\n\n\n            \n                styleUrls\n                ./home.component.css\n            \n\n\n\n            \n                templateUrl\n                ./home.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                categories\n                            \n                            \n                                    Private\n                                categoriesSubscription\n                            \n                            \n                                confirmationModal\n                            \n                            \n                                gameDetailModal\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                getCategoryIcon\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService, rawgApiService: ApiService)\n                    \n                \n                        \n                            \n                                Defined in src/app/features/home/home.component.ts:27\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        rawgApiService\n                                                  \n                                                        \n                                                                        ApiService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        getCategoryIcon\n                        \n                    \n                \n            \n            \n                \n                        \n                    getCategoryIcon(categoryName: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/home/home.component.ts:58\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                categoryName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/home/home.component.ts:84\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/home/home.component.ts:34\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        categories\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/features/home/home.component.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        categoriesSubscription\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription\n\n                    \n                \n                    \n                        \n                                Defined in src/app/features/home/home.component.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        confirmationModal\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/app/features/home/home.component.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        gameDetailModal\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/app/features/home/home.component.ts:26\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { Subscription } from 'rxjs';\nimport { ApiService } from 'src/app/core/api/api.service';\nimport { AuthService } from 'src/app/core/auth/auth.service';\n\n/**\n * @description \n * Componente de la página de inicio de la aplicación.\n * @summary \n * Muestra una lista de categorías de videojuegos y permite al usuario navegar\n * a la página de juegos de cada categoría. Carga las categorías desde la API de RAWG\n * o usa valores predeterminados en caso de error.\n * @usageNotes\n * ```html\n * \n * ```\n */\n@Component({\n\tselector: 'app-home',\n\ttemplateUrl: './home.component.html',\n\tstyleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n\tcategories: { name: string, iconClass: string }[] = [];\n\tprivate categoriesSubscription!: Subscription;\n\tgameDetailModal: any;\n\tconfirmationModal: any;\n\n\tconstructor(\n\t\tprivate readonly authService: AuthService,\n\t\tprivate readonly rawgApiService: ApiService\n\t) { }\n\n\tngOnInit(): void {\n\t\tthis.authService.init();\n\n\t\t// Cargar las categorías del servicio RawgApiService\n\t\tthis.categoriesSubscription = this.rawgApiService.getGenres().subscribe({\n\t\t\tnext: (categoryNames: string[]) => {\n\t\t\t\tthis.categories = categoryNames.map(name => ({\n\t\t\t\t\tname: name,\n\t\t\t\t\ticonClass: this.getCategoryIcon(name)\n\t\t\t\t}));\n\t\t\t},\n\t\t\terror: (err) => {\n\t\t\t\tconsole.error('Error al cargar las categorías desde RAWG API:', err);\n\t\t\t\tthis.categories = [\n\t\t\t\t\t{ name: 'Acción', iconClass: 'fas fa-fist-raised' },\n\t\t\t\t\t{ name: 'RPG', iconClass: 'fas fa-hat-wizard' },\n\t\t\t\t\t{ name: 'Aventura', iconClass: 'fas fa-map-marked-alt' },\n\t\t\t\t\t{ name: 'Estrategia', iconClass: 'fas fa-chess-knight' }\n\t\t\t\t];\n\t\t\t\talert('Error al cargar categorías de la API. Se están mostrando categorías predeterminadas.');\n\t\t\t}\n\t\t});\n\t}\n\n\tprivate getCategoryIcon(categoryName: string): string {\n\t\tswitch (categoryName.toLowerCase()) {\n\t\t\tcase 'action':\n\t\t\tcase 'accion':\n\t\t\t\treturn 'fas fa-fist-raised';\n\t\t\tcase 'rpg':\n\t\t\t\treturn 'fas fa-hat-wizard';\n\t\t\tcase 'adventure':\n\t\t\tcase 'aventura':\n\t\t\t\treturn 'fas fa-map-marked-alt';\n\t\t\tcase 'strategy':\n\t\t\tcase 'estrategia':\n\t\t\t\treturn 'fas fa-chess-knight';\n\t\t\tcase 'shooter':\n\t\t\t\treturn 'fas fa-crosshairs';\n\t\t\tcase 'puzzle':\n\t\t\t\treturn 'fas fa-puzzle-piece';\n\t\t\tcase 'racing':\n\t\t\t\treturn 'fas fa-car';\n\t\t\tcase 'sports':\n\t\t\t\treturn 'fas fa-futbol';\n\t\t\tdefault:\n\t\t\t\treturn 'fas fa-gamepad';\n\t\t}\n\t}\n\n\tngOnDestroy(): void {\n\t\tif (this.categoriesSubscription) {\n\t\t\tthis.categoriesSubscription.unsubscribe();\n\t\t}\n\t}\n}\n\n    \n\n    \n        \n    ReGamesCreative\n\n    \n        \n            \n                \n                    \n                        {{ category.name }}\n                        Explora los juegos de {{ category.name | lowercase }}.\n                        \n                    \n                \n            \n        \n    \n\n    \n\n    \n                \n                    ./home.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    ReGamesCreative                                                                                    {{ category.name }}                        Explora los juegos de {{ category.name | lowercase }}.                                                                                    '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CategoryComponent', 'selector': 'app-category'},{'name': 'ConfirmationModalComponent', 'selector': 'app-confirmation-modal'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'GameCardComponent', 'selector': 'app-game-card'},{'name': 'GameDetailModalComponent', 'selector': 'app-game-detail-modal'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MyLibraryComponent', 'selector': 'app-my-library'},{'name': 'RecoverPasswordComponent', 'selector': 'app-recover-password'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'UserProfileComponent', 'selector': 'app-user-profile'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'HomeComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LoginComponent.html":{"url":"components/LoginComponent.html","title":"component - LoginComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  LoginComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/features/login/login.component.ts\n\n\n\n    \n        Description\n    \n    \n        Componente para el inicio de sesión de usuarios.\nPermite a los usuarios ingresar sus credenciales (nombre de usuario y contraseña)\npara autenticarse en la aplicación. Utiliza formularios reactivos y validadores personalizados.\nExample :\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n                OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-login\n            \n\n\n\n            \n                styleUrls\n                ./login.component.css\n            \n\n\n\n            \n                templateUrl\n                ./login.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                authSubscription\n                            \n                            \n                                loginForm\n                            \n                            \n                                loginMessage\n                            \n                            \n                                password\n                            \n                            \n                                username\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onSubmit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService, router: Router, fb: FormBuilder)\n                    \n                \n                        \n                            \n                                Defined in src/app/features/login/login.component.ts:30\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        fb\n                                                  \n                                                        \n                                                                    FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/login/login.component.ts:65\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/login/login.component.ts:38\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onSubmit\n                        \n                    \n                \n            \n            \n                \nonSubmit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/login/login.component.ts:47\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        authSubscription\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription\n\n                    \n                \n                    \n                        \n                                Defined in src/app/features/login/login.component.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loginForm\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FormGroup\n\n                    \n                \n                    \n                        \n                                Defined in src/app/features/login/login.component.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loginMessage\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/features/login/login.component.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/features/login/login.component.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        username\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/features/login/login.component.ts:25\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { Subscription } from 'rxjs';\nimport { AuthService } from 'src/app/core/auth/auth.service';\nimport { emptyStringValidator } from 'src/app/utils/validator';\n\n/**\n * @description \n * Componente para el inicio de sesión de usuarios.\n * @summary \n * Permite a los usuarios ingresar sus credenciales (nombre de usuario y contraseña)\n * para autenticarse en la aplicación. Utiliza formularios reactivos y validadores personalizados.\n * @usageNotes\n * ```html\n * \n * ```\n */\n@Component({\n\tselector: 'app-login',\n\ttemplateUrl: './login.component.html',\n\tstyleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit, OnDestroy {\n\tusername = '';\n\tpassword = '';\n\n\tloginForm!: FormGroup;\n\tloginMessage: string = '';\n\tprivate readonly authSubscription!: Subscription;\n\n\tconstructor(\n\t\tprivate readonly authService: AuthService,\n\t\tprivate readonly router: Router,\n\t\tprivate readonly fb: FormBuilder\n\t) { }\n\n\tngOnInit(): void {\n\t\t// Inicializa el formulario reactivo para el login\n\t\tthis.loginForm = this.fb.group({\n\t\t\tusername: ['', [Validators.required, emptyStringValidator()]],\n\t\t\tpassword: ['', [Validators.required, emptyStringValidator()]]\n\t\t});\n\n\t}\n\n\tonSubmit(): void {\n\t\tif (this.loginForm.invalid) {\n\t\t\tthis.loginForm.markAllAsTouched();\n\t\t\tthis.loginMessage = 'Por favor, completa todos los campos correctamente.';\n\t\t\treturn;\n\t\t}\n\n\t\tconst { username, password } = this.loginForm.value;\n\t\tconst result = this.authService.login(username, password);\n\n\t\tif (result.success) {\n\t\t\tthis.loginMessage = 'Inicio de sesión exitoso. Redirigiendo...';\n\t\t\tsetTimeout(() => { this.router.navigate(['/mi-biblioteca']); }, 1000);\n\t\t} else {\n\t\t\tthis.loginMessage = `${result.message}`;\n\t\t}\n\t}\n\n\tngOnDestroy(): void {\n\t\tif (this.authSubscription) {\n\t\t\tthis.authSubscription.unsubscribe();\n\t\t}\n\t}\n\n}\n\n    \n\n    \n        \n\t\n\t\tIniciar Sesión\n\t\t\n\t\t\n            \n                Nombre de Usuario\n                \n                \n                    Este campo es obligatorio.\n                \n                \n                    Debes ingresar un nombre de usuario.\n                \n            \n            \n                Contraseña\n                \n                \n                    Este campo es obligatorio.\n                \n                \n                    Debes ingresar una contraseña.\n                \n            \n            \n                Entrar\n            \n            \n                ¿Olvidaste tu contraseña?\n            \n            \n                ¿No tienes una cuenta? Regístrate aquí\n            \n        \n\t\n\n    \n\n    \n                \n                    ./login.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '\t\t\tIniciar Sesión\t\t\t\t                            Nombre de Usuario                                                    Este campo es obligatorio.                                                    Debes ingresar un nombre de usuario.                                                        Contraseña                                                    Este campo es obligatorio.                                                    Debes ingresar una contraseña.                                                        Entrar                                        ¿Olvidaste tu contraseña?                                        ¿No tienes una cuenta? Regístrate aquí                    \t'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CategoryComponent', 'selector': 'app-category'},{'name': 'ConfirmationModalComponent', 'selector': 'app-confirmation-modal'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'GameCardComponent', 'selector': 'app-game-card'},{'name': 'GameDetailModalComponent', 'selector': 'app-game-detail-modal'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MyLibraryComponent', 'selector': 'app-my-library'},{'name': 'RecoverPasswordComponent', 'selector': 'app-recover-password'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'UserProfileComponent', 'selector': 'app-user-profile'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'LoginComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MyLibraryComponent.html":{"url":"components/MyLibraryComponent.html","title":"component - MyLibraryComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  MyLibraryComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/features/my-library/my-library.component.ts\n\n\n\n    \n        Description\n    \n    \n        Componente para mostrar y gestionar la biblioteca personal de videojuegos del usuario.\nPermite a los usuarios ver sus juegos, filtrarlos por estado (jugado/pendiente) y favorito,\nactualizar horas jugadas, marcar como favorito/no favorito, y eliminar juegos de su biblioteca.\nTambién integra modales para ver detalles del juego y confirmar eliminaciones.\nExample :\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n                OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-my-library\n            \n\n\n\n            \n                styleUrls\n                ./my-library.component.css\n            \n\n\n\n            \n                templateUrl\n                ./my-library.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                allUserGames\n                            \n                            \n                                    Private\n                                authSubscription\n                            \n                            \n                                    \n                                confirmationModal\n                            \n                            \n                                confirmationModalConfirmText\n                            \n                            \n                                confirmationModalMessage\n                            \n                            \n                                confirmationModalTitle\n                            \n                            \n                                currentUser\n                            \n                            \n                                error\n                            \n                            \n                                filteredGames\n                            \n                            \n                                    \n                                gameDetailModal\n                            \n                            \n                                gameIdToDelete\n                            \n                            \n                                message\n                            \n                            \n                                searchTerm\n                            \n                            \n                                selectedFavorite\n                            \n                            \n                                selectedGameForModal\n                            \n                            \n                                selectedStatus\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                filterAndRenderGames\n                            \n                            \n                                handleDeleteGameConfirmation\n                            \n                            \n                                handleToggleFavorite\n                            \n                            \n                                handleTogglePlayed\n                            \n                            \n                                handleUpdateHoursPlayed\n                            \n                            \n                                loadUserGames\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onDeleteConfirmation\n                            \n                            \n                                openGameDetailModal\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService, gameService: GameService, rawgApiService: ApiService)\n                    \n                \n                        \n                            \n                                Defined in src/app/features/my-library/my-library.component.ts:49\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        gameService\n                                                  \n                                                        \n                                                                        GameService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        rawgApiService\n                                                  \n                                                        \n                                                                        ApiService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        filterAndRenderGames\n                        \n                    \n                \n            \n            \n                \nfilterAndRenderGames()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/my-library/my-library.component.ts:79\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        handleDeleteGameConfirmation\n                        \n                    \n                \n            \n            \n                \nhandleDeleteGameConfirmation(gameId: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/my-library/my-library.component.ts:149\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                gameId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        handleToggleFavorite\n                        \n                    \n                \n            \n            \n                \nhandleToggleFavorite(gameId: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/my-library/my-library.component.ts:108\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                gameId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        handleTogglePlayed\n                        \n                    \n                \n            \n            \n                \nhandleTogglePlayed(gameId: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/my-library/my-library.component.ts:119\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                gameId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        handleUpdateHoursPlayed\n                        \n                    \n                \n            \n            \n                \nhandleUpdateHoursPlayed(gameId: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/my-library/my-library.component.ts:130\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                gameId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loadUserGames\n                        \n                    \n                \n            \n            \n                \nloadUserGames()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/my-library/my-library.component.ts:71\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/my-library/my-library.component.ts:192\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/my-library/my-library.component.ts:57\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onDeleteConfirmation\n                        \n                    \n                \n            \n            \n                \nonDeleteConfirmation(confirmed: boolean)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/my-library/my-library.component.ts:165\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                confirmed\n                                            \n                                                            boolean\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        openGameDetailModal\n                        \n                    \n                \n            \n            \n                \nopenGameDetailModal(game: Game)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/my-library/my-library.component.ts:175\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                game\n                                            \n                                                            Game\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        allUserGames\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Game[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/features/my-library/my-library.component.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        authSubscription\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription\n\n                    \n                \n                    \n                        \n                                Defined in src/app/features/my-library/my-library.component.ts:46\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        confirmationModal\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ConfirmationModalComponent\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild(ConfirmationModalComponent)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/features/my-library/my-library.component.ts:49\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        confirmationModalConfirmText\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/features/my-library/my-library.component.ts:44\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        confirmationModalMessage\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/features/my-library/my-library.component.ts:43\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        confirmationModalTitle\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/features/my-library/my-library.component.ts:42\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        currentUser\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/features/my-library/my-library.component.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        error\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/features/my-library/my-library.component.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        filteredGames\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Game[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/features/my-library/my-library.component.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        gameDetailModal\n                        \n                    \n                \n            \n                \n                    \n                        Type :         GameDetailModalComponent\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild(GameDetailModalComponent)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/features/my-library/my-library.component.ts:48\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        gameIdToDelete\n                        \n                    \n                \n            \n                \n                    \n                        Type :     number | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/features/my-library/my-library.component.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        message\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/features/my-library/my-library.component.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        searchTerm\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/features/my-library/my-library.component.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectedFavorite\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/features/my-library/my-library.component.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectedGameForModal\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Game | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/features/my-library/my-library.component.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectedStatus\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/features/my-library/my-library.component.ts:35\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnDestroy, OnInit, ViewChild } from '@angular/core';\nimport { catchError, of, Subscription } from 'rxjs';\nimport { ApiService } from 'src/app/core/api/api.service';\nimport { AuthService, User } from 'src/app/core/auth/auth.service';\nimport { Game, GameService } from 'src/app/core/game/game.service';\nimport { ConfirmationModalComponent } from 'src/app/shared/confirmation-modal/confirmation-modal.component';\nimport { GameDetailModalComponent } from 'src/app/shared/game-detail-modal/game-detail-modal.component';\n\n/**\n * @description \n * Componente para mostrar y gestionar la biblioteca personal de videojuegos del usuario.\n * @summary \n * Permite a los usuarios ver sus juegos, filtrarlos por estado (jugado/pendiente) y favorito,\n * actualizar horas jugadas, marcar como favorito/no favorito, y eliminar juegos de su biblioteca.\n * También integra modales para ver detalles del juego y confirmar eliminaciones.\n * @usageNotes\n * ```html\n * \n * ```\n */\n@Component({\n\tselector: 'app-my-library',\n\ttemplateUrl: './my-library.component.html',\n\tstyleUrls: ['./my-library.component.css']\n})\nexport class MyLibraryComponent implements OnInit, OnDestroy {\n\tmessage = '';\n\terror = '';\n\n\tcurrentUser: User | null = null;\n\tallUserGames: Game[] = [];\n\tfilteredGames: Game[] = [];\n\n\tsearchTerm: string = '';\n\tselectedStatus: string = '';\n\tselectedFavorite: string = '';\n\n\tselectedGameForModal: Game | null = null;\n\tgameIdToDelete: number | null = null;\n\n\t// Propiedades para el modal de confirmación\n\tconfirmationModalTitle: string = '';\n\tconfirmationModalMessage: string = '';\n\tconfirmationModalConfirmText: string = '';\n\n\tprivate authSubscription!: Subscription;\n\n\t@ViewChild(GameDetailModalComponent) gameDetailModal!: GameDetailModalComponent;\n\t@ViewChild(ConfirmationModalComponent) confirmationModal!: ConfirmationModalComponent;\n\n\tconstructor(\n\t\tprivate readonly authService: AuthService,\n\t\tprivate readonly gameService: GameService,\n\t\tprivate readonly rawgApiService: ApiService\n\t) { }\n\n\tngOnInit(): void {\n\t\t// Suscribe al estado de autenticación para cargar los juegos del usuario\n\t\tthis.authSubscription = this.authService.currentUser.subscribe(user => {\n\t\t\tthis.currentUser = user;\n\t\t\tif (this.currentUser) {\n\t\t\t\tthis.loadUserGames();\n\t\t\t} else {\n\t\t\t\tthis.allUserGames = [];\n\t\t\t\tthis.filteredGames = [];\n\t\t\t}\n\t\t});\n\t}\n\n\t// Carga los juegos del usuario desde el GameService\n\tloadUserGames(): void {\n\t\tif (this.currentUser) {\n\t\t\tthis.allUserGames = this.gameService.getUserGames(this.currentUser.username);\n\t\t\tthis.filterAndRenderGames();\n\t\t}\n\t}\n\n\t// Filtra y renderiza los juegos en la vista\n\tfilterAndRenderGames(): void {\n\t\tif (!this.currentUser) {\n\t\t\tthis.filteredGames = [];\n\t\t\treturn;\n\t\t}\n\n\t\tconst searchTermLower = this.searchTerm.toLowerCase();\n\t\tconst selectedStatusValue = this.selectedStatus;\n\t\tconst selectedFavoriteValue = this.selectedFavorite;\n\n\t\tthis.filteredGames = this.allUserGames.filter(game => {\n\t\t\tconst matchesSearch = game.title.toLowerCase().includes(searchTermLower) ||\n\t\t\t\tgame.description.toLowerCase().includes(searchTermLower) ||\n\t\t\t\tgame.platform.toLowerCase().includes(searchTermLower) ||\n\t\t\t\tgame.genre.toLowerCase().includes(searchTermLower);\n\n\t\t\tconst matchesStatus = selectedStatusValue === '' ||\n\t\t\t\t(selectedStatusValue === 'jugado' && game.played) ||\n\t\t\t\t(selectedStatusValue === 'pendiente' && !game.played);\n\n\t\t\tconst matchesFavorite = selectedFavoriteValue === '' ||\n\t\t\t\t(selectedFavoriteValue === 'favorito' && game.isFavorite) ||\n\t\t\t\t(selectedFavoriteValue === 'no-favorito' && !game.isFavorite);\n\n\t\t\treturn matchesSearch && matchesStatus && matchesFavorite;\n\t\t});\n\t}\n\n\t// Maneja el toggle de favorito\n\thandleToggleFavorite(gameId: number): void {\n\t\tif (!this.currentUser) { this.error = 'Debes iniciar sesión para marcar favoritos.'; return; }\n\t\tconst gameToUpdate = this.allUserGames.find(game => game.id === gameId);\n\t\tif (gameToUpdate) {\n\t\t\tgameToUpdate.isFavorite = !gameToUpdate.isFavorite;\n\t\t\tthis.gameService.updateGame(this.currentUser.username, gameToUpdate);\n\t\t\tthis.filterAndRenderGames();\n\t\t}\n\t}\n\n\t// Maneja el toggle de jugado/pendiente\n\thandleTogglePlayed(gameId: number): void {\n\t\tif (!this.currentUser) { this.error = 'Debes iniciar sesión para actualizar el estado.'; return; }\n\t\tconst gameToUpdate = this.allUserGames.find(game => game.id === gameId);\n\t\tif (gameToUpdate) {\n\t\t\tgameToUpdate.played = !gameToUpdate.played;\n\t\t\tthis.gameService.updateGame(this.currentUser.username, gameToUpdate);\n\t\t\tthis.filterAndRenderGames();\n\t\t}\n\t}\n\n\t// Maneja la actualización de horas jugadas\n\thandleUpdateHoursPlayed(gameId: number): void {\n\t\tif (!this.currentUser) { this.error = 'Debes iniciar sesión para actualizar las horas.'; return; }\n\t\tconst gameToUpdate = this.allUserGames.find(game => game.id === gameId);\n\t\tif (gameToUpdate) {\n\t\t\tconst newHoursStr = prompt(`Introduce las horas jugadas para \"${gameToUpdate.title}\":`, String(gameToUpdate.hoursPlayed));\n\t\t\tif (newHoursStr !== null) {\n\t\t\t\tconst parsedHours = parseFloat(newHoursStr);\n\t\t\t\tif (!isNaN(parsedHours) && parsedHours >= 0) {\n\t\t\t\t\tgameToUpdate.hoursPlayed = parsedHours;\n\t\t\t\t\tthis.gameService.updateGame(this.currentUser.username, gameToUpdate);\n\t\t\t\t\tthis.filterAndRenderGames();\n\t\t\t\t} else {\n\t\t\t\t\tthis.error = 'Entrada no válida. Por favor, introduce un número positivo.';\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t// Prepara y muestra el modal de confirmación para eliminar un juego\n\thandleDeleteGameConfirmation(gameId: number): void {\n\t\tif (!this.currentUser) {\n\t\t\tthis.error = 'Debes iniciar sesión para eliminar juegos.';\n\t\t\treturn;\n\t\t}\n\t\tconst gameToDelete = this.allUserGames.find(game => game.id === gameId);\n\t\tif (gameToDelete) {\n\t\t\tthis.gameIdToDelete = gameId; // Almacena el ID del juego a eliminar\n\t\t\tthis.confirmationModalTitle = 'Eliminar Juego';\n\t\t\tthis.confirmationModalMessage = `¿Estás seguro de que quieres eliminar \"${gameToDelete.title}\" de tu biblioteca? Esta acción no se puede deshacer.`;\n\t\t\tthis.confirmationModalConfirmText = 'Eliminar';\n\t\t\tthis.confirmationModal.show(); // Muestra el modal de confirmación\n\t\t}\n\t}\n\n\t// Maneja la respuesta del modal de confirmación\n\tonDeleteConfirmation(confirmed: boolean): void {\n\t\tif (confirmed && this.gameIdToDelete !== null) {\n\t\t\tif (!this.currentUser) { /* Esto no debería pasar si el guardián de arriba funciona */ return; }\n\t\t\tthis.gameService.deleteGame(this.currentUser.username, this.gameIdToDelete);\n\t\t\tthis.loadUserGames(); // Vuelve a cargar y renderizar los juegos\n\t\t}\n\t\tthis.gameIdToDelete = null; // Limpia el ID del juego a eliminar\n\t}\n\n\t// Abre el modal de detalles del juego utilizando el componente modal hijo\n\topenGameDetailModal(game: Game): void {\n\t\tthis.rawgApiService.getGameDetails(game.id).pipe(\n\t\t\tcatchError(err => {\n\t\t\t\tconsole.error('Error al obtener detalles completos del juego de RAWG API:', err);\n\t\t\t\treturn of(game);\n\t\t\t})\n\t\t).subscribe(fullDetailsGame => {\n\t\t\tthis.selectedGameForModal = {\n\t\t\t\t...fullDetailsGame,\n\t\t\t\tachievements: game.achievements\n\t\t\t};\n\t\t\tif (this.gameDetailModal) {\n\t\t\t\tthis.gameDetailModal.show();\n\t\t\t}\n\t\t});\n\t}\n\n\tngOnDestroy(): void {\n\t\tif (this.authSubscription) {\n\t\t\tthis.authSubscription.unsubscribe();\n\t\t}\n\t}\n}\n\n    \n\n    \n        \n    Mi Biblioteca Personal\n    {{ message }}\n\t{{ error }}\n    \n        \n            \n        \n        \n            \n                Todos los estados\n                Jugado\n                Pendiente\n            \n        \n        \n            \n                Todos los favoritos\n                Favorito\n                No Favorito\n            \n        \n    \n    \n        \n             0; else noGamesFound\">\n                \n                    \n                        \n                        \n                    \n                \n            \n            \n                \n                    No se encontraron juegos con los filtros aplicados.\n                    Intenta ajustar tus criterios de búsqueda o filtro.\n                \n            \n        \n        \n            \n                ¡Bienvenido a la Biblioteca de Videojuegos!\n                Inicia sesión o regístrate para gestionar tu propia biblioteca personal.\n                Puedes usar admin / Admin123! o user1 / User123!.\n                Iniciar Sesión\n            \n        \n    \n\n\n\n\n\n\n\n\n    \n\n    \n                \n                    ./my-library.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    Mi Biblioteca Personal    {{ message }}\t{{ error }}                                                                    Todos los estados                Jugado                Pendiente                                                        Todos los favoritos                Favorito                No Favorito                                                 0; else noGamesFound\">                                                                                                                                                                                    No se encontraron juegos con los filtros aplicados.                    Intenta ajustar tus criterios de búsqueda o filtro.                                                                        ¡Bienvenido a la Biblioteca de Videojuegos!                Inicia sesión o regístrate para gestionar tu propia biblioteca personal.                Puedes usar admin / Admin123! o user1 / User123!.                Iniciar Sesión                        '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CategoryComponent', 'selector': 'app-category'},{'name': 'ConfirmationModalComponent', 'selector': 'app-confirmation-modal'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'GameCardComponent', 'selector': 'app-game-card'},{'name': 'GameDetailModalComponent', 'selector': 'app-game-detail-modal'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MyLibraryComponent', 'selector': 'app-my-library'},{'name': 'RecoverPasswordComponent', 'selector': 'app-recover-password'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'UserProfileComponent', 'selector': 'app-user-profile'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'MyLibraryComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/RawgAchievementApi.html":{"url":"interfaces/RawgAchievementApi.html","title":"interface - RawgAchievementApi","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  RawgAchievementApi\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/api/api.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            description\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            image\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            percent\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        description:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        image\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        image:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        percent\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        percent:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient, HttpParams } from '@angular/common/http';\nimport { Observable, of } from 'rxjs';\nimport { map, catchError } from 'rxjs/operators';\nimport { Game, GameAchievement } from '../game/game.service';\n\n// Define la estructura de una respuesta de la API de RAWG para la lista de juegos\ninterface RawgApiResponse {\n  count: number;\n  next: string | null;\n  previous: string | null;\n  results: RawgGame[];\n}\n\n// Define la estructura simplificada de un juego de RAWGS\ninterface RawgGame {\n  id: number;\n  name: string;\n  background_image: string;\n  genres: { id: number; name: string; slug: string }[];\n  platforms: { platform: { id: number; name: string; slug: string } }[];\n  released: string;\n  description_raw?: string;\n  achievements_count?: number;\n}\n\n// Interfaz para la respuesta de la API de logros de RAWG\ninterface RawgAchievementsApiResponse {\n  count: number;\n  results: RawgAchievementApi[];\n}\n\n// Interfaz para la estructura de un logro individual de la API de RAWG\ninterface RawgAchievementApi {\n  id: number;\n  name: string;\n  description: string;\n  image: string;\n  percent: string;\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ApiService {\n  private readonly BASE_URL = 'https://api.rawg.io/api';\n  private readonly API_KEY = 'e8efc69ecead49639193319812de4f90';\n\n  constructor(private readonly http: HttpClient) { }\n\n  /**\n   * Obtiene una lista de juegos de la API de RAWG.\n   * @param searchQuery Término de búsqueda para juegos.\n   * @param genres IDs o slugs de géneros (separados por coma).\n   * @param platforms IDs o slugs de plataformas (separados por coma).\n   * @param page_size Número de resultados por página.\n   * @returns Un Observable de un array de objetos Game (transformado desde RawgGame).\n   */\n  getGames(searchQuery: string = '', genres: string = '', platforms: string = '', page_size: number = 20): Observable {\n    let params = new HttpParams().set('key', this.API_KEY).set('page_size', page_size.toString());\n\n    if (searchQuery) {\n      params = params.set('search', searchQuery);\n    }\n    if (genres) {\n      params = params.set('genres', genres);\n    }\n    if (platforms) {\n      params = params.set('platforms', platforms);\n    }\n\n    // Realiza la petición HTTP y mapea la respuesta al formato Game[]\n    return this.http.get(`${this.BASE_URL}/games`, { params }).pipe(\n      map(response => response.results.map(rawgGame => this.mapRawgGameToGame(rawgGame))),\n      catchError(error => {\n        console.error('Error fetching games from RAWG API:', error);\n        return of([]); // Retorna un observable de array vacío en caso de error\n      })\n    );\n  }\n\n  /**\n   * Obtiene los detalles completos de un juego específico por su ID.\n   * @param id El ID del juego en RAWG.\n   * @returns Un Observable de un objeto Game. Incluye la descripción completa si está disponible.\n   */\n  getGameDetails(id: number): Observable {\n    const params = new HttpParams().set('key', this.API_KEY);\n    return this.http.get(`${this.BASE_URL}/games/${id}`, { params }).pipe(\n      map(rawgGame => this.mapRawgGameToGame(rawgGame, true)), // Pasar true para indicar que es un detalle\n      catchError(error => {\n        console.error(`Error fetching details for game ID ${id} from RAWG API:`, error);\n        throw error; // Propaga el error para que el componente lo maneje\n      })\n    );\n  }\n\n  /**\n   * Obtiene la lista de logros para un juego específico por su ID.\n   * @param gameId El ID del juego en RAWG.\n   * @returns Un Observable de un array de objetos GameAchievement.\n   */\n  getGameAchievements(gameId: number): Observable {\n    const params = new HttpParams().set('key', this.API_KEY);\n    return this.http.get(`${this.BASE_URL}/games/${gameId}/achievements`, { params }).pipe(\n      map(response => response.results.map(rawgAchievement => this.mapRawgAchievementToGameAchievement(rawgAchievement))),\n      catchError(error => {\n        console.error(`Error fetching achievements for game ID ${gameId} from RAWG API:`, error);\n        return of([]); // Retorna un observable de array vacío en caso de error\n      })\n    );\n  }\n\n  /**\n   * Mapea un objeto RawgGame a la interfaz Game de nuestra aplicación.\n   * Esta función NO mapea los logros, ya que se obtienen de un endpoint separado.\n   * @param rawgGame El objeto RawgGame de la API.\n   * @param includeFullDescription Indica si se debe incluir la descripción completa (description_raw).\n   * @returns Un objeto Game compatible con tu aplicación.\n   */\n  private mapRawgGameToGame(rawgGame: RawgGame, includeFullDescription: boolean = false): Game {\n    // description_raw solo viene en la respuesta del endpoint de detalle de un juego (/games/{id})\n    const description = rawgGame.description_raw || rawgGame.name;\n    return {\n      id: rawgGame.id,\n      title: rawgGame.name,\n      description: includeFullDescription ? description : description.substring(0, 150) + (description.length > 150 ? '...' : ''),\n      platform: rawgGame.platforms.map(p => p.platform.name).join(', '),\n      genre: rawgGame.genres.map(g => g.name).join(', '),\n      hoursPlayed: 0,\n      image: rawgGame.background_image || 'https://placehold.co/400x250/374151/D1D5DB?text=No+Image',\n      isFavorite: false,\n      played: false,\n      achievements: [] \n    };\n  }\n\n  /**\n   * Mapea un objeto RawgAchievementApi a la interfaz GameAchievement de nuestra aplicación.\n   * @param rawgAchievement El objeto de logro de la API.\n   * @returns Un objeto GameAchievement compatible con tu aplicación (con 'completed' en false por defecto).\n   */\n  private mapRawgAchievementToGameAchievement(rawgAchievement: RawgAchievementApi): GameAchievement {\n    return {\n      id: rawgAchievement.id,\n      name: rawgAchievement.name,\n      description: rawgAchievement.description,\n      image: rawgAchievement.image || 'https://placehold.co/100x100/374151/D1D5DB?text=Ach',\n      percent: rawgAchievement.percent,\n      completed: false\n    };\n  }\n\n  /**\n   * Obtiene la lista de géneros disponibles de la API de RAWG.\n   * @returns Un Observable de un array de strings con los nombres de los géneros.\n   */\n  getGenres(): Observable {\n    const params = new HttpParams().set('key', this.API_KEY);\n    return this.http.get(`${this.BASE_URL}/genres`, { params }).pipe(\n      map(response => response.results.map((genre: any) => genre.name)),\n      catchError(error => {\n        console.error('Error fetching genres from RAWG API:', error);\n        return of([]);\n      })\n    );\n  }\n\n  /**\n   * Obtiene la lista de plataformas disponibles de la API de RAWG.\n   * @returns Un Observable de un array de strings con los nombres de las plataformas.\n   */\n  getPlatforms(): Observable {\n    const params = new HttpParams().set('key', this.API_KEY);\n    return this.http.get(`${this.BASE_URL}/platforms`, { params }).pipe(\n      map(response => response.results.map((platform: any) => platform.name)),\n      catchError(error => {\n        console.error('Error fetching platforms from RAWG API:', error);\n        return of([]);\n      })\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/RawgAchievementsApiResponse.html":{"url":"interfaces/RawgAchievementsApiResponse.html","title":"interface - RawgAchievementsApiResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  RawgAchievementsApiResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/api/api.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            count\n                                        \n                                \n                                \n                                        \n                                            results\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        count\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        count:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        results\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        results:         RawgAchievementApi[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         RawgAchievementApi[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient, HttpParams } from '@angular/common/http';\nimport { Observable, of } from 'rxjs';\nimport { map, catchError } from 'rxjs/operators';\nimport { Game, GameAchievement } from '../game/game.service';\n\n// Define la estructura de una respuesta de la API de RAWG para la lista de juegos\ninterface RawgApiResponse {\n  count: number;\n  next: string | null;\n  previous: string | null;\n  results: RawgGame[];\n}\n\n// Define la estructura simplificada de un juego de RAWGS\ninterface RawgGame {\n  id: number;\n  name: string;\n  background_image: string;\n  genres: { id: number; name: string; slug: string }[];\n  platforms: { platform: { id: number; name: string; slug: string } }[];\n  released: string;\n  description_raw?: string;\n  achievements_count?: number;\n}\n\n// Interfaz para la respuesta de la API de logros de RAWG\ninterface RawgAchievementsApiResponse {\n  count: number;\n  results: RawgAchievementApi[];\n}\n\n// Interfaz para la estructura de un logro individual de la API de RAWG\ninterface RawgAchievementApi {\n  id: number;\n  name: string;\n  description: string;\n  image: string;\n  percent: string;\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ApiService {\n  private readonly BASE_URL = 'https://api.rawg.io/api';\n  private readonly API_KEY = 'e8efc69ecead49639193319812de4f90';\n\n  constructor(private readonly http: HttpClient) { }\n\n  /**\n   * Obtiene una lista de juegos de la API de RAWG.\n   * @param searchQuery Término de búsqueda para juegos.\n   * @param genres IDs o slugs de géneros (separados por coma).\n   * @param platforms IDs o slugs de plataformas (separados por coma).\n   * @param page_size Número de resultados por página.\n   * @returns Un Observable de un array de objetos Game (transformado desde RawgGame).\n   */\n  getGames(searchQuery: string = '', genres: string = '', platforms: string = '', page_size: number = 20): Observable {\n    let params = new HttpParams().set('key', this.API_KEY).set('page_size', page_size.toString());\n\n    if (searchQuery) {\n      params = params.set('search', searchQuery);\n    }\n    if (genres) {\n      params = params.set('genres', genres);\n    }\n    if (platforms) {\n      params = params.set('platforms', platforms);\n    }\n\n    // Realiza la petición HTTP y mapea la respuesta al formato Game[]\n    return this.http.get(`${this.BASE_URL}/games`, { params }).pipe(\n      map(response => response.results.map(rawgGame => this.mapRawgGameToGame(rawgGame))),\n      catchError(error => {\n        console.error('Error fetching games from RAWG API:', error);\n        return of([]); // Retorna un observable de array vacío en caso de error\n      })\n    );\n  }\n\n  /**\n   * Obtiene los detalles completos de un juego específico por su ID.\n   * @param id El ID del juego en RAWG.\n   * @returns Un Observable de un objeto Game. Incluye la descripción completa si está disponible.\n   */\n  getGameDetails(id: number): Observable {\n    const params = new HttpParams().set('key', this.API_KEY);\n    return this.http.get(`${this.BASE_URL}/games/${id}`, { params }).pipe(\n      map(rawgGame => this.mapRawgGameToGame(rawgGame, true)), // Pasar true para indicar que es un detalle\n      catchError(error => {\n        console.error(`Error fetching details for game ID ${id} from RAWG API:`, error);\n        throw error; // Propaga el error para que el componente lo maneje\n      })\n    );\n  }\n\n  /**\n   * Obtiene la lista de logros para un juego específico por su ID.\n   * @param gameId El ID del juego en RAWG.\n   * @returns Un Observable de un array de objetos GameAchievement.\n   */\n  getGameAchievements(gameId: number): Observable {\n    const params = new HttpParams().set('key', this.API_KEY);\n    return this.http.get(`${this.BASE_URL}/games/${gameId}/achievements`, { params }).pipe(\n      map(response => response.results.map(rawgAchievement => this.mapRawgAchievementToGameAchievement(rawgAchievement))),\n      catchError(error => {\n        console.error(`Error fetching achievements for game ID ${gameId} from RAWG API:`, error);\n        return of([]); // Retorna un observable de array vacío en caso de error\n      })\n    );\n  }\n\n  /**\n   * Mapea un objeto RawgGame a la interfaz Game de nuestra aplicación.\n   * Esta función NO mapea los logros, ya que se obtienen de un endpoint separado.\n   * @param rawgGame El objeto RawgGame de la API.\n   * @param includeFullDescription Indica si se debe incluir la descripción completa (description_raw).\n   * @returns Un objeto Game compatible con tu aplicación.\n   */\n  private mapRawgGameToGame(rawgGame: RawgGame, includeFullDescription: boolean = false): Game {\n    // description_raw solo viene en la respuesta del endpoint de detalle de un juego (/games/{id})\n    const description = rawgGame.description_raw || rawgGame.name;\n    return {\n      id: rawgGame.id,\n      title: rawgGame.name,\n      description: includeFullDescription ? description : description.substring(0, 150) + (description.length > 150 ? '...' : ''),\n      platform: rawgGame.platforms.map(p => p.platform.name).join(', '),\n      genre: rawgGame.genres.map(g => g.name).join(', '),\n      hoursPlayed: 0,\n      image: rawgGame.background_image || 'https://placehold.co/400x250/374151/D1D5DB?text=No+Image',\n      isFavorite: false,\n      played: false,\n      achievements: [] \n    };\n  }\n\n  /**\n   * Mapea un objeto RawgAchievementApi a la interfaz GameAchievement de nuestra aplicación.\n   * @param rawgAchievement El objeto de logro de la API.\n   * @returns Un objeto GameAchievement compatible con tu aplicación (con 'completed' en false por defecto).\n   */\n  private mapRawgAchievementToGameAchievement(rawgAchievement: RawgAchievementApi): GameAchievement {\n    return {\n      id: rawgAchievement.id,\n      name: rawgAchievement.name,\n      description: rawgAchievement.description,\n      image: rawgAchievement.image || 'https://placehold.co/100x100/374151/D1D5DB?text=Ach',\n      percent: rawgAchievement.percent,\n      completed: false\n    };\n  }\n\n  /**\n   * Obtiene la lista de géneros disponibles de la API de RAWG.\n   * @returns Un Observable de un array de strings con los nombres de los géneros.\n   */\n  getGenres(): Observable {\n    const params = new HttpParams().set('key', this.API_KEY);\n    return this.http.get(`${this.BASE_URL}/genres`, { params }).pipe(\n      map(response => response.results.map((genre: any) => genre.name)),\n      catchError(error => {\n        console.error('Error fetching genres from RAWG API:', error);\n        return of([]);\n      })\n    );\n  }\n\n  /**\n   * Obtiene la lista de plataformas disponibles de la API de RAWG.\n   * @returns Un Observable de un array de strings con los nombres de las plataformas.\n   */\n  getPlatforms(): Observable {\n    const params = new HttpParams().set('key', this.API_KEY);\n    return this.http.get(`${this.BASE_URL}/platforms`, { params }).pipe(\n      map(response => response.results.map((platform: any) => platform.name)),\n      catchError(error => {\n        console.error('Error fetching platforms from RAWG API:', error);\n        return of([]);\n      })\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/RawgApiResponse.html":{"url":"interfaces/RawgApiResponse.html","title":"interface - RawgApiResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  RawgApiResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/api/api.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            count\n                                        \n                                \n                                \n                                        \n                                            next\n                                        \n                                \n                                \n                                        \n                                            previous\n                                        \n                                \n                                \n                                        \n                                            results\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        count\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        count:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        next\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        next:     string | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        previous\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        previous:     string | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        results\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        results:     RawgGame[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     RawgGame[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient, HttpParams } from '@angular/common/http';\nimport { Observable, of } from 'rxjs';\nimport { map, catchError } from 'rxjs/operators';\nimport { Game, GameAchievement } from '../game/game.service';\n\n// Define la estructura de una respuesta de la API de RAWG para la lista de juegos\ninterface RawgApiResponse {\n  count: number;\n  next: string | null;\n  previous: string | null;\n  results: RawgGame[];\n}\n\n// Define la estructura simplificada de un juego de RAWGS\ninterface RawgGame {\n  id: number;\n  name: string;\n  background_image: string;\n  genres: { id: number; name: string; slug: string }[];\n  platforms: { platform: { id: number; name: string; slug: string } }[];\n  released: string;\n  description_raw?: string;\n  achievements_count?: number;\n}\n\n// Interfaz para la respuesta de la API de logros de RAWG\ninterface RawgAchievementsApiResponse {\n  count: number;\n  results: RawgAchievementApi[];\n}\n\n// Interfaz para la estructura de un logro individual de la API de RAWG\ninterface RawgAchievementApi {\n  id: number;\n  name: string;\n  description: string;\n  image: string;\n  percent: string;\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ApiService {\n  private readonly BASE_URL = 'https://api.rawg.io/api';\n  private readonly API_KEY = 'e8efc69ecead49639193319812de4f90';\n\n  constructor(private readonly http: HttpClient) { }\n\n  /**\n   * Obtiene una lista de juegos de la API de RAWG.\n   * @param searchQuery Término de búsqueda para juegos.\n   * @param genres IDs o slugs de géneros (separados por coma).\n   * @param platforms IDs o slugs de plataformas (separados por coma).\n   * @param page_size Número de resultados por página.\n   * @returns Un Observable de un array de objetos Game (transformado desde RawgGame).\n   */\n  getGames(searchQuery: string = '', genres: string = '', platforms: string = '', page_size: number = 20): Observable {\n    let params = new HttpParams().set('key', this.API_KEY).set('page_size', page_size.toString());\n\n    if (searchQuery) {\n      params = params.set('search', searchQuery);\n    }\n    if (genres) {\n      params = params.set('genres', genres);\n    }\n    if (platforms) {\n      params = params.set('platforms', platforms);\n    }\n\n    // Realiza la petición HTTP y mapea la respuesta al formato Game[]\n    return this.http.get(`${this.BASE_URL}/games`, { params }).pipe(\n      map(response => response.results.map(rawgGame => this.mapRawgGameToGame(rawgGame))),\n      catchError(error => {\n        console.error('Error fetching games from RAWG API:', error);\n        return of([]); // Retorna un observable de array vacío en caso de error\n      })\n    );\n  }\n\n  /**\n   * Obtiene los detalles completos de un juego específico por su ID.\n   * @param id El ID del juego en RAWG.\n   * @returns Un Observable de un objeto Game. Incluye la descripción completa si está disponible.\n   */\n  getGameDetails(id: number): Observable {\n    const params = new HttpParams().set('key', this.API_KEY);\n    return this.http.get(`${this.BASE_URL}/games/${id}`, { params }).pipe(\n      map(rawgGame => this.mapRawgGameToGame(rawgGame, true)), // Pasar true para indicar que es un detalle\n      catchError(error => {\n        console.error(`Error fetching details for game ID ${id} from RAWG API:`, error);\n        throw error; // Propaga el error para que el componente lo maneje\n      })\n    );\n  }\n\n  /**\n   * Obtiene la lista de logros para un juego específico por su ID.\n   * @param gameId El ID del juego en RAWG.\n   * @returns Un Observable de un array de objetos GameAchievement.\n   */\n  getGameAchievements(gameId: number): Observable {\n    const params = new HttpParams().set('key', this.API_KEY);\n    return this.http.get(`${this.BASE_URL}/games/${gameId}/achievements`, { params }).pipe(\n      map(response => response.results.map(rawgAchievement => this.mapRawgAchievementToGameAchievement(rawgAchievement))),\n      catchError(error => {\n        console.error(`Error fetching achievements for game ID ${gameId} from RAWG API:`, error);\n        return of([]); // Retorna un observable de array vacío en caso de error\n      })\n    );\n  }\n\n  /**\n   * Mapea un objeto RawgGame a la interfaz Game de nuestra aplicación.\n   * Esta función NO mapea los logros, ya que se obtienen de un endpoint separado.\n   * @param rawgGame El objeto RawgGame de la API.\n   * @param includeFullDescription Indica si se debe incluir la descripción completa (description_raw).\n   * @returns Un objeto Game compatible con tu aplicación.\n   */\n  private mapRawgGameToGame(rawgGame: RawgGame, includeFullDescription: boolean = false): Game {\n    // description_raw solo viene en la respuesta del endpoint de detalle de un juego (/games/{id})\n    const description = rawgGame.description_raw || rawgGame.name;\n    return {\n      id: rawgGame.id,\n      title: rawgGame.name,\n      description: includeFullDescription ? description : description.substring(0, 150) + (description.length > 150 ? '...' : ''),\n      platform: rawgGame.platforms.map(p => p.platform.name).join(', '),\n      genre: rawgGame.genres.map(g => g.name).join(', '),\n      hoursPlayed: 0,\n      image: rawgGame.background_image || 'https://placehold.co/400x250/374151/D1D5DB?text=No+Image',\n      isFavorite: false,\n      played: false,\n      achievements: [] \n    };\n  }\n\n  /**\n   * Mapea un objeto RawgAchievementApi a la interfaz GameAchievement de nuestra aplicación.\n   * @param rawgAchievement El objeto de logro de la API.\n   * @returns Un objeto GameAchievement compatible con tu aplicación (con 'completed' en false por defecto).\n   */\n  private mapRawgAchievementToGameAchievement(rawgAchievement: RawgAchievementApi): GameAchievement {\n    return {\n      id: rawgAchievement.id,\n      name: rawgAchievement.name,\n      description: rawgAchievement.description,\n      image: rawgAchievement.image || 'https://placehold.co/100x100/374151/D1D5DB?text=Ach',\n      percent: rawgAchievement.percent,\n      completed: false\n    };\n  }\n\n  /**\n   * Obtiene la lista de géneros disponibles de la API de RAWG.\n   * @returns Un Observable de un array de strings con los nombres de los géneros.\n   */\n  getGenres(): Observable {\n    const params = new HttpParams().set('key', this.API_KEY);\n    return this.http.get(`${this.BASE_URL}/genres`, { params }).pipe(\n      map(response => response.results.map((genre: any) => genre.name)),\n      catchError(error => {\n        console.error('Error fetching genres from RAWG API:', error);\n        return of([]);\n      })\n    );\n  }\n\n  /**\n   * Obtiene la lista de plataformas disponibles de la API de RAWG.\n   * @returns Un Observable de un array de strings con los nombres de las plataformas.\n   */\n  getPlatforms(): Observable {\n    const params = new HttpParams().set('key', this.API_KEY);\n    return this.http.get(`${this.BASE_URL}/platforms`, { params }).pipe(\n      map(response => response.results.map((platform: any) => platform.name)),\n      catchError(error => {\n        console.error('Error fetching platforms from RAWG API:', error);\n        return of([]);\n      })\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/RawgGame.html":{"url":"interfaces/RawgGame.html","title":"interface - RawgGame","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  RawgGame\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/api/api.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            achievements_count\n                                        \n                                \n                                \n                                        \n                                            background_image\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            description_raw\n                                        \n                                \n                                \n                                        \n                                            genres\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            platforms\n                                        \n                                \n                                \n                                        \n                                            released\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        achievements_count\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        achievements_count:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        background_image\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        background_image:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        description_raw\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        description_raw:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        genres\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        genres:     literal type[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        platforms\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        platforms:     literal type[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        released\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        released:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient, HttpParams } from '@angular/common/http';\nimport { Observable, of } from 'rxjs';\nimport { map, catchError } from 'rxjs/operators';\nimport { Game, GameAchievement } from '../game/game.service';\n\n// Define la estructura de una respuesta de la API de RAWG para la lista de juegos\ninterface RawgApiResponse {\n  count: number;\n  next: string | null;\n  previous: string | null;\n  results: RawgGame[];\n}\n\n// Define la estructura simplificada de un juego de RAWGS\ninterface RawgGame {\n  id: number;\n  name: string;\n  background_image: string;\n  genres: { id: number; name: string; slug: string }[];\n  platforms: { platform: { id: number; name: string; slug: string } }[];\n  released: string;\n  description_raw?: string;\n  achievements_count?: number;\n}\n\n// Interfaz para la respuesta de la API de logros de RAWG\ninterface RawgAchievementsApiResponse {\n  count: number;\n  results: RawgAchievementApi[];\n}\n\n// Interfaz para la estructura de un logro individual de la API de RAWG\ninterface RawgAchievementApi {\n  id: number;\n  name: string;\n  description: string;\n  image: string;\n  percent: string;\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ApiService {\n  private readonly BASE_URL = 'https://api.rawg.io/api';\n  private readonly API_KEY = 'e8efc69ecead49639193319812de4f90';\n\n  constructor(private readonly http: HttpClient) { }\n\n  /**\n   * Obtiene una lista de juegos de la API de RAWG.\n   * @param searchQuery Término de búsqueda para juegos.\n   * @param genres IDs o slugs de géneros (separados por coma).\n   * @param platforms IDs o slugs de plataformas (separados por coma).\n   * @param page_size Número de resultados por página.\n   * @returns Un Observable de un array de objetos Game (transformado desde RawgGame).\n   */\n  getGames(searchQuery: string = '', genres: string = '', platforms: string = '', page_size: number = 20): Observable {\n    let params = new HttpParams().set('key', this.API_KEY).set('page_size', page_size.toString());\n\n    if (searchQuery) {\n      params = params.set('search', searchQuery);\n    }\n    if (genres) {\n      params = params.set('genres', genres);\n    }\n    if (platforms) {\n      params = params.set('platforms', platforms);\n    }\n\n    // Realiza la petición HTTP y mapea la respuesta al formato Game[]\n    return this.http.get(`${this.BASE_URL}/games`, { params }).pipe(\n      map(response => response.results.map(rawgGame => this.mapRawgGameToGame(rawgGame))),\n      catchError(error => {\n        console.error('Error fetching games from RAWG API:', error);\n        return of([]); // Retorna un observable de array vacío en caso de error\n      })\n    );\n  }\n\n  /**\n   * Obtiene los detalles completos de un juego específico por su ID.\n   * @param id El ID del juego en RAWG.\n   * @returns Un Observable de un objeto Game. Incluye la descripción completa si está disponible.\n   */\n  getGameDetails(id: number): Observable {\n    const params = new HttpParams().set('key', this.API_KEY);\n    return this.http.get(`${this.BASE_URL}/games/${id}`, { params }).pipe(\n      map(rawgGame => this.mapRawgGameToGame(rawgGame, true)), // Pasar true para indicar que es un detalle\n      catchError(error => {\n        console.error(`Error fetching details for game ID ${id} from RAWG API:`, error);\n        throw error; // Propaga el error para que el componente lo maneje\n      })\n    );\n  }\n\n  /**\n   * Obtiene la lista de logros para un juego específico por su ID.\n   * @param gameId El ID del juego en RAWG.\n   * @returns Un Observable de un array de objetos GameAchievement.\n   */\n  getGameAchievements(gameId: number): Observable {\n    const params = new HttpParams().set('key', this.API_KEY);\n    return this.http.get(`${this.BASE_URL}/games/${gameId}/achievements`, { params }).pipe(\n      map(response => response.results.map(rawgAchievement => this.mapRawgAchievementToGameAchievement(rawgAchievement))),\n      catchError(error => {\n        console.error(`Error fetching achievements for game ID ${gameId} from RAWG API:`, error);\n        return of([]); // Retorna un observable de array vacío en caso de error\n      })\n    );\n  }\n\n  /**\n   * Mapea un objeto RawgGame a la interfaz Game de nuestra aplicación.\n   * Esta función NO mapea los logros, ya que se obtienen de un endpoint separado.\n   * @param rawgGame El objeto RawgGame de la API.\n   * @param includeFullDescription Indica si se debe incluir la descripción completa (description_raw).\n   * @returns Un objeto Game compatible con tu aplicación.\n   */\n  private mapRawgGameToGame(rawgGame: RawgGame, includeFullDescription: boolean = false): Game {\n    // description_raw solo viene en la respuesta del endpoint de detalle de un juego (/games/{id})\n    const description = rawgGame.description_raw || rawgGame.name;\n    return {\n      id: rawgGame.id,\n      title: rawgGame.name,\n      description: includeFullDescription ? description : description.substring(0, 150) + (description.length > 150 ? '...' : ''),\n      platform: rawgGame.platforms.map(p => p.platform.name).join(', '),\n      genre: rawgGame.genres.map(g => g.name).join(', '),\n      hoursPlayed: 0,\n      image: rawgGame.background_image || 'https://placehold.co/400x250/374151/D1D5DB?text=No+Image',\n      isFavorite: false,\n      played: false,\n      achievements: [] \n    };\n  }\n\n  /**\n   * Mapea un objeto RawgAchievementApi a la interfaz GameAchievement de nuestra aplicación.\n   * @param rawgAchievement El objeto de logro de la API.\n   * @returns Un objeto GameAchievement compatible con tu aplicación (con 'completed' en false por defecto).\n   */\n  private mapRawgAchievementToGameAchievement(rawgAchievement: RawgAchievementApi): GameAchievement {\n    return {\n      id: rawgAchievement.id,\n      name: rawgAchievement.name,\n      description: rawgAchievement.description,\n      image: rawgAchievement.image || 'https://placehold.co/100x100/374151/D1D5DB?text=Ach',\n      percent: rawgAchievement.percent,\n      completed: false\n    };\n  }\n\n  /**\n   * Obtiene la lista de géneros disponibles de la API de RAWG.\n   * @returns Un Observable de un array de strings con los nombres de los géneros.\n   */\n  getGenres(): Observable {\n    const params = new HttpParams().set('key', this.API_KEY);\n    return this.http.get(`${this.BASE_URL}/genres`, { params }).pipe(\n      map(response => response.results.map((genre: any) => genre.name)),\n      catchError(error => {\n        console.error('Error fetching genres from RAWG API:', error);\n        return of([]);\n      })\n    );\n  }\n\n  /**\n   * Obtiene la lista de plataformas disponibles de la API de RAWG.\n   * @returns Un Observable de un array de strings con los nombres de las plataformas.\n   */\n  getPlatforms(): Observable {\n    const params = new HttpParams().set('key', this.API_KEY);\n    return this.http.get(`${this.BASE_URL}/platforms`, { params }).pipe(\n      map(response => response.results.map((platform: any) => platform.name)),\n      catchError(error => {\n        console.error('Error fetching platforms from RAWG API:', error);\n        return of([]);\n      })\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/RecoverPasswordComponent.html":{"url":"components/RecoverPasswordComponent.html","title":"component - RecoverPasswordComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  RecoverPasswordComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/features/recover-password/recover-password.component.ts\n\n\n\n    \n        Description\n    \n    \n        Componente para la recuperación de contraseña de usuarios.\nPermite a los usuarios actualizar su contraseña proporcionando su correo electrónico\ny una nueva contraseña que cumpla con los requisitos de seguridad. Utiliza formularios reactivos\ny validadores personalizados.\nExample :\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n                OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-recover-password\n            \n\n\n\n            \n                styleUrls\n                ./recover-password.component.css\n            \n\n\n\n            \n                templateUrl\n                ./recover-password.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                authSubscription\n                            \n                            \n                                recoveryForm\n                            \n                            \n                                recoveryMessage\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onSubmit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService, router: Router, fb: FormBuilder)\n                    \n                \n                        \n                            \n                                Defined in src/app/features/recover-password/recover-password.component.ts:28\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        fb\n                                                  \n                                                        \n                                                                    FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/recover-password/recover-password.component.ts:72\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/recover-password/recover-password.component.ts:36\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onSubmit\n                        \n                    \n                \n            \n            \n                \nonSubmit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/recover-password/recover-password.component.ts:54\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        authSubscription\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription\n\n                    \n                \n                    \n                        \n                                Defined in src/app/features/recover-password/recover-password.component.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        recoveryForm\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FormGroup\n\n                    \n                \n                    \n                        \n                                Defined in src/app/features/recover-password/recover-password.component.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        recoveryMessage\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/features/recover-password/recover-password.component.ts:27\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { Subscription } from 'rxjs';\nimport { AuthService } from 'src/app/core/auth/auth.service';\nimport { emailValidator, passwordStrengthValidator, passwordsMatchValidator } from 'src/app/utils/validator';\n\n/**\n * @description \n * Componente para la recuperación de contraseña de usuarios.\n * @summary \n * Permite a los usuarios actualizar su contraseña proporcionando su correo electrónico\n * y una nueva contraseña que cumpla con los requisitos de seguridad. Utiliza formularios reactivos\n * y validadores personalizados.\n * @usageNotes\n * ```html\n * \n * ```\n */\n@Component({\n\tselector: 'app-recover-password',\n\ttemplateUrl: './recover-password.component.html',\n\tstyleUrls: ['./recover-password.component.css']\n})\nexport class RecoverPasswordComponent implements OnInit, OnDestroy {\n\trecoveryForm!: FormGroup;\n\trecoveryMessage: string = '';\n\tprivate authSubscription!: Subscription;\n\n\tconstructor(\n\t\tprivate readonly authService: AuthService,\n\t\tprivate readonly router: Router,\n\t\tprivate readonly fb: FormBuilder\n\t) { }\n\n\tngOnInit(): void {\n\t\t// Inicializa el formulario reactivo para la recuperación de contraseña\n\t\tthis.recoveryForm = this.fb.group({\n\t\t\temail: ['', [Validators.required, emailValidator()]],\n\t\t\tnewPassword: ['', [Validators.required, passwordStrengthValidator()]],\n\t\t\tconfirmPassword: ['', [Validators.required]]\n\t\t}, {\n\t\t\tvalidators: passwordsMatchValidator('newPassword', 'confirmPassword')\n\t\t});\n\n\t\t// Si el usuario ya está logueado, redirige al inicio\n\t\tthis.authSubscription = this.authService.currentUser.subscribe(user => {\n\t\t\tif (user) {\n\t\t\t\tthis.router.navigate(['/inicio']);\n\t\t\t}\n\t\t});\n\t}\n\n\tonSubmit(): void {\n\t\tif (this.recoveryForm.invalid) {\n\t\t\tthis.recoveryForm.markAllAsTouched();\n\t\t\tthis.recoveryMessage = 'Error al enviar formulario. Por favor, revisa los campos.';\n\t\t\treturn;\n\t\t}\n\n\t\tconst { email, newPassword } = this.recoveryForm.value;\n\t\tconst result = this.authService.updatePassword(email, newPassword);\n\n\t\tif (result.success) {\n\t\t\tthis.recoveryMessage = `${result.message}`;\n\t\t\tsetTimeout(() => { this.router.navigate(['/login']); }, 1000);\n\t\t} else {\n\t\t\tthis.recoveryMessage = `${result.message}`;\n\t\t}\n\t}\n\n\tngOnDestroy(): void {\n\t\tif (this.authSubscription) {\n\t\t\tthis.authSubscription.unsubscribe();\n\t\t}\n\t}\n}\n\n    \n\n    \n        \n    \n        \n            Recuperar Contraseña\n            \n            \n                \n                    Correo Electrónico\n                    \n                    Este campo es obligatorio.\n                    Correo inválido.\n                \n                \n                    Nueva Contraseña\n                    \n                    Este campo es obligatorio.\n                    Debe tener mínimo 8 caracteres, 1 número, 1 mayúscula y 1 caracter especial.\n                \n                \n                    Confirmar Nueva Contraseña\n                    \n                    Este campo es obligatorio.\n                    Las contraseñas no coinciden.\n                \n                \n                    Cambiar contraseña\n                \n                \n                    Volver al Login\n                \n            \n        \n    \n\n    \n\n    \n                \n                    ./recover-password.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                        Recuperar Contraseña                                                            Correo Electrónico                                        Este campo es obligatorio.                    Correo inválido.                                                    Nueva Contraseña                                        Este campo es obligatorio.                    Debe tener mínimo 8 caracteres, 1 número, 1 mayúscula y 1 caracter especial.                                                    Confirmar Nueva Contraseña                                        Este campo es obligatorio.                    Las contraseñas no coinciden.                                                    Cambiar contraseña                                                    Volver al Login                                        '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CategoryComponent', 'selector': 'app-category'},{'name': 'ConfirmationModalComponent', 'selector': 'app-confirmation-modal'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'GameCardComponent', 'selector': 'app-game-card'},{'name': 'GameDetailModalComponent', 'selector': 'app-game-detail-modal'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MyLibraryComponent', 'selector': 'app-my-library'},{'name': 'RecoverPasswordComponent', 'selector': 'app-recover-password'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'UserProfileComponent', 'selector': 'app-user-profile'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'RecoverPasswordComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/RegisterComponent.html":{"url":"components/RegisterComponent.html","title":"component - RegisterComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  RegisterComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/features/register/register.component.ts\n\n\n\n    \n        Description\n    \n    \n        Componente para el registro de nuevos usuarios.\nPermite a los usuarios crear una nueva cuenta proporcionando sus datos personales\ny una contraseña segura. Incluye validación de formularios reactivos con validadores personalizados.\nExample :\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n                OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-register\n            \n\n\n\n            \n                styleUrls\n                ./register.component.css\n            \n\n\n\n            \n                templateUrl\n                ./register.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                authSubscription\n                            \n                            \n                                birthDay\n                            \n                            \n                                confirmPassword\n                            \n                            \n                                email\n                            \n                            \n                                error\n                            \n                            \n                                fullName\n                            \n                            \n                                message\n                            \n                            \n                                password\n                            \n                            \n                                registerForm\n                            \n                            \n                                registerMessage\n                            \n                            \n                                username\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onSubmit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService, router: Router, fb: FormBuilder)\n                    \n                \n                        \n                            \n                                Defined in src/app/features/register/register.component.ts:36\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        fb\n                                                  \n                                                        \n                                                                    FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/register/register.component.ts:86\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/register/register.component.ts:44\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onSubmit\n                        \n                    \n                \n            \n            \n                \nonSubmit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/register/register.component.ts:67\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        authSubscription\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription\n\n                    \n                \n                    \n                        \n                                Defined in src/app/features/register/register.component.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        birthDay\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/features/register/register.component.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        confirmPassword\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/features/register/register.component.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/features/register/register.component.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        error\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/features/register/register.component.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        fullName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/features/register/register.component.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        message\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/features/register/register.component.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/features/register/register.component.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        registerForm\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FormGroup\n\n                    \n                \n                    \n                        \n                                Defined in src/app/features/register/register.component.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        registerMessage\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/features/register/register.component.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        username\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/features/register/register.component.ts:30\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { AuthService, User } from 'src/app/core/auth/auth.service';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { emptyStringValidator, emailValidator, minAgeValidator, passwordStrengthValidator, passwordsMatchValidator } from '../../utils/validator';\nimport { Subscription } from 'rxjs';\n\n/**\n * @description \n * Componente para el registro de nuevos usuarios.\n * @summary \n * Permite a los usuarios crear una nueva cuenta proporcionando sus datos personales\n * y una contraseña segura. Incluye validación de formularios reactivos con validadores personalizados.\n * @usageNotes\n * ```html\n * \n * ```\n */\n@Component({\n\tselector: 'app-register',\n\ttemplateUrl: './register.component.html',\n\tstyleUrls: ['./register.component.css']\n})\nexport class RegisterComponent implements OnInit, OnDestroy {\n\tregisterMessage: string = '';\n\tregisterForm!: FormGroup;\n\tprivate authSubscription!: Subscription;\n\n\tfullName = '';\n\tusername = '';\n\temail = '';\n\tbirthDay = '';\n\tpassword = '';\n\tconfirmPassword = '';\n\tmessage = '';\n\terror = '';\n\n\tconstructor(\n\t\tprivate readonly authService: AuthService,\n\t\tprivate readonly router: Router,\n\t\tprivate readonly fb: FormBuilder\n\t) { }\n\n\tngOnInit(): void {\n\t\t// Inicializa el formulario reactivo para el registro con validaciones personalizadas\n\t\tthis.registerForm = this.fb.group({\n\t\t\tfullName: ['', [Validators.required, emptyStringValidator()]],\n\t\t\tusername: ['', [Validators.required, emptyStringValidator()]],\n\t\t\temail: ['', [Validators.required, emailValidator()]],\n\t\t\tbirthDay: ['', [Validators.required, minAgeValidator(13)]],\n\t\t\tpassword: ['', [Validators.required, passwordStrengthValidator()]],\n\t\t\tconfirmPassword: ['', [Validators.required]]\n\t\t}, {\n\t\t\tvalidators: passwordsMatchValidator('password', 'confirmPassword')\n\t\t});\n\n\t\t// Si el usuario ya está logueado, redirige al inicio para evitar que se registre de nuevo\n\t\tthis.authSubscription = this.authService.currentUser.subscribe(user => {\n\t\t\tif (user) {\n\t\t\t\tthis.router.navigate(['/inicio']);\n\t\t\t}\n\t\t});\n\t\tconsole.log(this.registerForm.invalid);\n\t\t\n\t}\n\n\tonSubmit(): void {\n\t\tif (this.registerForm.invalid) {\n\t\t\tthis.registerForm.markAllAsTouched();\n\t\t\tthis.registerMessage = 'Error al enviar formulario. Por favor, revisa los campos.';\n\t\t\treturn;\n\t\t}\n\n\t\tconst newUser = this.registerForm.value;\n\t\tconst result = this.authService.register(newUser);\n\n\t\tif (result.success) {\n\t\t\tthis.registerMessage = 'Registro exitoso. Redirigiendo a Login...';\n\t\t\tsetTimeout(() => { this.router.navigate(['/login']); }, 1000);\n\t\t} else {\n\t\t\tthis.registerMessage = `${result.message}`;\n\t\t}\n\n\t}\n\n\tngOnDestroy(): void {\n\t\tif (this.authSubscription) {\n\t\t\tthis.authSubscription.unsubscribe();\n\t\t}\n\t}\n}\n\n    \n\n    \n        \n    \n        Registro\n        \n        \n            \n                Nombre completo\n                \n                Este campo es obligatorio.\n                Debes ingresar tu nombre completo.\n            \n            \n                Usuario\n                \n                Debes ingresar un nombre de usuario.\n                Debes ingresar un nombre de usuario.\n            \n\n            \n                Correo electrónico\n                \n                Este campo es obligatorio.\n                Correo inválido.\n            \n\n            \n                Fecha de nacimiento\n                \n                Este campo es obligatorio.\n                Debes tener al menos 13 años.\n            \n\n            \n                Contraseña\n                \n                Este campo es obligatorio.\n                Debe tener mínimo 8 caracteres, 1 número, 1 mayúscula y 1 caracter especial.\n            \n\n            \n                Confirmar contraseña\n                \n                Este campo es obligatorio.\n                Las contraseñas no coinciden.\n            \n            \n                Enviar\n                Limpiar\n            \n            \n                    ¿Ya tienes una cuenta? Inicia sesión aquí\n                \n        \n    \n\n\n\n    \n\n    \n                \n                    ./register.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            Registro                                            Nombre completo                                Este campo es obligatorio.                Debes ingresar tu nombre completo.                                        Usuario                                Debes ingresar un nombre de usuario.                Debes ingresar un nombre de usuario.                                        Correo electrónico                                Este campo es obligatorio.                Correo inválido.                                        Fecha de nacimiento                                Este campo es obligatorio.                Debes tener al menos 13 años.                                        Contraseña                                Este campo es obligatorio.                Debe tener mínimo 8 caracteres, 1 número, 1 mayúscula y 1 caracter especial.                                        Confirmar contraseña                                Este campo es obligatorio.                Las contraseñas no coinciden.                                        Enviar                Limpiar                                            ¿Ya tienes una cuenta? Inicia sesión aquí                            '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CategoryComponent', 'selector': 'app-category'},{'name': 'ConfirmationModalComponent', 'selector': 'app-confirmation-modal'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'GameCardComponent', 'selector': 'app-game-card'},{'name': 'GameDetailModalComponent', 'selector': 'app-game-detail-modal'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MyLibraryComponent', 'selector': 'app-my-library'},{'name': 'RecoverPasswordComponent', 'selector': 'app-recover-password'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'UserProfileComponent', 'selector': 'app-user-profile'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'RegisterComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/User.html":{"url":"interfaces/User.html","title":"interface - User","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/auth/auth.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            birthDay\n                                        \n                                \n                                \n                                        \n                                            email\n                                        \n                                \n                                \n                                        \n                                            fullName\n                                        \n                                \n                                \n                                        \n                                            password\n                                        \n                                \n                                \n                                        \n                                            role\n                                        \n                                \n                                \n                                        \n                                            username\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        birthDay\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        birthDay:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        fullName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        fullName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        password\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        password:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        role\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        role:     \"admin\" | \"normal\"\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     \"admin\" | \"normal\"\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        username\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        username:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { BehaviorSubject, Observable } from 'rxjs';\n\n// Claves de almacenamiento\nconst AUTH_STORAGE_KEY = 'my_game_library_users';\nconst CURRENT_USER_KEY = 'my_game_library_currentUser';\nconst USER_GAMES_KEY = 'my_game_library_userGames';\n\nexport interface User {\n\tfullName: string;\n\tusername: string;\n\temail: string;\n\tbirthDay: string;\n\tpassword: string;\n\trole: 'admin' | 'normal';\n}\n\n@Injectable({\n\tprovidedIn: 'root'\n})\nexport class AuthService {\n\tprivate readonly currentUserSubject: BehaviorSubject;\n  \tpublic currentUser: Observable;\n\n\tconstructor() {\n\t\tthis.init();\n\t\tconst storedUser = localStorage.getItem(CURRENT_USER_KEY);\n\t\tthis.currentUserSubject = new BehaviorSubject(\n\t\t\tstoredUser ? JSON.parse(storedUser) : null\n\t\t);\n\t\tthis.currentUser = this.currentUserSubject.asObservable();\n\t}\n\n\t// Inicializa algunos usuarios de prueba\n\tpublic init(): void {\n\t\tif (!localStorage.getItem(AUTH_STORAGE_KEY)) {\n\t\t\tlocalStorage.setItem(AUTH_STORAGE_KEY, JSON.stringify([\n\t\t\t\t{\n\t\t\t\t\tfullName: \"Oscar Sanzana\",\n\t\t\t\t\tusername: 'admin',\n\t\t\t\t\temail: \"oscar.sanzana.97@gmail.com\",\n\t\t\t\t\tbirthDay: \"1997-11-17\",\n\t\t\t\t\tpassword: 'Admin123!',\n\t\t\t\t\trole: 'admin'\n\t\t\t\t}\n\t\t\t]));\n\t\t}\n\t}\n\n\t// Obtener usuario actual\n\tpublic get getCurrentUser(): User | null {\n\t\treturn this.currentUserSubject.value;\n\t}\n\n\t// Iniciar sesión\n  \tlogin(username: string, password: string): { success: boolean; message?: string } {\n\t\tconst users: User[] = JSON.parse(localStorage.getItem(AUTH_STORAGE_KEY) ?? '[]');\n\t\tconst user = users.find(u => u.username === username && u.password === password);\n\t\tif (user) {\n            localStorage.setItem(CURRENT_USER_KEY, JSON.stringify(user));\n\t\t\tthis.currentUserSubject.next(user);\n            return { success: true };\n        }\n\n\t\treturn { success: false, message: 'Nombre de usuario o contraseña incorrectos.' };\n\t}\n\n\t// Registrar usuario\n\tregister(newUser: User): { success: boolean; message?: string } {\n        const users = JSON.parse(localStorage.getItem(AUTH_STORAGE_KEY) ?? '[]');\n        if (users.some((u: { username: string; }) => u.username === newUser.username)) {\n            return { success: false, message: 'El nombre de usuario ya existe.' };\n        }\n        users.push(newUser);\n        localStorage.setItem(AUTH_STORAGE_KEY, JSON.stringify(users));\n\n        return { success: true, message: 'Registro exitoso. ¡Ahora puedes iniciar sesión!' };\n    }\n\n\t// Función para actualizar la contrasena de un usuario\n\tupdatePassword (userEmail: string, newPassword: string): { success: boolean; message?: string } {\n        let users = JSON.parse(localStorage.getItem(AUTH_STORAGE_KEY) ?? '[]');\n        const userIndex = users.findIndex((u: { email: string; }) => u.email === userEmail);\n\n        if (userIndex === -1) {\n            return { success: false, message: 'Usuario no encontrado.' };\n        }\n\n        users[userIndex].password = newPassword;\n        localStorage.setItem(AUTH_STORAGE_KEY, JSON.stringify(users));\n\n\t\tconst currentUser = this.getCurrentUser;\n        if (currentUser && currentUser.email === userEmail) {\n            localStorage.setItem(CURRENT_USER_KEY, JSON.stringify(users[userIndex]));\n        }\n\n        return { success: true, message: 'Contraseña actualizada correctamente. Redirigiendo a Login...' };\n    }\n\n\t// Función para actualizar el perfil de un usuario\n\tupdateProfile(originalUsername: string, newUserData: User): { success: boolean; message?: string } {\n\t\tlet users = JSON.parse(localStorage.getItem(AUTH_STORAGE_KEY) ?? '[]');\n        const userIndex = users.findIndex((u: { username: string; }) => u.username === originalUsername);\n\n\t\tif (userIndex === -1) {\n            return { success: false, message: 'Usuario no encontrado.' };\n        }\n\n\t\t// Si el nuevo nombre de usuario es diferente y ya existe\n        if (newUserData.username && newUserData.username !== originalUsername && users.some((u: { username: string; }) => u.username === newUserData.username)) {\n            return { success: false, message: 'El nuevo nombre de usuario ya está en uso.' };\n        }\n\n\t\tusers[userIndex] = { ...users[userIndex], ...newUserData };\n        localStorage.setItem(AUTH_STORAGE_KEY, JSON.stringify(users));\n\t\t\n\t\tconst currentUser = this.getCurrentUser;\n        if (currentUser && currentUser.username === originalUsername) {\n            localStorage.setItem(CURRENT_USER_KEY, JSON.stringify(users[userIndex]));\n        }\n\n\t\treturn { success: true, message: 'Perfil actualizado correctamente.' };\n\t}\n\n\tlogout(): void {\n        localStorage.removeItem(CURRENT_USER_KEY);\n\t\tthis.currentUserSubject.next(null);\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/UserProfileComponent.html":{"url":"components/UserProfileComponent.html","title":"component - UserProfileComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  UserProfileComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/features/user-profile/user-profile.component.ts\n\n\n\n    \n        Description\n    \n    \n        Componente para mostrar y permitir la edición del perfil de usuario.\nEste componente carga los datos del usuario autenticado, los muestra en un formulario\nreactivo y permite al usuario actualizar su nombre completo, nombre de usuario y contraseña.\nIncluye validaciones y mensajes de estado.\nExample :\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n                OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-user-profile\n            \n\n\n\n            \n                styleUrls\n                ./user-profile.component.css\n            \n\n\n\n            \n                templateUrl\n                ./user-profile.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                authSubscription\n                            \n                            \n                                currentUser\n                            \n                            \n                                profileForm\n                            \n                            \n                                profileMessage\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                handleProfileUpdate\n                            \n                            \n                                initProfileForm\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService, fb: FormBuilder, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/features/user-profile/user-profile.component.ts:29\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        fb\n                                                  \n                                                        \n                                                                    FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        handleProfileUpdate\n                        \n                    \n                \n            \n            \n                \nhandleProfileUpdate()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/user-profile/user-profile.component.ts:59\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        initProfileForm\n                        \n                    \n                \n            \n            \n                \ninitProfileForm(user: User)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/user-profile/user-profile.component.ts:48\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                user\n                                            \n                                                            User\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/user-profile/user-profile.component.ts:91\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/user-profile/user-profile.component.ts:37\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        authSubscription\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription\n\n                    \n                \n                    \n                        \n                                Defined in src/app/features/user-profile/user-profile.component.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        currentUser\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/features/user-profile/user-profile.component.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        profileForm\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FormGroup\n\n                    \n                \n                    \n                        \n                                Defined in src/app/features/user-profile/user-profile.component.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        profileMessage\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/features/user-profile/user-profile.component.ts:28\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { Subscription } from 'rxjs';\nimport { AuthService, User } from 'src/app/core/auth/auth.service';\nimport { emailValidator, emptyStringValidator, minAgeValidator, passwordStrengthValidator } from 'src/app/utils/validator';\n\n/**\n * @description \n * Componente para mostrar y permitir la edición del perfil de usuario.\n * @summary \n * Este componente carga los datos del usuario autenticado, los muestra en un formulario\n * reactivo y permite al usuario actualizar su nombre completo, nombre de usuario y contraseña.\n * Incluye validaciones y mensajes de estado.\n * @usageNotes\n * ```html\n * \n * ```\n */\n@Component({\n\tselector: 'app-user-profile',\n\ttemplateUrl: './user-profile.component.html',\n\tstyleUrls: ['./user-profile.component.css']\n})\nexport class UserProfileComponent implements OnInit, OnDestroy {\n\tcurrentUser: User | null = null;\n\tprofileForm!: FormGroup;\n\tprofileMessage: string = '';\n\tprivate authSubscription!: Subscription;\n\n\tconstructor(\n\t\tprivate readonly authService: AuthService,\n\t\tprivate readonly fb: FormBuilder,\n\t\tprivate readonly router: Router\n\t) { }\n\n\tngOnInit(): void {\n\t\t// Suscribe al estado del usuario. Cuando cambie, actualiza el formulario.\n\t\tthis.authSubscription = this.authService.currentUser.subscribe(user => {\n\t\t\tthis.currentUser = user;\n\t\t\tif (user) {\n\t\t\t\tthis.initProfileForm(user);\n\t\t\t}\n\t\t});\n\t}\n\n\t// Inicializa el formulario de perfil con los datos del usuario actual\n\tinitProfileForm(user: User): void {\n\t\tthis.profileForm = this.fb.group({\n\t\t\tfullName: [user.fullName, [Validators.required, emptyStringValidator()]],\n\t\t\tusername: [user.username, [Validators.required, emptyStringValidator()]],\n\t\t\temail: [{ value: user.email, disabled: true }, [Validators.required, emailValidator()]],\n\t\t\tbirthDay: [Date.parse(user.birthDay), [Validators.required, minAgeValidator(13)]],\n\t\t\tpassword: [user.password, [Validators.required, passwordStrengthValidator()]]\n\t\t});\n\t}\n\n\t// Maneja la actualización del perfil\n\thandleProfileUpdate(): void {\n\t\tif (this.profileForm.invalid) {\n\t\t\tthis.profileForm.markAllAsTouched();\n\t\t\tthis.profileMessage = 'Error al actualizar perfil. Por favor, revisa los campos.';\n\t\t\treturn;\n\t\t}\n\n\t\tif (!this.currentUser) {\n\t\t\tthis.profileMessage = 'Error: No hay usuario autenticado.';\n\t\t\treturn;\n\t\t}\n\n\t\tconst updatedData: User = {\n\t\t\tfullName: this.profileForm.get('fullName')?.value,\n\t\t\tusername: this.profileForm.get('username')?.value,\n\t\t\temail: this.currentUser.email,\n\t\t\tbirthDay: this.profileForm.get('birthDay')?.value,\n\t\t\tpassword: this.profileForm.get('password')?.value,\n\t\t\trole: this.currentUser.role\n\t\t};\n\n\t\tconst result = this.authService.updateProfile(this.currentUser.username, updatedData);\n\n\t\tif (result.success) {\n\t\t\tthis.profileMessage = `${result.message}`;\n\t\t\tsetTimeout(() => { this.router.navigate(['/inicio']); }, 1000); // Redirige al inicio\n\t\t} else {\n\t\t\tthis.profileMessage = `${result.message}`;\n\t\t}\n\t}\n\n\t// Desuscribe para evitar fugas de memoria\n\tngOnDestroy(): void {\n\t\tif (this.authSubscription) {\n\t\t\tthis.authSubscription.unsubscribe();\n\t\t}\n\t}\n}\n\n    \n\n    \n        \n    \n        \n            \n                Mi Perfil\n                \n                \n                    \n                        Nombre completo\n                        \n                        Este campo es obligatorio.\n                        Este campo es obligatorio.\n                    \n                    \n                        Nombre de Usuario\n                        \n                        Este campo es obligatorio.\n                        Debes ingresar un nombre de usuario.\n                    \n                    \n                        Correo Electrónico\n                        \n                    \n                    \n                        Fecha de nacimiento\n                        \n                        Este campo es obligatorio.\n                        Debes tener al menos 13 años.\n                    \n                    \n                        Contraseña\n                        \n                        Este campo es obligatorio.\n                        Debe tener mínimo 8 caracteres, 1 número, 1 mayúscula y 1 caracter especial.\n                    \n                    \n                        Rol\n                        \n                    \n                    \n                        Guardar Cambios\n                    \n                \n            \n            \n                \n                    Acceso Requerido\n                    Inicia sesión para ver y editar tu perfil.\n                    Ir a Login\n                \n            \n        \n    \n\n    \n\n    \n                \n                    ./user-profile.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                        Mi Perfil                                                                            Nombre completo                                                Este campo es obligatorio.                        Este campo es obligatorio.                                                                Nombre de Usuario                                                Este campo es obligatorio.                        Debes ingresar un nombre de usuario.                                                                Correo Electrónico                                                                                        Fecha de nacimiento                                                Este campo es obligatorio.                        Debes tener al menos 13 años.                                                                Contraseña                                                Este campo es obligatorio.                        Debe tener mínimo 8 caracteres, 1 número, 1 mayúscula y 1 caracter especial.                                                                Rol                                                                                        Guardar Cambios                                                                                                Acceso Requerido                    Inicia sesión para ver y editar tu perfil.                    Ir a Login                                        '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CategoryComponent', 'selector': 'app-category'},{'name': 'ConfirmationModalComponent', 'selector': 'app-confirmation-modal'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'GameCardComponent', 'selector': 'app-game-card'},{'name': 'GameDetailModalComponent', 'selector': 'app-game-detail-modal'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MyLibraryComponent', 'selector': 'app-my-library'},{'name': 'RecoverPasswordComponent', 'selector': 'app-recover-password'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'UserProfileComponent', 'selector': 'app-user-profile'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'UserProfileComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app/app.component.ts\n            \n            component\n            AppComponent\n            \n                20 %\n                (1/5)\n            \n        \n        \n            \n                \n                src/app/core/api/api.service.ts\n            \n            injectable\n            ApiService\n            \n                63 %\n                (7/11)\n            \n        \n        \n            \n                \n                src/app/core/api/api.service.ts\n            \n            interface\n            RawgAchievementApi\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/core/api/api.service.ts\n            \n            interface\n            RawgAchievementsApiResponse\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/core/api/api.service.ts\n            \n            interface\n            RawgApiResponse\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/core/api/api.service.ts\n            \n            interface\n            RawgGame\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/app/core/auth/auth.service.ts\n            \n            injectable\n            AuthService\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/app/core/auth/auth.service.ts\n            \n            interface\n            User\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                        src/app/core/auth/auth.service.ts\n            \n            variable\n            AUTH_STORAGE_KEY\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app/core/auth/auth.service.ts\n            \n            variable\n            CURRENT_USER_KEY\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app/core/auth/auth.service.ts\n            \n            variable\n            USER_GAMES_KEY\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/core/game/game.service.ts\n            \n            injectable\n            GameService\n            \n                14 %\n                (1/7)\n            \n        \n        \n            \n                \n                src/app/core/game/game.service.ts\n            \n            interface\n            Game\n            \n                9 %\n                (1/11)\n            \n        \n        \n            \n                \n                src/app/core/game/game.service.ts\n            \n            interface\n            GameAchievement\n            \n                14 %\n                (1/7)\n            \n        \n        \n            \n                \n                        src/app/core/game/game.service.ts\n            \n            variable\n            USER_GAMES_KEY\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/features/category/category.component.ts\n            \n            component\n            CategoryComponent\n            \n                3 %\n                (1/27)\n            \n        \n        \n            \n                \n                        src/app/features/category/category.component.ts\n            \n            variable\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/features/home/home.component.ts\n            \n            component\n            HomeComponent\n            \n                11 %\n                (1/9)\n            \n        \n        \n            \n                \n                src/app/features/login/login.component.ts\n            \n            component\n            LoginComponent\n            \n                10 %\n                (1/10)\n            \n        \n        \n            \n                \n                src/app/features/my-library/my-library.component.ts\n            \n            component\n            MyLibraryComponent\n            \n                3 %\n                (1/28)\n            \n        \n        \n            \n                \n                src/app/features/recover-password/recover-password.component.ts\n            \n            component\n            RecoverPasswordComponent\n            \n                12 %\n                (1/8)\n            \n        \n        \n            \n                \n                src/app/features/register/register.component.ts\n            \n            component\n            RegisterComponent\n            \n                6 %\n                (1/16)\n            \n        \n        \n            \n                \n                src/app/features/user-profile/user-profile.component.ts\n            \n            component\n            UserProfileComponent\n            \n                10 %\n                (1/10)\n            \n        \n        \n            \n                \n                        src/app/guards/auth.guard.ts\n            \n            variable\n            authGuard\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/shared/confirmation-modal/confirmation-modal.component.ts\n            \n            component\n            ConfirmationModalComponent\n            \n                7 %\n                (1/13)\n            \n        \n        \n            \n                \n                        src/app/shared/confirmation-modal/confirmation-modal.component.ts\n            \n            variable\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/shared/footer/footer.component.ts\n            \n            component\n            FooterComponent\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/shared/game-card/game-card.component.ts\n            \n            component\n            GameCardComponent\n            \n                10 %\n                (1/10)\n            \n        \n        \n            \n                \n                src/app/shared/game-detail-modal/game-detail-modal.component.ts\n            \n            component\n            GameDetailModalComponent\n            \n                33 %\n                (4/12)\n            \n        \n        \n            \n                \n                        src/app/shared/game-detail-modal/game-detail-modal.component.ts\n            \n            variable\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/shared/header/header.component.ts\n            \n            component\n            HeaderComponent\n            \n                25 %\n                (1/4)\n            \n        \n        \n            \n                \n                        src/app/utils/validator.ts\n            \n            function\n            emailValidator\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app/utils/validator.ts\n            \n            function\n            emptyStringValidator\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app/utils/validator.ts\n            \n            function\n            minAgeValidator\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app/utils/validator.ts\n            \n            function\n            passwordsMatchValidator\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app/utils/validator.ts\n            \n            function\n            passwordStrengthValidator\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ^16.2.0\n        \n            @angular/common : ^16.2.0\n        \n            @angular/compiler : ^16.2.0\n        \n            @angular/core : ^16.2.0\n        \n            @angular/forms : ^16.2.0\n        \n            @angular/material : ^16.2.14\n        \n            @angular/platform-browser : ^16.2.0\n        \n            @angular/platform-browser-dynamic : ^16.2.0\n        \n            @angular/router : ^16.2.0\n        \n            @fortawesome/fontawesome-free : ^6.7.2\n        \n            bootstrap : ^5.3.6\n        \n            rxjs : ~7.8.0\n        \n            tslib : ^2.3.0\n        \n            zone.js : ~0.13.0\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            emailValidator   (src/.../validator.ts)\n                        \n                        \n                            emptyStringValidator   (src/.../validator.ts)\n                        \n                        \n                            minAgeValidator   (src/.../validator.ts)\n                        \n                        \n                            passwordsMatchValidator   (src/.../validator.ts)\n                        \n                        \n                            passwordStrengthValidator   (src/.../validator.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/utils/validator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        emailValidator\n                        \n                    \n                \n            \n            \n                \nemailValidator()\n                \n            \n\n\n\n\n            \n                \n\n                        \n                            Returns :     ValidatorFn\n\n                        \n                            \n                                Una función validadora.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        emptyStringValidator\n                        \n                    \n                \n            \n            \n                \nemptyStringValidator()\n                \n            \n\n\n\n\n            \n                \n\n                        \n                            Returns :     ValidatorFn\n\n                        \n                            \n                                Una función validadora.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        minAgeValidator\n                        \n                    \n                \n            \n            \n                \nminAgeValidator(minAge: number)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                minAge\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    La edad mínima requerida.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     ValidatorFn\n\n                        \n                            \n                                Una función validadora.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        passwordsMatchValidator\n                        \n                    \n                \n            \n            \n                \npasswordsMatchValidator(passwordControlName: string, confirmPasswordControlName: string)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                passwordControlName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    El nombre del control de la contraseña principal.\n\n                                            \n                                        \n                                        \n                                                confirmPasswordControlName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    El nombre del control de la contraseña de confirmación.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     ValidatorFn\n\n                        \n                            \n                                Una función validadora que se aplica a un FormGroup.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        passwordStrengthValidator\n                        \n                    \n                \n            \n            \n                \npasswordStrengthValidator()\n                \n            \n\n\n\n\n            \n                \n\n                        \n                            Returns :     ValidatorFn\n\n                        \n                            \n                                Una función validadora.\n\n                            \n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nReGamesCreativeAngular\nThis project was generated with Angular CLI version 16.2.16.\nDevelopment server\nRun ng serve for a dev server. Navigate to http://localhost:4200/. The application will automatically reload if you change any of the source files.\nCode scaffolding\nRun ng generate component component-name to generate a new component. You can also use ng generate directive|pipe|service|class|guard|interface|enum|module.\nBuild\nRun ng build to build the project. The build artifacts will be stored in the dist/ directory.\nRunning unit tests\nRun ng test to execute the unit tests via Karma.\nRunning end-to-end tests\nRun ng e2e to execute the end-to-end tests via a platform of your choice. To use this command, you need to first add a package that implements end-to-end testing capabilities.\nFurther help\nTo get more help on the Angular CLI use ng help or go check out the Angular CLI Overview and Command Reference page.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_providers\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nCategoryComponent\n\nCategoryComponent\n\nAppModule -->\n\nCategoryComponent->AppModule\n\n\n\n\n\nConfirmationModalComponent\n\nConfirmationModalComponent\n\nAppModule -->\n\nConfirmationModalComponent->AppModule\n\n\n\n\n\nFooterComponent\n\nFooterComponent\n\nAppModule -->\n\nFooterComponent->AppModule\n\n\n\n\n\nGameCardComponent\n\nGameCardComponent\n\nAppModule -->\n\nGameCardComponent->AppModule\n\n\n\n\n\nGameDetailModalComponent\n\nGameDetailModalComponent\n\nAppModule -->\n\nGameDetailModalComponent->AppModule\n\n\n\n\n\nHeaderComponent\n\nHeaderComponent\n\nAppModule -->\n\nHeaderComponent->AppModule\n\n\n\n\n\nHomeComponent\n\nHomeComponent\n\nAppModule -->\n\nHomeComponent->AppModule\n\n\n\n\n\nLoginComponent\n\nLoginComponent\n\nAppModule -->\n\nLoginComponent->AppModule\n\n\n\n\n\nMyLibraryComponent\n\nMyLibraryComponent\n\nAppModule -->\n\nMyLibraryComponent->AppModule\n\n\n\n\n\nRecoverPasswordComponent\n\nRecoverPasswordComponent\n\nAppModule -->\n\nRecoverPasswordComponent->AppModule\n\n\n\n\n\nRegisterComponent\n\nRegisterComponent\n\nAppModule -->\n\nRegisterComponent->AppModule\n\n\n\n\n\nUserProfileComponent\n\nUserProfileComponent\n\nAppModule -->\n\nUserProfileComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nAuthService\n\nAuthService\n\nAppModule -->\n\nAuthService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        2 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    13 Components\n                \n            \n        \n        \n            \n                \n                    \n                    3 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    7 Interfaces\n                \n            \n        \n        \n            \n                \n                    \n                    \n                        9 Routes\n                    \n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.0\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"routes.html":{"url":"routes.html","title":"routes - routes","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Routes\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            AUTH_STORAGE_KEY   (src/.../auth.service.ts)\n                        \n                        \n                            authGuard   (src/.../auth.guard.ts)\n                        \n                        \n                            bootstrap   (src/.../category.component.ts)\n                        \n                        \n                            bootstrap   (src/.../confirmation-modal.component.ts)\n                        \n                        \n                            bootstrap   (src/.../game-detail-modal.component.ts)\n                        \n                        \n                            CURRENT_USER_KEY   (src/.../auth.service.ts)\n                        \n                        \n                            USER_GAMES_KEY   (src/.../auth.service.ts)\n                        \n                        \n                            USER_GAMES_KEY   (src/.../game.service.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/core/auth/auth.service.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        AUTH_STORAGE_KEY\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'my_game_library_users'\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        CURRENT_USER_KEY\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'my_game_library_currentUser'\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        USER_GAMES_KEY\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'my_game_library_userGames'\n                    \n                \n\n\n        \n    \n\n    src/app/guards/auth.guard.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        authGuard\n                        \n                    \n                \n            \n                \n                    \n                        Type :     CanActivateFn\n\n                    \n                \n                \n                    \n                        Default value : (route, state) => {\n\tconst authService = inject(AuthService);\n\tconst router = inject(Router);\n\n\treturn authService.currentUser.pipe(\n\t\tmap(user => {\n\t\t\tif (user) {\n\t\t\t\tif (route.data && route.data['role'] === 'admin' && user.role !== 'admin') {\n\t\t\t\t\talert('Acceso denegado. Solo administradores pueden acceder a esta página.');\n\t\t\t\t\treturn router.createUrlTree(['/inicio']);\n\t\t\t\t}\n\t\t\t\treturn true;\n\t\t\t} else {\n\t\t\t\talert('Debes iniciar sesión para acceder a esta página.');\n\t\t\t\treturn router.createUrlTree(['/login']);\n\t\t\t}\n\t\t})\n\t);\n}\n                    \n                \n\n\n        \n    \n\n    src/app/features/category/category.component.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n\n\n        \n    \n\n    src/app/shared/confirmation-modal/confirmation-modal.component.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n\n\n        \n    \n\n    src/app/shared/game-detail-modal/game-detail-modal.component.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n\n\n        \n    \n\n    src/app/core/game/game.service.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        USER_GAMES_KEY\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'my_game_library_userGames'\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
