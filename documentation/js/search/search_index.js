var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/injectables/ApiService.html",[0,0.907,1,1.239]],["body/injectables/ApiService.html",[0,0.891,1,1.217,2,1.346,3,0.208,4,0.183,5,0.183,6,1.105,7,0.208,8,0.447,9,0.984,10,1.141,11,2.282,12,2.282,13,0.891,14,3.184,15,3.184,16,3.184,17,2.563,18,2.563,19,3.184,20,3.184,21,0.418,22,2.067,23,2.563,24,1.451,25,3.184,26,1.392,27,0.031,28,0.646,29,0.538,30,1.287,31,2.282,32,1.87,33,2.135,34,2.067,35,2.322,36,0.821,37,2.468,38,0.763,39,1.801,40,0.695,41,1.325,42,1.834,43,1.96,44,1.621,45,1.96,46,2.357,47,0.787,48,1.484,49,0.787,50,0.954,51,1.112,52,2.179,53,1.102,54,3.074,55,2.322,56,2.563,57,2.1,58,1.87,59,2.067,60,1.234,61,1.041,62,1.43,63,3.171,64,0.75,65,1.557,66,1.806,67,1.806,68,1.128,69,0.963,70,1.43,71,1.87,72,0.888,73,2.862,74,2.862,75,2.563,76,2.067,77,1.175,78,1.54,79,2.754,80,1.32,81,1.32,82,2.563,83,1.87,84,1.557,85,2.563,86,1.221,87,2.563,88,2.061,89,2.563,90,2.563,91,2.061,92,1.702,93,1.041,94,1.87,95,1.318,96,1.87,97,1.43,98,2.87,99,2.067,100,2.332,101,2.563,102,1.451,103,2.563,104,2.067,105,0.891,106,1.87,107,2.536,108,2.067,109,3.047,110,2.924,111,2.563,112,1.619,113,1.87,114,1.608,115,2.563,116,1.32,117,1.608,118,1.833,119,1.87,120,1.87,121,2.768,122,1.269,123,2.067,124,1.318,125,1.318,126,1.041,127,1.128,128,1.32,129,1.87,130,2.282,131,1.87,132,1.43,133,1.43,134,1.87,135,2.563,136,1.87,137,1.87,138,2.067,139,0.474,140,0.183,141,1.214,142,1.105,143,0.534,144,1.105,145,1.011,146,1.214,147,1.214,148,1.43,149,1.608,150,2.332,151,0.883,152,1.011,153,1.87,154,1.011,155,1.041,156,1.214,157,0.02,158,1.214,159,1.214,160,1.214,161,1.214,162,1.105,163,0.856,164,1.214,165,1.87,166,1.217,167,1.214,168,1.214,169,1.011,170,0.856,171,1.745,172,1.43,173,0.79,174,0.73,175,0.208,176,0.208,177,0.856,178,2.936,179,3.447,180,1.425,181,2.768,182,1.214,183,1.214,184,1.214,185,1.214,186,1.214,187,1.214,188,1.214,189,0.29,190,0.418,191,1.214,192,1.06,193,1.214,194,2.768,195,2.563,196,1.214,197,1.87,198,2.768,199,1.745,200,2.768,201,0.856,202,1.796,203,1.87,204,1.87,205,1.702,206,0.8,207,2.563,208,1.214,209,1.214,210,1.041,211,1.105,212,1.214,213,0.73,214,1.87,215,1.87,216,1.105,217,1.214,218,1.214,219,0.418,220,1.214,221,1.214,222,1.214,223,1.214,224,1.214,225,1.217,226,1.105,227,1.214,228,1.214,229,1.214,230,1.87,231,1.214,232,0.79,233,1.214,234,1.87,235,1.214,236,1.214,237,1.214,238,0.856,239,1.214,240,1.214,241,0.929,242,0.676,243,1.214,244,0.929,245,0.929,246,0.929,247,1.214,248,1.214,249,1.214,250,1.214,251,1.214,252,1.214,253,1.214,254,1.214,255,1.214,256,1.214,257,1.214,258,1.214,259,0.015]],["title/components/AppComponent.html",[260,0.176,261,0.713]],["body/components/AppComponent.html",[3,0.385,4,0.338,5,0.338,7,0.385,8,0.692,10,0.842,13,1.379,21,0.774,24,1.49,26,1.07,27,0.031,28,0.618,29,0.548,30,0.989,36,0.772,38,0.712,47,0.692,49,0.692,50,0.998,53,0.71,64,0.623,72,0.537,80,1.491,81,1.491,95,2.041,102,1.275,112,1.491,139,0.496,140,0.338,149,2.041,155,1.883,157,0.023,174,1.742,175,0.385,176,0.385,177,1.584,189,0.808,190,0.998,219,1.166,232,2.085,259,0.023,260,0.296,261,1.268,262,1.379,263,1.157,264,1.157,265,1.157,266,1.157,267,3.205,268,4.93,269,4.212,270,1.884,271,4.93,272,2.896,273,4.93,274,4.13,275,4.827,276,4.93,277,4.93,278,4.13,279,4.93,280,2.411,281,4.93,282,4.13,283,4.93,284,4.93,285,2.896,286,3.211,287,1.177,288,1.07,289,1.884,290,2.451,291,1.157,292,1.988,293,1.839,294,1.491,295,5.455,296,1.491,297,4.93,298,2.668,299,2.589,300,1.719,301,1.343,302,4.93,303,3.826,304,1.177,305,1.207,306,4.13,307,3.826,308,3.205,309,0.913,310,0.913,311,1.65,312,2.045,313,2.045,314,0.989,315,1.491,316,1.157,317,1.742,318,1.157,319,1.157,320,0.774,321,1.157,322,0.842,323,1.157,324,1.491,325,0.842,326,1.157,327,0.842,328,1.157,329,0.842,330,0.913,331,0.842,332,1.157,333,0.774,334,1.157,335,0.774,336,1.157,337,0.774,338,1.157,339,0.774,340,1.07,341,1.157,342,0.774,343,1.157,344,0.774,345,1.07,346,1.157,347,1.157]],["title/modules/AppModule.html",[348,2.11,349,2.11]],["body/modules/AppModule.html",[3,0.391,4,0.343,5,0.343,27,0.031,139,0.669,140,0.343,142,2.077,157,0.023,175,0.391,176,0.391,259,0.023,261,1.431,293,1.087,301,1.349,308,3.256,314,1.005,320,1.241,322,1.349,325,1.349,327,1.349,329,1.349,330,1.189,331,1.349,333,1.241,335,1.241,337,1.241,339,1.241,342,1.241,344,1.241,348,2.531,349,4.414,350,2.283,351,2.531,352,4.604,353,2.469,354,4.604,355,2.841,356,3.256,357,3.256,358,3.256,359,3.256,360,3.256,361,3.601,362,4.172,363,3.256,364,2.841,365,3.886,366,4.172,367,4.172,368,4.98,369,3.256,370,2.841,371,4.98,372,3.886,373,3.886,374,3.886,375,3.886,376,4.98,377,2.841,378,3.886,379,2.077,380,3.64,381,3.256,382,3.256,383,3.256,384,2.531,385,3.256,386,3.256,387,3.256,388,3.256,389,2.531,390,3.256,391,3.256,392,2.531,393,3.256,394,4.98,395,4.98,396,2.077,397,3.886,398,2.283]],["title/modules/AppRoutingModule.html",[348,2.11,361,1.904]],["body/modules/AppRoutingModule.html",[3,0.447,4,0.393,5,0.393,27,0.031,40,0.563,139,0.66,140,0.393,157,0.025,175,0.447,176,0.447,190,0.901,206,0.756,259,0.025,260,0.348,320,1.097,333,1.097,335,1.097,337,1.097,339,1.097,340,1.245,342,1.097,344,1.097,345,1.245,350,2.614,355,3.253,361,3.184,366,3.728,367,4.541,381,3.728,382,3.728,383,3.728,384,2.898,385,3.728,386,3.728,387,3.728,388,3.728,389,2.898,390,3.728,391,3.728,392,2.898,393,3.728,399,4.45,400,4.45,401,5.42,402,3.806,403,1.999,404,4.272,405,4.45,406,6.526,407,5.42,408,2.975,409,4.45,410,4.45,411,4.45,412,5.42,413,1.999,414,3.253,415,2.176,416,4.45,417,4.45,418,4.45,419,4.45,420,4.45,421,4.45]],["title/injectables/AuthService.html",[0,0.907,301,0.713]],["body/injectables/AuthService.html",[0,1.177,2,1.968,3,0.304,4,0.267,5,0.267,7,0.304,8,0.59,9,0.822,10,1.066,13,1.177,21,0.98,24,1.587,26,1.465,27,0.031,28,0.593,29,0.617,30,1.354,36,0.382,38,0.676,40,0.532,41,0.852,49,0.735,51,0.612,53,1.059,54,2.368,68,0.782,69,0.914,72,0.929,86,0.846,118,1.946,122,1.712,125,1.743,126,1.583,139,0.423,140,0.267,143,0.782,151,0.612,155,1.376,157,0.019,173,1.155,174,1.068,175,0.423,176,0.304,180,0.914,189,0.424,192,1.14,206,1.053,210,1.712,213,1.068,259,0.019,287,1.465,298,2.861,301,0.926,304,1.25,305,1.255,313,1.615,413,2.176,414,3.077,415,2.788,422,1.968,423,3.809,424,4.057,425,4.388,426,3.828,427,4.057,428,4.209,429,4.209,430,4.057,431,4.209,432,3.022,433,3.526,434,3.022,435,3.126,436,3.41,437,3.022,438,3.526,439,3.022,440,2.532,441,3.022,442,3.828,443,3.022,444,4.388,445,3.526,446,4.388,447,3.022,448,4.388,449,4.388,450,3.022,451,3.022,452,3.022,453,2.532,454,1.776,455,1.968,456,2.209,457,1.968,458,2.209,459,1.478,460,1.615,461,2.741,462,2.845,463,2.741,464,3.077,465,3.154,466,2.532,467,2.532,468,3.526,469,2.532,470,2.532,471,2.532,472,2.532,473,1.478,474,2.532,475,1.251,476,2.532,477,2.532,478,4.388,479,2.532,480,2.532,481,2.532,482,2.532,483,2.532,484,2.532,485,2.532,486,2.209,487,1.478,488,1.968,489,2.532,490,2.058,491,1.609,492,3.703,493,2.391,494,4.388,495,4.388,496,2.532,497,4.388,498,2.532,499,4.057,500,2.532,501,2.532,502,2.002,503,2.058,504,2.532,505,2.532,506,3.526,507,2.532,508,2.473,509,2.532,510,4.057,511,1.968,512,1.968,513,2.532,514,2.209,515,1.891,516,2.532,517,4.388,518,3.526,519,2.532,520,2.473,521,3.526,522,2.532,523,3.526,524,2.532,525,3.526,526,2.532,527,2.25,528,1.968,529,2.741,530,2.058,531,2.532,532,4.057,533,2.532,534,3.526,535,2.532,536,2.532,537,2.532,538,2.532]],["title/components/CategoryComponent.html",[260,0.176,320,0.656]],["body/components/CategoryComponent.html",[1,1.646,3,0.203,4,0.178,5,0.178,7,0.203,8,0.438,9,0.991,10,0.948,13,0.874,21,0.632,24,1.638,26,1.303,27,0.031,28,0.582,29,0.624,30,1.205,36,0.65,37,1.403,38,0.686,39,1.884,40,0.738,41,0.774,42,1.611,44,1.205,47,0.438,49,0.721,50,0.997,51,0.997,52,1.646,53,1.013,60,1.248,61,1.611,62,1.403,64,0.785,72,0.882,73,2.747,74,2.747,77,0.945,78,1.854,79,2.45,80,1.765,81,1.765,84,2.106,86,1.205,88,1.783,91,1.783,102,0.808,105,1.07,116,1.156,124,1.583,128,1.302,139,0.517,140,0.178,143,0.521,145,0.986,154,2.106,155,1.736,157,0.014,162,1.669,166,1.194,175,0.203,176,0.203,180,0.945,189,0.808,190,1.04,192,0.915,199,1.935,201,2.04,202,1.821,206,0.991,216,2.044,219,0.872,225,1.965,238,1.293,242,1.021,259,0.014,260,0.208,261,0.444,262,0.874,263,0.61,264,0.61,265,0.61,266,0.61,270,1.194,287,0.746,288,0.564,289,1.194,290,1.718,291,0.61,292,1.803,293,1.668,294,0.945,296,0.945,298,2.278,299,1.935,301,1.131,304,1.436,305,0.943,309,0.481,310,0.481,311,1.156,312,1.077,313,1.077,314,0.521,315,0.945,316,0.61,317,1.302,318,0.61,319,0.61,320,0.872,321,0.61,322,0.444,323,0.61,324,0.945,325,0.444,326,0.61,327,0.444,328,0.61,329,0.948,330,0.913,331,0.444,332,0.61,333,0.408,334,0.61,335,0.408,336,0.61,337,0.408,338,0.61,339,0.408,340,0.564,341,0.61,342,0.408,343,0.61,344,0.408,345,0.564,346,0.61,347,0.61,353,0.906,379,1.077,380,1.474,403,0.906,487,1.527,490,0.986,491,0.771,493,1.781,539,1.474,540,1.669,541,3.148,542,3.123,543,4.129,544,3.123,545,1.293,546,3.123,547,2.034,548,3.123,549,2.53,550,1.783,551,1.835,552,2.49,553,2.044,554,3.823,555,3.823,556,3.123,557,3.823,558,2.044,559,3.823,560,3.823,561,3.903,562,4.659,563,3.203,564,3.203,565,3.823,566,3.203,567,3.203,568,3.823,569,3.823,570,3.123,571,4.306,572,4.306,573,3.123,574,3.123,575,2.106,576,2.617,577,4.306,578,2.016,579,4.306,580,2.309,581,2.795,582,3.123,583,2.617,584,3.123,585,2.016,586,3.123,587,2.016,588,2.016,589,3.123,590,2.016,591,3.123,592,2.016,593,2.016,594,2.016,595,2.617,596,2.016,597,2.016,598,2.016,599,2.278,600,2.016,601,2.016,602,2.016,603,2.016,604,2.016,605,2.016,606,2.016,607,2.016,608,1.313,609,2.617,610,2.016,611,2.016,612,2.016,613,2.016,614,2.016,615,2.016,616,1.313,617,4.928,618,2.016,619,1.474,620,0.835,621,1.313,622,1.077,623,1.474,624,1.689,625,1.669,626,3.123,627,2.016,628,2.016,629,3.823,630,2.016,631,2.016,632,2.016,633,2.016,634,2.016,635,3.123,636,3.123,637,3.123,638,3.823,639,4.306,640,4.659,641,4.659,642,3.823,643,3.986,644,3.757,645,1.669,646,3.203,647,1.669,648,2.034,649,3.123,650,3.123,651,3.123,652,2.016,653,2.016,654,2.016,655,2.617,656,2.016,657,2.016,658,2.016,659,3.123,660,2.016,661,2.016,662,2.016,663,1.077,664,1.474,665,3.123,666,3.123,667,2.016,668,2.016,669,2.016,670,2.016,671,2.016,672,2.016,673,2.016,674,2.016,675,3.123,676,3.123,677,2.016,678,2.016,679,3.203,680,2.016,681,2.016,682,2.016,683,1.689,684,2.016,685,1.689,686,2.016,687,1.689,688,1.689,689,3.123,690,2.016,691,3.123,692,2.016,693,1.689,694,2.016,695,2.617,696,1.689,697,1.689,698,3.123,699,2.016,700,3.123,701,2.016,702,1.313,703,1.474,704,1.313,705,1.689,706,1.689,707,1.184,708,1.689,709,1.689,710,2.016,711,3.123,712,1.835,713,3.123,714,3.123,715,2.016,716,2.016,717,1.077,718,2.016,719,1.689,720,2.016,721,1.689,722,1.835,723,2.016,724,2.016,725,1.689,726,1.184,727,2.617,728,2.617,729,2.617,730,1.184,731,2.016,732,1.077,733,2.617,734,1.527,735,2.617,736,2.617,737,2.617]],["title/components/ConfirmationModalComponent.html",[260,0.176,322,0.713]],["body/components/ConfirmationModalComponent.html",[3,0.315,4,0.277,5,0.277,7,0.315,8,0.606,9,0.839,13,1.208,21,1,24,1.628,27,0.031,28,0.489,29,0.58,36,0.706,38,0.713,40,0.625,41,1.077,47,0.606,49,0.904,50,1,51,1,53,1.036,64,0.546,72,0.809,80,1.494,81,1.494,86,1.382,124,1.788,125,1.299,127,0.811,128,1.688,139,0.315,140,0.277,157,0.02,175,0.315,176,0.315,180,1.306,189,0.606,206,0.533,219,0.874,232,2.133,259,0.02,260,0.268,261,0.69,262,1.208,263,0.949,264,0.949,265,0.949,266,0.949,287,1.27,288,0.878,289,1.651,291,0.949,292,1.94,293,1.794,294,1.306,296,1.306,304,1.476,305,0.635,309,0.749,310,0.749,311,1.494,314,0.811,315,1.306,316,0.949,317,1.609,318,0.949,319,0.949,320,0.635,321,0.949,322,1.171,323,1.821,324,1.306,325,0.69,326,0.949,327,0.69,328,0.949,329,0.69,330,0.749,331,0.69,332,0.949,333,0.635,334,0.949,335,0.635,336,0.949,337,0.635,338,0.949,339,0.635,340,0.878,341,0.949,342,0.635,343,0.949,344,0.635,345,0.878,346,0.949,347,0.949,353,2.219,398,3.725,493,2.133,540,2.309,545,1.788,552,3.978,608,2.043,616,2.043,623,2.293,703,3.157,704,3.634,705,3.619,706,3.619,738,4.129,739,2.043,740,4.319,741,4.216,742,4.319,743,4.319,744,2.538,745,4.319,746,4.319,747,5.581,748,3.619,749,4.319,750,4.319,751,3.127,752,4.94,753,4.138,754,3.619,755,4.138,756,4.138,757,4.459,758,4.459,759,5.322,760,5.322,761,4.459,762,3.157,763,5.581,764,3.157,765,4.138,766,4.319,767,3.217,768,3.137,769,3.619,770,3.619,771,3.137,772,3.137,773,3.611,774,3.137,775,3.137,776,3.137,777,3.137,778,3.137,779,3.137,780,4.138,781,4.319,782,3.137,783,3.89,784,3.157,785,3.137,786,3.137,787,2.629,788,2.629,789,2.293,790,3.137,791,3.137,792,2.629,793,4.138,794,2.629,795,2.629,796,3.619,797,3.137,798,2.629,799,4.138,800,2.629,801,2.629,802,1.534,803,2.629,804,2.629,805,4.319,806,3.137,807,4.319,808,4.94,809,2.293,810,3.137]],["title/components/FooterComponent.html",[260,0.176,325,0.713]],["body/components/FooterComponent.html",[3,0.434,4,0.381,5,0.381,27,0.031,28,0.602,36,0.673,38,0.713,40,0.673,47,0.746,49,0.746,60,1.171,64,0.673,95,2.203,112,1.609,139,0.434,140,0.381,157,0.024,175,0.434,176,0.434,219,1.077,259,0.024,260,0.313,261,0.95,262,1.488,263,1.306,264,1.306,265,1.306,266,1.306,282,4.457,288,1.208,291,1.306,292,2.015,293,1.863,294,1.609,296,1.609,305,0.874,309,1.031,310,1.031,311,1.744,314,1.116,315,1.609,316,1.306,317,1.82,318,1.306,319,1.306,320,0.874,321,1.306,322,0.95,323,1.306,324,1.609,325,1.325,326,1.306,327,0.95,328,1.306,329,0.95,330,1.031,331,0.95,332,1.306,333,0.874,334,1.306,335,0.874,336,1.306,337,0.874,338,1.306,339,0.874,340,1.208,341,1.306,342,0.874,343,1.306,344,0.874,345,1.208,346,1.306,347,1.306,734,2.602,811,3.617,812,5.32,813,4.457,814,5.32,815,5.32,816,5.767,817,5.32,818,4.317,819,5.32,820,5.32,821,5.32,822,5.32]],["title/interfaces/Game.html",[64,0.41,151,0.656]],["body/interfaces/Game.html",[0,1.046,3,0.257,4,0.226,5,0.226,7,0.257,8,0.524,9,0.435,21,0.518,27,0.031,28,0.55,29,0.595,33,2.119,35,1.059,36,0.804,38,0.723,39,1.688,40,0.737,41,1.267,42,2.069,43,1.984,44,1.046,46,2.319,47,0.873,48,1.428,49,0.899,50,1.25,51,1.179,52,0.904,55,1.059,57,2.129,60,1.257,61,1.222,64,0.787,66,1.547,67,1.059,68,1.256,69,1.13,70,1.15,72,0.928,78,1.867,86,0.716,88,1.059,91,1.059,93,0.836,102,0.662,105,1.235,112,1.13,114,2.306,116,0.774,117,2.138,118,1.906,122,1.961,126,1.222,127,1.336,132,1.984,139,0.257,140,0.226,148,1.15,149,1.059,151,0.983,157,0.017,166,2.062,170,1.059,171,2.659,172,2.182,173,0.978,174,0.904,175,0.444,176,0.376,177,1.059,189,0.781,190,0.756,192,0.82,201,1.547,206,0.97,210,0.836,225,2.062,232,2.062,238,2.233,241,2.424,242,1.587,244,1.15,245,2.424,246,2.424,259,0.017,270,1.428,272,2.196,287,1.462,304,1.054,309,0.892,310,0.611,454,1.503,459,1.251,460,1.367,475,1.059,487,2.159,492,2.594,493,1.688,502,0.978,508,1.503,515,1.679,527,1.367,530,1.251,547,1.666,549,2.853,550,2.483,580,2.321,645,2.36,663,1.367,717,1.367,726,2.196,730,3.034,734,1.828,744,2.594,823,1.547,824,1.503,825,3.228,826,2.732,827,2.594,828,1.503,829,1.666,830,1.87,831,2.732,832,1.87,833,2.434,834,1.87,835,2.732,836,4.577,837,2.732,838,1.87,839,3.162,840,1.666,841,1.666,842,1.87,843,1.87,844,1.87,845,1.87,846,1.87,847,1.666,848,1.367,849,2.196,850,2.732,851,1.503,852,1.87,853,1.87,854,1.666,855,1.87,856,1.87,857,1.87,858,1.87,859,1.87,860,1.87,861,1.666,862,1.87,863,1.87,864,1.87,865,1.666,866,1.87,867,3.793,868,1.87,869,1.87,870,3.228,871,1.87,872,2.434,873,2.732,874,2.732,875,2.732,876,1.503,877,1.87,878,1.87,879,1.87,880,1.87,881,1.87,882,1.87,883,3.228,884,2.732,885,1.87,886,1.87,887,1.87,888,2.732,889,1.87,890,2.732,891,1.503,892,2.732,893,3.55,894,1.87,895,1.87,896,1.87,897,1.87,898,1.87,899,1.87,900,2.732,901,1.87,902,1.87,903,2.732,904,2.732,905,1.87,906,1.87,907,1.87,908,1.87,909,1.87,910,1.87,911,1.87,912,1.87,913,1.87,914,3.228,915,1.87,916,1.87,917,1.503,918,1.87,919,1.87,920,2.732,921,1.87,922,1.87,923,1.87,924,1.87,925,1.87]],["title/interfaces/GameAchievement.html",[57,1.239,151,0.656]],["body/interfaces/GameAchievement.html",[0,1.06,3,0.262,4,0.23,5,0.23,7,0.262,8,0.532,9,0.443,21,0.528,27,0.031,28,0.634,29,0.546,33,2.068,35,1.08,36,0.802,38,0.727,39,1.448,40,0.74,41,1.278,42,2.074,43,2.006,44,1.06,46,2.327,47,0.875,48,1.448,49,0.901,50,1.254,51,1.162,52,0.921,55,1.08,57,2.075,60,1.263,61,0.852,64,0.784,66,1.569,67,1.08,68,1.267,69,1.146,70,1.172,72,0.927,78,1.876,86,0.73,88,1.08,91,1.08,93,0.852,102,0.674,105,1.249,112,0.789,114,2.377,116,0.789,117,2.377,118,1.919,122,1.913,126,1.239,127,1.346,132,2.006,139,0.262,140,0.23,148,1.172,149,1.08,151,0.992,157,0.017,166,1.706,170,1.569,171,2.671,172,2.518,173,0.997,174,0.921,175,0.449,176,0.381,177,1.08,189,0.762,190,0.767,192,0.829,201,1.569,206,0.975,210,0.852,225,1.706,232,1.706,238,1.848,241,2.006,242,1.602,244,1.172,245,2.006,246,2.006,259,0.017,270,1.448,272,2.226,287,1.467,304,1.066,309,0.905,310,0.623,454,1.532,459,1.275,460,1.394,475,1.08,487,2.183,492,2.623,493,1.706,502,0.997,508,1.532,515,1.703,527,1.394,530,1.275,547,1.698,549,2.879,550,2.493,580,2.338,645,2.386,663,1.394,717,1.394,726,2.226,730,3.058,734,1.853,744,2.623,823,1.569,824,1.532,825,3.263,826,1.906,827,2.623,828,1.532,829,1.698,830,1.906,831,2.77,832,1.906,833,2.468,834,1.906,835,2.77,836,4.59,837,2.77,838,1.906,839,3.191,840,1.698,841,1.698,842,1.906,843,1.906,844,1.906,845,1.906,846,1.906,847,1.698,848,1.394,849,2.226,850,2.77,851,1.532,852,1.906,853,1.906,854,1.698,855,1.906,856,1.906,857,1.906,858,1.906,859,1.906,860,1.906,861,1.698,862,1.906,863,1.906,864,1.906,865,1.698,866,1.906,867,3.811,868,1.906,869,1.906,870,3.263,871,1.906,872,2.468,873,2.77,874,2.77,875,2.77,876,1.532,877,1.906,878,1.906,879,1.906,880,1.906,881,1.906,882,1.906,883,3.263,884,2.77,885,1.906,886,1.906,887,1.906,888,2.77,889,1.906,890,2.77,891,1.532,892,2.77,893,3.582,894,1.906,895,1.906,896,1.906,897,1.906,898,1.906,899,1.906,900,2.77,901,1.906,902,1.906,903,2.77,904,2.77,905,1.906,906,1.906,907,1.906,908,1.906,909,1.906,910,1.906,911,1.906,912,1.906,913,1.906,914,3.263,915,1.906,916,1.906,917,1.532,918,1.906,919,1.906,920,2.77,921,1.906,922,1.906,923,1.906,924,1.906,925,1.906]],["title/components/GameCardComponent.html",[260,0.176,327,0.713]],["body/components/GameCardComponent.html",[3,0.325,4,0.286,5,0.286,7,0.325,21,1.016,24,1.59,27,0.031,28,0.5,29,0.61,36,0.682,38,0.687,40,0.558,42,1.903,47,0.619,50,0.893,51,1.179,61,1.762,64,0.814,68,1.141,77,1.334,80,0.979,81,0.979,105,1.234,118,1.559,122,1.442,127,1.141,128,1.334,139,0.444,140,0.286,157,0.02,170,1.827,175,0.325,176,0.325,180,1.761,189,0.756,190,0.893,219,1.091,259,0.02,260,0.272,261,0.712,262,1.234,263,0.979,264,0.979,265,0.979,266,0.979,288,0.905,291,0.979,292,1.948,293,1.802,294,1.334,296,1.334,305,0.655,309,0.773,310,0.773,311,1.518,314,0.837,315,1.334,316,0.979,317,1.631,318,0.979,319,0.979,320,0.655,321,0.979,322,0.712,323,0.979,324,1.334,325,0.712,326,0.979,327,1.186,328,0.979,329,0.712,330,0.773,331,0.712,332,0.979,333,0.655,334,0.979,335,0.655,336,0.979,337,0.655,338,0.979,339,0.655,340,0.905,341,0.979,342,0.655,343,0.979,344,0.655,345,0.905,346,0.979,347,0.979,377,4.547,540,2.882,549,3.168,550,2.41,551,3.168,621,2.108,622,3.324,663,2.358,664,3.225,707,2.592,717,2.358,751,2.592,762,3.225,764,3.225,773,4.657,783,3.67,784,4.356,802,2.158,813,3.697,829,2.873,848,2.882,849,3.168,851,2.592,891,2.592,926,2.712,927,4.412,928,4.412,929,4.412,930,3.225,931,4.517,932,4.412,933,4.412,934,4.412,935,4.412,936,3.697,937,4.412,938,4.412,939,3.697,940,4.412,941,5.02,942,4.412,943,5.02,944,5.02,945,4.206,946,5.02,947,5.02,948,5.02,949,5.02,950,4.412,951,3.237,952,3.237,953,3.237,954,3.237,955,3.237,956,3.237,957,3.237,958,3.697,959,4.412,960,4.517,961,4.412,962,3.697,963,3.697,964,4.517,965,3.697,966,3.697,967,4.412,968,4.517,969,4.412]],["title/components/GameDetailModalComponent.html",[260,0.176,329,0.713]],["body/components/GameDetailModalComponent.html",[3,0.234,4,0.205,5,0.205,7,0.234,8,0.488,9,0.843,10,0.766,13,0.974,21,0.705,24,1.519,26,0.974,27,0.031,28,0.525,29,0.558,30,0.9,33,1.963,35,0.963,36,0.628,37,1.564,38,0.731,39,2.299,40,0.743,41,1.171,42,2.001,46,1.595,47,0.824,48,1.772,49,0.924,50,1.307,51,1.093,53,1.031,55,1.441,60,1.189,61,1.766,62,1.564,63,1.861,64,0.78,66,1.441,68,0.9,69,1.053,72,0.488,77,1.053,78,1.364,80,1.262,81,1.262,97,1.045,100,1.861,102,1.284,114,2.395,117,0.963,127,1.198,128,1.576,139,0.42,140,0.205,155,1.622,157,0.016,175,0.234,176,0.234,178,2.653,180,1.053,189,0.797,190,0.845,192,0.432,202,1.622,206,0.843,219,0.845,242,1.138,259,0.016,260,0.227,261,0.512,262,0.974,263,0.703,264,0.703,265,1.053,266,0.703,270,1.331,285,3.263,286,2.267,287,1.29,288,0.65,291,0.703,292,1.851,293,1.713,294,1.053,296,1.053,298,1.703,301,1.222,304,1.42,305,0.471,309,0.555,310,0.555,311,1.262,314,0.601,315,1.053,316,0.703,317,1.402,318,0.703,319,0.703,320,0.471,321,0.703,322,0.512,323,0.703,324,1.053,325,0.512,326,0.703,327,0.512,328,0.703,329,1.02,330,1.558,331,0.512,332,0.703,333,0.471,334,0.703,335,0.471,336,0.703,337,0.471,338,0.703,339,0.471,340,0.65,341,0.703,342,0.471,343,0.703,344,0.471,345,0.65,346,0.703,347,0.703,353,1.875,379,3.179,423,3.393,473,1.703,488,2.267,490,1.137,491,0.889,493,1.897,530,1.137,540,2.231,545,1.441,550,1.441,552,3.873,580,2.552,608,1.514,616,1.514,620,0.963,621,1.514,622,3.179,623,1.7,663,2.477,664,3.388,702,1.514,703,3.051,704,3.018,708,1.948,717,1.861,721,2.917,722,2.046,730,2.723,739,1.514,744,2.046,748,1.948,753,3.497,754,2.917,755,3.497,756,3.497,757,3.883,758,3.883,761,3.883,762,2.545,764,2.545,773,3.051,780,3.497,783,2.545,784,2.545,787,2.917,788,1.948,789,1.7,792,1.948,793,3.497,794,1.948,795,2.917,796,3.497,798,1.948,799,4.159,800,1.948,801,1.948,802,2.041,803,1.948,804,1.948,809,2.545,827,2.916,828,2.046,839,1.514,840,1.514,841,1.514,847,2.267,848,2.477,865,2.267,867,1.514,876,2.452,891,2.046,917,2.723,958,2.917,962,2.917,963,2.917,970,3.482,971,3.482,972,4.174,973,2.325,974,3.482,975,3.482,976,3.482,977,2.917,978,2.325,979,2.325,980,2.325,981,2.325,982,3.482,983,2.917,984,3.482,985,4.964,986,5.555,987,2.325,988,2.917,989,4.174,990,3.482,991,4.174,992,4.174,993,2.325,994,2.325,995,2.325,996,3.482,997,2.325,998,2.325,999,2.325,1000,2.325,1001,2.325,1002,2.325,1003,2.325,1004,2.325,1005,2.325,1006,2.325,1007,2.325,1008,1.948,1009,1.366,1010,2.325,1011,4.174,1012,4.174,1013,4.174,1014,2.325,1015,2.917,1016,2.325,1017,2.325,1018,2.325,1019,2.325,1020,2.325,1021,2.325,1022,3.482,1023,3.482,1024,3.482,1025,3.482,1026,2.917]],["title/injectables/GameService.html",[0,0.907,580,1.456]],["body/injectables/GameService.html",[0,1.004,2,1.576,3,0.243,4,0.214,5,0.214,7,0.243,9,0.726,13,1.004,21,0.865,24,1.367,26,1.412,27,0.031,28,0.65,29,0.532,30,1.305,33,2.029,35,1.002,36,0.808,38,0.734,39,1.371,40,0.749,41,1.264,42,2.063,43,2.124,44,1.004,46,2.194,47,0.841,48,1.807,49,0.896,50,1.238,51,1.182,52,0.855,53,0.937,55,1.002,57,1.93,60,1.304,61,0.791,64,0.798,66,1.485,67,1.002,68,1.222,69,1.085,70,1.087,72,0.924,78,1.937,86,1.004,88,1.002,91,1.002,93,0.791,102,0.928,105,1.323,112,0.732,114,2.266,116,0.732,117,2.09,118,1.868,122,1.789,126,1.173,127,1.415,132,1.921,139,0.243,140,0.214,148,1.087,149,1.002,151,0.957,157,0.016,166,1.634,170,1.002,171,2.459,172,2.124,173,0.925,174,0.855,175,0.43,176,0.361,177,1.485,189,0.742,190,0.726,192,0.794,201,1.957,206,0.975,210,0.791,225,1.634,232,1.634,238,1.77,241,1.921,242,1.545,244,1.087,245,1.921,246,1.921,259,0.016,270,1.634,272,2.108,287,1.46,288,0.677,304,1.262,309,0.856,310,0.578,435,2.698,436,1.576,454,2.108,459,1.184,460,1.293,475,1.485,487,2.312,492,2.511,493,1.634,502,0.925,508,1.422,515,1.612,527,1.293,530,1.184,547,1.576,549,2.966,550,2.532,580,2.525,645,2.698,663,1.293,717,1.293,726,2.108,730,2.777,734,1.754,744,2.511,823,1.002,824,1.422,825,2.622,826,1.769,827,2.966,828,1.422,829,1.576,830,1.769,831,3.125,832,1.769,833,2.336,834,1.769,835,3.125,836,4.537,837,2.622,838,1.769,839,3.079,840,1.576,841,1.576,842,1.769,843,1.769,844,1.769,845,1.769,846,1.769,847,1.576,848,1.293,849,2.108,850,2.622,851,1.422,852,1.769,853,1.769,854,2.336,855,2.622,856,2.622,857,1.769,858,2.622,859,2.622,860,2.622,861,2.336,862,2.622,863,2.622,864,2.622,865,2.336,866,1.769,867,3.804,868,2.622,869,2.622,870,3.456,871,2.622,872,2.336,873,2.622,874,2.622,875,2.622,876,1.422,877,2.622,878,1.769,879,1.769,880,2.622,881,3.125,882,3.125,883,3.125,884,2.622,885,1.769,886,1.769,887,1.769,888,2.622,889,1.769,890,2.622,891,1.422,892,2.622,893,3.456,894,1.769,895,1.769,896,1.769,897,1.769,898,1.769,899,1.769,900,2.622,901,1.769,902,1.769,903,2.622,904,2.622,905,1.769,906,1.769,907,1.769,908,1.769,909,1.769,910,1.769,911,1.769,912,1.769,913,1.769,914,3.125,915,1.769,916,1.769,917,1.422,918,1.769,919,2.622,920,3.456,921,1.769,922,1.769,923,1.769,924,2.622,925,1.769,945,3.006,1027,3.587,1028,3.587,1029,3.587,1030,3.587,1031,2.42,1032,2.42,1033,2.42,1034,2.42,1035,2.42,1036,2.42]],["title/components/HeaderComponent.html",[260,0.176,331,0.713]],["body/components/HeaderComponent.html",[3,0.379,4,0.333,5,0.333,7,0.379,8,0.685,9,0.641,10,0.831,13,1.367,21,0.764,24,1.401,26,1.056,27,0.031,28,0.614,29,0.491,30,0.976,36,0.769,38,0.724,40,0.618,47,0.685,49,0.804,50,1.16,53,0.701,64,0.618,112,1.734,139,0.545,140,0.333,157,0.022,175,0.379,176,0.379,189,0.685,219,0.989,259,0.022,260,0.294,261,0.831,262,1.367,263,1.142,264,1.142,265,1.142,266,1.142,269,3.572,278,4.094,280,3.027,285,2.871,286,3.183,287,1.368,288,1.056,291,1.142,292,1.985,293,1.836,294,1.478,296,1.478,300,1.696,301,1.395,304,1.167,305,0.764,309,0.901,310,0.901,311,1.639,314,0.976,315,1.478,316,1.142,317,1.734,318,1.142,319,1.142,320,0.764,321,1.142,322,0.831,323,1.142,324,1.478,325,0.831,326,1.142,327,0.831,328,1.142,329,0.831,330,0.901,331,1.261,332,1.142,333,0.764,334,1.142,335,0.764,336,1.142,337,0.764,338,1.142,339,0.764,340,1.056,341,1.142,342,0.764,343,1.142,344,0.764,345,1.056,346,1.142,347,1.142,403,1.696,408,2.39,413,2.196,423,3.183,426,4.19,491,1.868,502,1.868,511,3.183,529,3.733,550,2.023,551,2.871,620,1.563,707,3.368,733,4.094,751,2.871,802,2.39,809,3.572,854,3.183,930,3.572,1037,3.162,1038,4.887,1039,4.887,1040,4.887,1041,4.887,1042,4.887,1043,4.887,1044,5.42,1045,4.887,1046,3.774,1047,3.774,1048,3.774,1049,3.774,1050,3.774,1051,2.759,1052,4.094,1053,4.094,1054,4.094,1055,4.094,1056,4.094,1057,4.094,1058,4.887,1059,4.094]],["title/components/HomeComponent.html",[260,0.176,333,0.656]],["body/components/HomeComponent.html",[1,2.026,3,0.313,4,0.275,5,0.275,7,0.313,8,0.602,9,1.02,10,0.945,13,1.201,21,0.869,24,1.487,26,1.201,27,0.031,28,0.706,29,0.559,30,1.11,36,0.771,37,1.929,38,0.741,47,0.602,50,0.629,51,0.869,52,1.737,53,0.913,60,0.945,64,0.543,72,0.843,77,1.298,78,1.733,79,2.382,80,1.298,81,0.94,86,1.201,95,2.195,97,2.209,105,1.483,112,1.298,128,0.94,139,0.533,140,0.275,143,0.804,144,2.294,154,1.521,157,0.02,175,0.313,176,0.313,189,0.602,190,1.073,192,1.132,199,1.397,202,1.607,205,2.294,219,0.869,259,0.02,260,0.267,261,0.684,262,1.201,263,0.94,264,0.94,265,0.94,266,0.94,269,3.138,287,1.025,288,0.87,289,1.641,290,2.209,291,0.94,292,1.937,293,1.792,294,1.298,296,1.298,299,2.382,300,1.397,301,1.266,304,1.266,305,0.629,309,0.742,310,0.742,311,1.487,314,0.804,315,1.298,316,0.94,317,1.603,318,0.94,319,0.94,320,0.629,321,0.94,322,0.684,323,0.94,324,1.298,325,0.684,326,0.94,327,0.684,328,0.94,329,0.684,330,0.742,331,0.684,332,0.94,333,1.073,334,0.94,335,0.629,336,0.94,337,0.629,338,0.94,339,0.629,340,0.87,341,0.94,342,0.629,343,0.94,344,0.629,345,0.87,346,0.94,347,0.94,408,2.099,436,2.025,541,3.138,543,3.597,545,1.777,561,2.605,575,2.593,581,3.875,599,2.404,619,2.273,620,1.287,624,2.605,643,3.138,644,3.594,646,2.605,751,1.827,802,2.099,827,1.827,930,4.391,939,3.597,1052,3.597,1053,3.597,1054,3.597,1060,2.605,1061,4.293,1062,4.293,1063,3.138,1064,4.293,1065,4.293,1066,4.293,1067,4.916,1068,4.293,1069,4.916,1070,4.916,1071,4.293,1072,4.293,1073,4.293,1074,3.11,1075,3.11,1076,3.11,1077,3.11,1078,5.752,1079,4.293,1080,3.11,1081,3.11,1082,4.293,1083,3.11,1084,3.11,1085,6.331,1086,6.331,1087,4.293,1088,4.293,1089,4.293,1090,4.293,1091,4.293,1092,4.293,1093,4.293,1094,4.293,1095,3.11,1096,3.11,1097,3.11,1098,3.11,1099,3.11,1100,6.234,1101,3.11,1102,3.11,1103,3.11,1104,3.11,1105,3.11,1106,3.11,1107,4.293,1108,3.11,1109,3.11,1110,3.11,1111,3.11,1112,3.11,1113,3.11,1114,3.11,1115,5.301,1116,4.293,1117,4.293]],["title/components/LoginComponent.html",[260,0.176,335,0.656]],["body/components/LoginComponent.html",[3,0.322,4,0.283,5,0.283,7,0.322,8,0.615,9,0.986,10,1.277,13,1.226,21,0.887,24,1.587,26,0.896,27,0.031,28,0.566,29,0.584,30,0.829,36,0.554,38,0.71,40,0.711,41,0.887,44,0.896,47,0.615,49,0.753,51,0.887,53,0.927,60,1.099,64,0.554,67,1.327,72,0.753,77,1.624,80,1.511,81,1.511,112,1.325,116,1.325,139,0.584,140,0.283,143,0.829,157,0.02,163,1.327,175,0.322,176,0.322,189,0.753,192,0.595,206,0.744,213,1.897,219,0.887,259,0.02,260,0.271,261,0.705,262,1.226,263,0.969,264,0.969,265,0.969,266,0.969,270,2.052,280,2.906,287,1.386,288,0.896,289,1.675,290,2.244,291,0.969,292,1.945,293,1.799,294,1.325,296,1.325,299,2.412,300,1.44,301,1.277,304,1.386,305,0.649,309,0.765,310,0.765,311,1.511,314,0.829,315,1.325,316,0.969,317,1.624,318,0.969,319,0.969,320,0.649,321,0.969,322,0.705,323,0.969,324,1.325,325,0.705,326,0.969,327,0.705,328,0.969,329,0.705,330,0.765,331,0.705,332,0.969,333,0.649,334,0.969,335,1.087,336,0.969,337,0.649,338,0.969,339,0.649,340,0.896,341,0.969,342,0.649,343,0.969,344,0.649,345,0.896,346,0.969,347,0.969,396,1.713,403,1.44,408,2.442,413,2.244,415,2.839,435,3.005,473,1.567,475,2.223,490,2.143,491,2.149,502,2.219,503,2.959,512,2.087,527,1.713,528,2.087,545,1.814,550,1.327,553,2.669,558,2.669,575,2.626,599,2.442,620,1.327,625,1.713,647,1.713,712,1.883,722,2.575,732,1.713,734,1.567,1009,3.155,1118,2.685,1119,4.243,1120,4.382,1121,4.382,1122,3.672,1123,3.204,1124,3.204,1125,3.204,1126,3.204,1127,4.994,1128,4.382,1129,4.994,1130,4.994,1131,3.925,1132,3.252,1133,3.497,1134,4.382,1135,3.204,1136,3.204,1137,3.204,1138,2.934,1139,3.204,1140,3.204,1141,3.204,1142,3.204,1143,2.087,1144,2.934,1145,2.342,1146,2.087,1147,2.087,1148,3.204,1149,2.087,1150,2.854,1151,3.204,1152,3.204,1153,4.994,1154,3.204,1155,3.204,1156,2.087,1157,2.087,1158,3.204,1159,2.087,1160,2.087,1161,3.497,1162,3.497,1163,4.382,1164,4.382,1165,3.672,1166,3.672,1167,3.672,1168,3.672]],["title/components/MyLibraryComponent.html",[260,0.176,337,0.656]],["body/components/MyLibraryComponent.html",[1,1.606,3,0.194,4,0.17,5,0.17,7,0.194,8,0.423,9,0.821,10,0.817,13,0.843,21,0.61,24,1.635,26,1.414,27,0.031,28,0.609,29,0.626,30,1.307,33,2.065,36,0.639,38,0.698,40,0.739,41,0.61,42,1.71,44,1.039,45,1.355,46,1.152,47,0.423,48,2.056,49,0.799,50,1.135,51,0.39,52,0.681,53,1.022,60,1.254,61,1.373,62,0.866,64,0.73,68,0.498,72,0.82,78,1.832,79,0.866,80,1.747,81,1.747,84,1.474,86,1.353,93,0.63,97,0.866,102,0.78,105,0.843,116,1.123,122,1.214,124,0.798,127,0.498,128,1.123,139,0.508,140,0.17,143,0.498,145,0.942,150,1.03,155,1.931,157,0.014,175,0.194,176,0.194,189,0.786,190,0.61,192,0.971,199,0.866,202,1.491,206,0.967,211,1.03,219,0.752,225,0.736,242,1.214,259,0.014,260,0.202,261,0.424,262,0.843,263,0.583,264,0.583,265,0.583,266,0.583,272,1.771,274,1.614,285,2.468,286,1.254,287,1.003,288,0.539,289,1.152,290,1.669,291,0.583,292,1.786,293,1.652,294,0.912,296,0.912,298,1.816,299,1.888,300,0.866,301,1.064,304,1.464,305,0.923,309,0.46,310,0.46,311,1.123,312,1.03,313,2.874,314,0.498,315,0.912,316,0.583,317,1.271,318,0.583,319,0.583,320,0.39,321,0.583,322,0.925,323,0.583,324,0.912,325,0.424,326,0.583,327,0.424,328,0.583,329,0.925,330,0.887,331,0.424,332,0.583,333,0.39,334,0.583,335,0.39,336,0.583,337,0.85,338,0.583,339,0.39,340,0.539,341,0.583,342,0.39,343,0.583,344,0.39,345,0.539,346,0.583,347,0.583,379,1.03,380,2.204,384,4.13,398,1.132,465,1.963,475,1.248,486,2.204,487,0.942,490,2.365,491,2,493,1.743,514,2.204,515,1.888,540,1.611,541,3.071,545,1.248,550,2.321,551,2.468,552,3.149,553,1.985,558,1.985,563,3.112,564,3.112,566,3.112,567,3.112,575,2.055,576,2.526,580,2.35,581,2.715,595,2.526,599,1.816,608,1.963,609,2.526,616,1.254,619,1.408,620,0.798,621,1.254,622,1.03,625,1.611,643,1.408,644,2.204,647,1.03,655,2.526,679,2.526,683,1.614,685,2.526,687,1.614,688,1.614,693,3.112,695,2.526,696,1.614,697,1.614,702,2.736,707,1.771,719,1.614,722,1.771,725,1.614,726,2.468,727,1.614,728,1.614,729,1.614,732,1.03,734,2.055,735,2.526,736,2.526,737,2.526,738,1.254,741,3.071,751,1.132,765,2.526,767,1.963,769,1.614,770,1.614,789,1.408,802,1.474,828,2.468,833,3.502,848,2.438,849,2.182,851,3.294,861,1.963,872,2.419,931,4.052,936,1.614,964,2.526,965,3.112,966,2.526,968,3.112,1008,3.821,1009,2.468,1015,4.506,1059,3.112,1063,1.408,1167,2.526,1169,5.313,1170,1.614,1171,3.015,1172,3.714,1173,4.202,1174,3.015,1175,3.015,1176,3.015,1177,3.015,1178,3.015,1179,3.015,1180,3.714,1181,3.015,1182,3.714,1183,3.714,1184,3.714,1185,3.714,1186,3.714,1187,3.714,1188,3.714,1189,4.202,1190,3.015,1191,3.015,1192,3.015,1193,3.015,1194,4.202,1195,3.015,1196,3.015,1197,1.926,1198,3.015,1199,1.926,1200,3.015,1201,1.926,1202,3.015,1203,1.926,1204,3.015,1205,1.926,1206,1.926,1207,1.926,1208,1.926,1209,3.015,1210,1.926,1211,1.926,1212,1.926,1213,1.926,1214,3.015,1215,1.926,1216,1.926,1217,1.926,1218,1.926,1219,1.926,1220,1.926,1221,1.926,1222,1.926,1223,1.926,1224,1.926,1225,1.926,1226,1.926,1227,1.926,1228,1.926,1229,1.614,1230,3.015,1231,3.015,1232,1.926,1233,4.202,1234,1.926,1235,4.202,1236,1.926,1237,4.202,1238,1.926,1239,1.926,1240,1.926,1241,1.926,1242,3.015,1243,3.015,1244,3.015,1245,4.202,1246,3.015,1247,3.714,1248,3.015,1249,1.614,1250,3.015,1251,1.926,1252,1.926,1253,1.926,1254,3.714,1255,1.926,1256,1.926,1257,1.926,1258,1.926,1259,1.926,1260,1.926,1261,1.926,1262,3.015,1263,4.202,1264,1.926,1265,1.926,1266,1.926,1267,1.926,1268,1.926,1269,1.926,1270,1.926,1271,1.926,1272,1.926,1273,1.926,1274,1.926,1275,1.926,1276,1.926,1277,1.926,1278,1.926,1279,1.926,1280,1.926,1281,1.926,1282,1.926,1283,1.926,1284,1.926,1285,1.926,1286,1.926,1287,1.926,1288,3.015,1289,3.015,1290,3.015,1291,3.015,1292,3.015,1293,2.204,1294,3.015,1295,3.015,1296,3.015]],["title/interfaces/RawgAchievementApi.html",[107,1.585,151,0.656]],["body/interfaces/RawgAchievementApi.html",[0,1.034,1,0.963,3,0.253,4,0.222,5,0.222,6,1.346,7,0.253,8,0.518,9,0.818,10,0.963,11,1.48,12,1.48,17,1.48,18,1.48,23,2.171,27,0.031,28,0.644,29,0.516,31,2.171,32,1.48,33,2.137,35,2.125,36,0.814,37,2.306,38,0.758,39,1.672,40,0.701,41,1.303,42,1.753,43,1.66,44,1.501,45,1.66,46,2.401,47,0.797,48,1.412,49,0.752,50,0.886,51,1.086,52,2.176,53,1.029,54,2.987,55,2.221,56,2.171,57,1.962,58,1.48,60,1.129,61,0.823,62,1.132,63,2.963,64,0.734,65,1.232,66,1.53,67,1.53,68,0.955,69,0.762,70,1.132,71,1.48,72,0.908,73,2.867,74,2.867,75,2.171,77,1.117,78,1.43,79,2.744,82,2.571,83,1.48,84,1.232,85,2.171,86,1.034,87,2.171,88,1.811,89,2.171,90,2.171,91,1.811,92,1.346,93,0.823,94,1.48,95,1.043,96,1.48,97,1.132,98,2.711,100,1.975,101,2.171,102,1.327,103,2.171,105,0.705,106,1.48,107,2.51,109,2.832,110,2.832,111,2.171,112,1.458,113,1.48,114,1.53,115,2.171,116,1.117,117,1.53,118,1.813,119,1.48,120,1.48,121,2.571,122,0.823,124,1.043,125,1.043,126,0.823,127,1.131,128,1.117,129,1.48,130,2.171,131,1.48,132,1.132,133,1.132,134,1.48,135,2.571,136,1.48,137,1.48,139,0.516,140,0.222,141,1.48,142,1.346,143,0.651,144,1.346,145,1.232,146,1.48,147,1.48,148,1.66,149,1.811,150,2.576,151,0.976,152,1.232,153,2.171,154,1.232,155,1.208,156,1.48,157,0.022,158,1.48,159,1.48,160,1.48,161,1.48,162,1.346,163,1.043,164,1.48,165,2.171,166,1.412,167,1.48,168,1.48,169,1.232,170,1.043,171,2.41,172,2.306,173,0.963,174,0.89,175,0.253,176,0.253,177,1.043,178,3.1,179,3.588,180,1.552,181,3.015,182,1.48,183,1.48,184,1.48,185,1.48,186,1.48,187,1.48,188,1.48,189,0.353,190,0.51,191,1.48,192,1.11,193,1.48,194,3.015,195,2.832,196,1.48,197,2.171,198,3.015,199,1.966,200,3.015,201,1.043,202,1.896,203,2.171,204,2.171,205,1.975,206,0.872,207,2.832,208,1.48,209,1.48,210,1.208,211,1.346,212,1.48,213,0.89,214,2.171,215,2.171,216,1.346,217,1.48,218,1.48,219,0.51,220,1.48,221,1.48,222,1.48,223,1.48,224,1.48,225,1.412,226,1.346,227,1.48,228,1.48,229,1.48,230,2.171,231,1.48,232,0.963,233,1.48,234,2.171,235,1.48,236,1.48,237,1.48,238,1.043,239,1.48,240,1.48,241,1.132,242,0.823,243,1.48,244,1.132,245,1.132,246,1.132,247,1.48,248,1.48,249,1.48,250,1.48,251,1.48,252,1.48,253,1.48,254,1.48,255,1.48,256,1.48,257,1.48,258,1.48,259,0.017,823,1.043]],["title/interfaces/RawgAchievementsApiResponse.html",[151,0.656,169,1.585]],["body/interfaces/RawgAchievementsApiResponse.html",[0,1.043,1,0.975,3,0.256,4,0.225,5,0.225,6,1.363,7,0.256,8,0.523,9,0.823,10,0.97,11,1.499,12,1.499,17,1.499,18,1.499,23,2.191,27,0.031,28,0.584,29,0.375,31,2.191,32,1.499,33,2.142,35,2.136,36,0.815,37,2.318,38,0.759,39,1.685,40,0.704,41,1.305,42,1.761,43,1.675,44,1.507,45,1.675,46,2.359,47,0.724,48,1.425,49,0.756,50,0.892,51,1.091,52,2.181,53,1.033,54,2.994,55,2.231,56,2.191,57,1.972,58,1.499,60,1.135,61,0.834,62,1.146,63,2.974,64,0.736,65,1.247,66,1.544,67,1.544,68,0.964,69,0.771,70,1.146,71,1.499,72,0.883,73,2.88,74,2.88,75,2.191,77,1.128,78,1.441,79,2.75,82,2.59,83,1.499,84,1.247,85,2.191,86,1.043,87,2.191,88,1.825,89,2.191,90,2.191,91,1.825,92,1.363,93,0.834,94,1.499,95,1.056,96,1.499,97,1.146,98,2.722,100,1.993,101,2.191,102,1.334,103,2.191,105,0.714,106,1.499,107,2.635,109,2.849,110,2.849,111,2.191,112,1.466,113,1.499,114,1.544,115,2.191,116,1.128,117,1.544,118,1.823,119,1.499,120,1.499,121,2.59,122,0.834,124,1.056,125,1.056,126,0.834,127,1.14,128,1.128,129,1.499,130,2.191,131,1.499,132,1.146,133,1.146,134,1.499,135,2.59,136,1.499,137,1.499,139,0.519,140,0.225,141,1.499,142,1.363,143,0.66,144,1.363,145,1.247,146,1.499,147,1.499,148,1.675,149,1.825,150,2.592,151,0.981,152,1.247,153,3.031,154,1.247,155,1.219,156,1.499,157,0.025,158,1.499,159,1.499,160,1.499,161,1.499,162,1.363,163,1.056,164,1.499,165,2.191,166,1.425,167,1.499,168,1.499,169,1.824,170,1.056,171,1.98,172,1.675,173,0.975,174,0.901,175,0.256,176,0.256,177,1.056,178,3.11,179,3.596,180,1.56,181,3.031,182,1.499,183,1.499,184,1.499,185,1.499,186,1.499,187,1.499,188,1.499,189,0.358,190,0.516,191,1.499,192,1.113,193,1.499,194,3.031,195,2.849,196,1.499,197,2.191,198,3.031,199,1.98,200,3.031,201,1.056,202,1.902,203,2.191,204,2.191,205,1.993,206,0.876,207,2.849,208,1.499,209,1.499,210,1.219,211,1.363,212,1.499,213,0.901,214,2.191,215,2.191,216,1.363,217,1.499,218,1.499,219,0.516,220,1.499,221,1.499,222,1.499,223,1.499,224,1.499,225,1.425,226,1.363,227,1.499,228,1.499,229,1.499,230,2.191,231,1.499,232,0.975,233,1.499,234,2.191,235,1.499,236,1.499,237,1.499,238,1.056,239,1.499,240,1.499,241,1.146,242,0.834,243,1.499,244,1.146,245,1.146,246,1.146,247,1.499,248,1.499,249,1.499,250,1.499,251,1.499,252,1.499,253,1.499,254,1.499,255,1.499,256,1.499,257,1.499,258,1.499,259,0.017,823,1.056]],["title/interfaces/RawgApiResponse.html",[151,0.656,152,1.585]],["body/interfaces/RawgApiResponse.html",[0,1.033,1,0.962,3,0.253,4,0.222,5,0.222,6,1.345,7,0.253,8,0.518,9,0.818,10,0.963,11,1.479,12,1.479,17,1.479,18,1.479,23,2.17,27,0.031,28,0.581,29,0.484,31,2.17,32,1.479,33,2.136,35,2.124,36,0.814,37,2.305,38,0.758,39,1.672,40,0.701,41,1.303,42,1.753,43,1.659,44,1.5,45,1.659,46,2.354,47,0.72,48,1.412,49,0.752,50,0.885,51,1.086,52,2.176,53,1.029,54,2.986,55,2.22,56,2.17,57,1.961,58,1.479,60,1.129,61,0.823,62,1.131,63,2.962,64,0.733,65,1.231,66,1.529,67,1.529,68,0.955,69,0.761,70,1.131,71,1.479,72,0.897,73,2.866,74,2.866,75,2.17,77,1.117,78,1.43,79,2.744,82,2.57,83,1.479,84,1.231,85,2.17,86,1.033,87,2.17,88,1.811,89,2.17,90,2.17,91,1.811,92,1.345,93,0.823,94,1.479,95,1.042,96,1.479,97,1.131,98,2.836,100,1.974,101,2.17,102,1.327,103,2.17,105,0.704,106,1.479,107,2.356,109,2.831,110,2.831,111,2.17,112,1.457,113,1.479,114,1.529,115,2.17,116,1.117,117,1.529,118,1.813,119,1.479,120,1.479,121,2.57,122,0.823,124,1.042,125,1.042,126,0.823,127,1.131,128,1.117,129,1.479,130,2.17,131,1.479,132,1.131,133,1.131,134,1.479,135,2.57,136,1.479,137,1.479,139,0.516,140,0.222,141,1.479,142,1.345,143,0.651,144,1.345,145,1.231,146,1.479,147,1.479,148,1.659,149,1.811,150,2.575,151,0.975,152,1.806,153,3.014,154,2.356,155,1.753,156,2.831,157,0.025,158,1.479,159,1.479,160,1.479,161,1.479,162,1.345,163,1.042,164,1.479,165,2.17,166,1.412,167,1.479,168,1.479,169,1.231,170,1.042,171,1.965,172,1.659,173,0.962,174,0.889,175,0.253,176,0.253,177,1.042,178,3.1,179,3.588,180,1.552,181,3.014,182,1.479,183,1.479,184,1.479,185,1.479,186,1.479,187,1.479,188,1.479,189,0.353,190,0.51,191,1.479,192,1.11,193,1.479,194,3.014,195,2.831,196,1.479,197,2.17,198,3.014,199,1.965,200,3.014,201,1.042,202,1.896,203,2.17,204,2.17,205,1.974,206,0.871,207,2.831,208,1.479,209,1.479,210,1.207,211,1.345,212,1.479,213,0.889,214,2.17,215,2.17,216,1.345,217,1.479,218,1.479,219,0.51,220,1.479,221,1.479,222,1.479,223,1.479,224,1.479,225,1.412,226,1.345,227,1.479,228,1.479,229,1.479,230,2.17,231,1.479,232,0.962,233,1.479,234,2.17,235,1.479,236,1.479,237,1.479,238,1.042,239,1.479,240,1.479,241,1.131,242,0.823,243,1.479,244,1.131,245,1.131,246,1.131,247,1.479,248,1.479,249,1.479,250,1.479,251,1.479,252,1.479,253,1.479,254,1.479,255,1.479,256,1.479,257,1.479,258,1.479,259,0.017,823,1.042]],["title/interfaces/RawgGame.html",[98,1.585,151,0.656]],["body/interfaces/RawgGame.html",[0,1.021,1,0.946,3,0.249,4,0.219,5,0.219,6,1.323,7,0.249,8,0.512,9,0.812,10,0.953,11,1.454,12,1.454,17,1.454,18,1.454,23,2.143,27,0.031,28,0.641,29,0.606,30,1.236,31,2.143,32,1.454,33,2.17,35,2.11,36,0.813,37,2.29,38,0.757,39,1.656,40,0.697,41,1.301,42,1.743,43,1.639,44,1.491,45,1.639,46,2.395,47,0.715,48,1.394,49,0.748,50,0.877,51,1.079,52,2.17,53,1.024,54,2.977,55,2.207,56,2.143,57,1.948,58,1.454,60,1.121,61,0.809,62,1.112,63,2.946,64,0.73,65,1.211,66,1.51,67,1.51,68,0.943,69,0.749,70,1.112,71,1.454,72,0.907,73,3.087,74,3.087,75,2.143,77,1.103,78,1.416,79,2.735,82,2.545,83,1.454,84,1.211,85,2.143,86,1.021,87,2.143,88,1.793,89,2.143,90,2.143,91,1.793,92,1.323,93,0.809,94,1.454,95,1.025,96,1.454,97,1.112,98,2.767,100,1.95,101,2.143,102,1.318,103,2.143,105,0.693,106,1.454,107,2.338,109,2.808,110,2.808,111,2.143,112,1.446,113,1.454,114,1.51,115,2.143,116,1.103,117,1.51,118,1.801,119,1.454,120,1.454,121,2.545,122,0.809,124,1.025,125,1.025,126,0.809,127,1.12,128,1.103,129,1.454,130,2.143,131,1.454,132,1.112,133,1.112,134,1.454,135,3.132,136,1.454,137,1.454,139,0.512,140,0.219,141,1.454,142,1.323,143,0.64,144,1.323,145,1.211,146,1.454,147,1.454,148,1.639,149,1.793,150,2.555,151,0.967,152,1.211,153,2.143,154,1.211,155,1.192,156,1.454,157,0.022,158,1.454,159,1.454,160,1.454,161,1.454,162,1.323,163,1.025,164,2.808,165,2.143,166,1.394,167,2.808,168,2.808,169,1.211,170,1.025,171,1.946,172,1.639,173,0.946,174,0.875,175,0.249,176,0.249,177,1.025,178,3.087,179,3.576,180,1.541,181,2.994,182,1.454,183,1.454,184,1.454,185,1.454,186,1.454,187,1.454,188,1.454,189,0.347,190,0.501,191,1.454,192,1.106,193,1.454,194,2.994,195,2.808,196,1.454,197,2.143,198,2.994,199,1.946,200,2.994,201,1.025,202,1.888,203,2.143,204,2.143,205,1.95,206,0.865,207,2.808,208,1.454,209,1.454,210,1.192,211,1.323,212,1.454,213,0.875,214,2.143,215,2.143,216,1.323,217,1.454,218,1.454,219,0.501,220,1.454,221,1.454,222,1.454,223,1.454,224,1.454,225,1.394,226,1.323,227,1.454,228,1.454,229,1.454,230,2.143,231,1.454,232,0.946,233,1.454,234,2.143,235,1.454,236,1.454,237,1.454,238,1.025,239,1.454,240,1.454,241,1.112,242,0.809,243,1.454,244,1.112,245,1.112,246,1.112,247,1.454,248,1.454,249,1.454,250,1.454,251,1.454,252,1.454,253,1.454,254,1.454,255,1.454,256,1.454,257,1.454,258,1.454,259,0.017,436,3.113,823,1.025]],["title/components/RecoverPasswordComponent.html",[260,0.176,339,0.656]],["body/components/RecoverPasswordComponent.html",[3,0.309,4,0.272,5,0.272,7,0.309,8,0.598,9,0.974,10,1.076,13,1.192,21,0.863,24,1.52,26,0.861,27,0.031,28,0.554,29,0.531,30,0.796,36,0.618,38,0.666,40,0.618,44,0.861,45,2.372,47,0.598,49,0.598,53,0.908,60,1.22,64,0.539,68,0.796,69,0.931,72,0.598,77,1.289,80,0.931,81,0.931,93,1.393,102,1.102,105,1.192,126,1.006,127,1.102,133,1.915,139,0.576,140,0.272,143,0.796,157,0.019,163,1.274,175,0.309,176,0.309,189,0.804,190,1.068,192,0.572,202,1.006,206,0.724,213,2.026,219,0.863,259,0.019,260,0.265,261,0.677,262,1.192,263,0.931,264,0.931,265,0.931,266,0.931,270,2.192,280,2.875,287,0.735,288,0.861,289,1.629,290,2.197,291,0.931,292,1.934,293,1.789,294,1.289,296,1.289,299,2.372,300,1.383,301,1.262,304,1.369,305,0.863,309,0.735,310,0.735,311,1.479,312,1.645,314,0.796,315,1.289,316,0.931,317,1.596,318,0.931,319,0.931,320,0.623,321,0.931,322,0.677,323,0.931,324,1.289,325,0.677,326,0.931,327,0.677,328,0.931,329,0.677,330,0.735,331,0.677,332,0.931,333,0.623,334,0.931,335,0.623,336,0.931,337,0.623,338,0.931,339,1.068,340,1.676,341,0.931,342,0.623,343,0.931,344,0.623,345,0.861,346,0.931,347,0.931,392,3.902,396,1.645,403,1.383,408,1.505,413,1.915,415,2.084,442,3.574,462,2.504,473,1.505,475,2.185,503,3.128,515,1.915,520,3.369,545,1.765,553,2.613,558,2.613,575,2.581,599,2.391,620,1.274,625,2.278,647,1.645,648,2.004,712,1.808,732,1.645,767,2.776,1051,2.25,1122,3.571,1123,3.116,1124,3.116,1125,3.116,1126,3.116,1131,3.858,1132,3.184,1133,3.437,1138,2.873,1143,2.776,1145,2.25,1146,2.776,1147,2.004,1149,2.004,1150,3.184,1156,2.004,1157,2.004,1159,2.004,1160,2.776,1161,3.734,1162,3.734,1297,5.02,1298,2.579,1299,4.89,1300,3.571,1301,4.191,1302,3.858,1303,4.804,1304,4.262,1305,4.262,1306,4.262,1307,4.89,1308,4.262,1309,4.89,1310,4.89,1311,4.262,1312,3.078,1313,3.078,1314,3.078,1315,3.078,1316,3.078,1317,2.504,1318,2.504,1319,2.004,1320,3.078,1321,3.571,1322,3.078,1323,2.579,1324,2.25,1325,2.25,1326,3.078,1327,3.078,1328,4.89,1329,2.579,1330,3.078,1331,3.078,1332,4.262,1333,3.571,1334,3.116,1335,3.116,1336,3.116,1337,3.116,1338,3.116,1339,3.116,1340,3.116,1341,3.571,1342,3.571,1343,4.262,1344,4.262]],["title/components/RegisterComponent.html",[260,0.176,342,0.656]],["body/components/RegisterComponent.html",[3,0.274,4,0.241,5,0.241,7,0.274,8,0.549,9,0.936,10,1.007,13,1.094,21,0.792,24,1.625,26,0.762,27,0.031,28,0.518,29,0.617,30,0.705,38,0.688,40,0.632,41,1.012,44,0.762,47,0.549,49,0.743,53,0.85,60,1.007,64,0.495,65,1.913,68,0.705,69,0.824,72,0.842,77,1.667,80,1.789,81,1.789,93,1.278,102,1.183,105,1.094,116,1.183,126,1.496,127,0.705,128,0.824,133,1.757,139,0.554,140,0.241,143,0.705,157,0.018,163,1.128,175,0.274,176,0.274,189,0.701,190,1.012,192,0.506,202,1.634,206,0.664,213,2.121,219,0.792,259,0.018,260,0.248,261,0.6,262,1.094,263,0.824,264,0.824,265,0.824,266,0.824,270,2.295,280,2.777,287,1.355,288,0.762,289,1.495,290,2.056,291,0.824,292,1.9,293,1.758,294,1.183,296,1.183,299,2.247,300,1.224,301,1.213,304,1.316,305,0.926,309,0.65,310,0.65,311,1.384,312,1.456,314,0.705,315,1.183,316,0.824,317,1.512,318,0.824,319,0.824,320,0.551,321,0.824,322,0.6,323,0.824,324,1.183,325,0.6,326,0.824,327,0.6,328,0.824,329,0.6,330,0.65,331,0.6,332,0.824,333,0.551,334,0.824,335,0.551,336,0.824,337,0.551,338,0.824,339,0.551,340,0.762,341,0.824,342,1.012,343,0.824,344,0.551,345,0.762,346,0.824,347,0.824,396,1.456,403,1.224,408,1.332,413,1.224,414,2.859,415,2.445,435,2.673,440,2.283,461,3.256,462,2.938,463,3.256,473,1.332,475,2.07,491,1.495,493,1.749,502,2.22,503,2.696,511,3.589,512,1.774,520,3.238,528,1.774,530,1.332,545,1.619,553,2.446,558,2.446,575,2.445,599,2.238,620,1.128,625,2.09,645,2.09,647,1.456,648,1.774,712,1.601,722,2.298,732,1.456,767,2.547,983,3.277,1009,3.413,1051,1.992,1119,4.029,1123,2.859,1124,2.859,1125,2.859,1126,2.859,1131,3.655,1132,2.98,1133,3.256,1138,2.688,1143,2.547,1144,2.688,1146,2.547,1147,1.774,1149,1.774,1150,3.589,1156,1.774,1157,1.774,1159,1.774,1160,1.774,1161,3.909,1162,3.909,1165,3.277,1166,4.189,1168,3.277,1293,2.859,1300,3.277,1301,3.655,1302,2.859,1303,3.277,1317,2.298,1318,2.298,1319,1.774,1321,4.436,1323,2.283,1324,1.992,1325,1.992,1329,3.834,1333,3.277,1334,3.655,1335,2.859,1336,2.859,1337,2.859,1338,2.859,1339,2.859,1340,2.859,1341,3.277,1342,3.277,1345,2.283,1346,3.911,1347,3.911,1348,3.911,1349,3.911,1350,3.911,1351,4.576,1352,3.911,1353,4.576,1354,4.576,1355,3.911,1356,2.724,1357,2.724,1358,2.724,1359,2.724,1360,2.724,1361,2.724,1362,2.724,1363,2.724,1364,2.724,1365,2.724,1366,2.724,1367,2.724,1368,2.724,1369,1.774,1370,2.724,1371,2.283,1372,2.724,1373,2.724,1374,2.283,1375,2.724,1376,2.283,1377,2.724,1378,2.724,1379,2.724,1380,2.724,1381,4.576,1382,2.724,1383,2.724,1384,4.189,1385,3.277,1386,3.277,1387,3.277,1388,2.859,1389,3.277]],["title/interfaces/User.html",[151,0.656,305,0.656]],["body/interfaces/User.html",[0,1.23,3,0.324,4,0.284,5,0.284,7,0.324,8,0.617,9,0.547,10,0.708,21,0.652,27,0.031,29,0.584,36,0.407,38,0.686,40,0.556,41,0.89,49,0.755,51,0.652,54,2.15,68,0.832,69,0.974,72,0.934,86,0.901,118,1.99,122,1.758,125,1.82,126,1.636,139,0.442,140,0.284,143,0.832,151,0.652,155,1.437,157,0.02,173,1.23,174,1.137,175,0.442,176,0.324,180,0.974,189,0.452,192,1.154,206,1.065,210,1.758,213,1.137,259,0.02,287,1.483,298,2.754,301,0.708,304,1.05,305,1.226,313,1.721,413,1.446,415,2.91,422,2.096,423,3.26,424,2.697,425,2.697,426,2.353,427,2.697,430,2.697,433,2.697,435,3.283,438,2.697,442,3.214,444,4.194,445,2.697,446,3.683,448,4.194,449,4.194,453,2.697,454,1.891,455,2.096,456,2.353,457,2.096,458,2.353,459,1.574,460,1.721,461,3.667,462,3.415,463,3.667,464,4.117,465,3.667,466,4.194,467,2.697,468,3.683,469,2.697,470,2.697,471,2.697,472,2.697,473,1.574,474,2.697,475,1.333,476,2.697,477,2.697,478,4.507,479,2.697,480,2.697,481,2.697,482,2.697,483,2.697,484,2.697,485,2.697,486,2.353,487,1.574,488,2.096,489,2.697,490,2.15,491,1.68,492,3.74,493,2.417,494,4.507,495,4.507,496,2.697,497,4.507,498,2.697,499,4.194,500,2.697,501,2.697,502,2.056,503,2.15,504,2.697,505,2.697,506,3.683,507,2.697,508,2.583,509,2.697,510,4.194,511,2.096,512,2.096,513,2.697,514,2.353,515,1.975,516,2.697,517,4.507,518,3.683,519,2.697,520,2.583,521,3.683,522,2.697,523,3.683,524,2.697,525,3.683,526,2.697,527,2.35,528,2.096,529,2.863,530,2.15,531,2.697,532,4.194,533,2.697,534,3.683,535,2.697,536,2.697,537,2.697,538,2.697,823,1.333]],["title/components/UserProfileComponent.html",[260,0.176,344,0.656]],["body/components/UserProfileComponent.html",[3,0.274,4,0.241,5,0.241,7,0.274,8,0.549,9,0.936,10,1.008,13,1.095,21,0.792,24,1.53,26,1.095,27,0.031,28,0.567,29,0.554,30,1.012,36,0.579,38,0.707,40,0.67,41,1.013,44,0.763,45,1.759,47,0.549,49,0.549,50,1.15,51,0.792,53,0.929,60,1.213,64,0.495,65,1.915,72,0.549,80,1.184,81,1.385,93,1.28,102,0.705,116,1.184,133,1.759,139,0.554,140,0.241,143,0.705,155,1.635,157,0.018,163,1.129,175,0.274,176,0.274,189,0.861,190,1.15,192,0.727,202,1.28,206,0.665,210,0.892,213,2.122,219,1.013,259,0.018,260,0.249,261,0.6,262,1.095,263,0.825,264,0.825,265,0.825,266,0.825,270,2.347,280,2.778,285,2.69,287,1.5,288,0.763,289,1.496,290,2.057,291,0.825,292,1.901,293,1.758,294,1.184,296,1.184,298,2.239,299,2.248,300,1.226,301,1.213,304,1.387,305,1.292,309,0.651,310,0.651,311,1.385,312,1.458,313,2.092,314,0.705,315,1.184,316,0.825,317,1.513,318,0.825,319,0.825,320,0.552,321,0.825,322,0.6,323,0.825,324,1.184,325,0.6,326,0.825,327,0.6,328,0.825,329,0.6,330,0.651,331,0.6,332,0.825,333,0.552,334,0.825,335,0.552,336,0.825,337,0.552,338,0.825,339,0.552,340,0.763,341,0.825,342,0.552,343,0.825,344,1.013,345,1.281,346,0.825,347,0.825,389,3.91,396,1.458,403,1.226,408,1.334,413,1.759,415,1.915,435,2.092,461,2.549,462,2.3,463,2.549,464,1.994,473,1.334,488,1.777,491,1.496,502,2.295,503,2.447,515,2.057,520,3.24,529,3.853,540,2.092,545,1.621,551,2.3,553,2.447,558,2.447,575,2.447,599,2.239,620,1.129,625,2.092,645,2.447,647,1.458,648,1.777,702,1.777,704,1.777,707,2.3,712,1.603,732,1.458,802,1.915,876,2.3,917,1.603,977,3.28,988,3.836,1009,2.939,1026,2.286,1055,2.286,1056,3.28,1063,2.862,1119,2.862,1132,2.982,1133,3.258,1138,2.69,1143,1.777,1144,2.69,1145,1.994,1146,3.258,1147,2.549,1149,1.777,1150,3.45,1156,1.777,1157,1.777,1159,1.777,1160,2.549,1161,3.91,1162,3.91,1229,2.286,1249,2.286,1293,2.862,1301,2.862,1302,2.862,1317,2.3,1318,2.3,1324,1.994,1325,1.994,1334,3.657,1335,2.862,1336,2.862,1337,2.862,1338,2.862,1339,2.862,1340,2.862,1369,1.777,1371,3.28,1374,2.286,1376,2.286,1384,4.192,1385,3.28,1386,3.28,1387,3.28,1388,2.862,1389,3.28,1390,5.031,1391,2.286,1392,3.915,1393,3.915,1394,3.915,1395,4.579,1396,3.915,1397,4.579,1398,4.579,1399,5.003,1400,3.915,1401,3.915,1402,2.728,1403,3.915,1404,2.728,1405,2.728,1406,2.728,1407,2.728,1408,2.728,1409,2.728,1410,2.728,1411,2.728,1412,2.728,1413,2.728,1414,2.728,1415,2.728,1416,2.728,1417,2.728,1418,2.728,1419,2.728,1420,5.003,1421,3.915,1422,2.728,1423,2.728,1424,2.728,1425,2.728,1426,2.728,1427,2.728,1428,2.728,1429,2.728,1430,2.728,1431,2.728,1432,3.915,1433,3.915,1434,3.915,1435,3.915]],["title/coverage.html",[1436,3.7]],["body/coverage.html",[0,1.566,1,1.545,5,0.357,6,3.241,27,0.031,29,0.406,57,1.545,64,0.511,92,2.161,98,1.977,107,1.977,151,1.273,152,1.977,157,0.023,169,1.977,180,1.223,242,2.183,259,0.023,260,0.357,261,0.89,267,3.387,301,0.89,305,0.818,320,0.818,322,0.89,325,0.89,327,0.89,329,0.89,330,1.404,331,0.89,333,0.818,335,0.818,337,0.818,339,0.818,342,0.818,344,0.818,353,2.515,377,2.956,379,2.729,384,2.633,389,2.633,392,2.633,398,3,404,2.956,422,3.949,455,2.633,457,2.633,459,2.497,539,3.733,580,1.817,622,2.992,738,3.326,739,3.829,811,3.387,824,3.455,926,3.387,960,3.387,1037,3.387,1060,3.387,1118,3.387,1144,2.375,1169,3.387,1170,3.387,1297,3.387,1298,3.387,1317,2.375,1318,2.375,1319,2.633,1345,3.387,1369,2.633,1390,3.387,1391,3.387,1436,3.387,1437,4.043,1438,4.043,1439,4.043,1440,4.043,1441,4.043,1442,4.043,1443,4.043,1444,4.043,1445,4.043,1446,4.043,1447,4.043,1448,4.043,1449,6.362,1450,6.569,1451,5.598,1452,5.598,1453,3.387,1454,4.043,1455,4.279,1456,4.043,1457,5.598,1458,5.598,1459,4.043,1460,4.043,1461,4.043,1462,4.043,1463,4.043,1464,3.387,1465,3.387,1466,4.043,1467,4.043,1468,4.043,1469,4.043,1470,4.043,1471,4.043,1472,5.08,1473,6.064,1474,4.043,1475,4.043]],["title/dependencies.html",[351,2.537,1476,1.981]],["body/dependencies.html",[27,0.031,140,0.441,143,1.292,157,0.027,259,0.027,351,3.253,353,2.244,369,4.864,370,4.244,396,2.67,403,2.244,1477,4.995,1478,6.61,1479,4.995,1480,4.995,1481,4.995,1482,4.995,1483,4.995,1484,4.995,1485,4.995,1486,4.995,1487,4.995,1488,4.995,1489,4.995,1490,4.995,1491,4.995,1492,4.995]],["title/miscellaneous/functions.html",[1493,1.765,1494,3.264]],["body/miscellaneous/functions.html",[7,0.471,26,1.565,27,0.03,28,0.633,29,0.562,30,1.446,33,1.976,36,0.756,38,0.677,41,0.949,47,0.784,49,0.784,50,1.132,53,1.175,72,0.868,77,1.913,125,2.619,127,1.212,128,1.418,157,0.026,259,0.026,275,3.928,502,2.138,503,2.735,741,3.427,1138,2.754,1144,3.512,1317,3.512,1318,3.512,1319,3.642,1369,3.642,1472,3.928,1493,3.053,1494,3.928,1495,6.325,1496,6.325,1497,6.325,1498,4.688,1499,4.688,1500,4.688,1501,4.688,1502,4.688,1503,4.688,1504,5.593,1505,4.688,1506,5.593,1507,4.688]],["title/index.html",[7,0.272,1508,2.71,1509,2.71]],["body/index.html",[4,0.414,27,0.026,28,0.531,157,0.026,166,1.792,180,1.418,259,0.026,260,0.324,289,1.792,306,5.008,364,3.427,1476,3.427,1510,4.688,1511,5.593,1512,4.688,1513,5.977,1514,3.928,1515,4.688,1516,4.688,1517,5.593,1518,6.325,1519,6.487,1520,4.688,1521,4.688,1522,4.688,1523,4.688,1524,4.688,1525,4.688,1526,4.688,1527,4.688,1528,4.688,1529,4.688,1530,4.688,1531,5.977,1532,5.977,1533,4.688,1534,6.19,1535,4.688,1536,4.688,1537,4.688,1538,4.688,1539,5.593,1540,5.593,1541,6.19,1542,4.688,1543,5.593,1544,5.593,1545,4.688,1546,6.418,1547,4.688,1548,4.688,1549,5.593,1550,4.688,1551,4.688,1552,4.688,1553,4.688,1554,4.688,1555,4.688,1556,5.977,1557,4.688,1558,4.688,1559,4.688,1560,3.427,1561,4.688,1562,4.688]],["title/modules.html",[350,2.595]],["body/modules.html",[27,0.027,157,0.027,259,0.027,349,3.402,350,3.069,361,3.069,370,3.819,1563,5.225,1564,5.225,1565,5.958,1566,5.225,1567,5.225]],["title/overview.html",[1560,3.228]],["body/overview.html",[2,2.977,27,0.031,157,0.025,259,0.025,261,1.42,262,1.279,301,1.301,314,1.182,320,1.197,322,1.301,325,1.301,327,1.301,329,1.301,331,1.301,333,1.197,335,1.197,337,1.197,339,1.197,342,1.197,344,1.197,348,2.977,349,4.443,350,2.685,351,2.977,352,3.83,353,2.054,354,3.83,355,3.341,356,3.83,357,3.83,358,3.83,359,3.83,360,3.83,361,3.474,362,4.615,363,3.83,364,3.341,402,2.977,823,1.892,1388,3.341,1453,3.83,1455,3.83,1465,3.83,1560,3.341,1568,4.571]],["title/properties.html",[8,0.546,1476,1.981]],["body/properties.html",[8,0.738,27,0.029,157,0.027,259,0.027,1514,4.41,1569,5.264]],["title/routes.html",[402,2.876]],["body/routes.html",[27,0.027,157,0.027,259,0.027,402,3.441]],["title/miscellaneous/variables.html",[1493,1.765,1570,3.264]],["body/miscellaneous/variables.html",[7,0.453,27,0.031,29,0.653,40,0.569,72,0.857,80,1.892,81,1.892,95,2.26,124,2.26,157,0.025,192,1.134,206,0.927,210,1.472,226,2.406,259,0.025,280,2.202,301,0.991,305,0.911,330,1.402,353,2.857,379,2.406,398,2.645,404,3.99,422,2.932,455,3.555,456,3.291,457,3.555,458,3.291,459,2.986,460,2.917,465,3.555,490,2.202,491,1.721,539,3.291,583,3.772,622,2.406,709,3.772,738,2.932,739,3.977,824,2.645,1057,3.772,1464,3.772,1493,2.932,1570,3.772,1571,5.874,1572,4.502,1573,4.502,1574,4.502,1575,4.502,1576,4.502,1577,4.502,1578,4.502,1579,4.502,1580,4.502,1581,4.502,1582,4.502,1583,4.502,1584,4.502,1585,4.502,1586,4.502,1587,4.502,1588,4.502,1589,5.458,1590,4.502,1591,4.502]]],"invertedIndex":[["",{"_index":27,"title":{},"body":{"injectables/ApiService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthService.html":{},"components/CategoryComponent.html":{},"components/ConfirmationModalComponent.html":{},"components/FooterComponent.html":{},"interfaces/Game.html":{},"interfaces/GameAchievement.html":{},"components/GameCardComponent.html":{},"components/GameDetailModalComponent.html":{},"injectables/GameService.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/MyLibraryComponent.html":{},"interfaces/RawgAchievementApi.html":{},"interfaces/RawgAchievementsApiResponse.html":{},"interfaces/RawgApiResponse.html":{},"interfaces/RawgGame.html":{},"components/RecoverPasswordComponent.html":{},"components/RegisterComponent.html":{},"interfaces/User.html":{},"components/UserProfileComponent.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":242,"title":{},"body":{"injectables/ApiService.html":{},"components/CategoryComponent.html":{},"interfaces/Game.html":{},"interfaces/GameAchievement.html":{},"components/GameDetailModalComponent.html":{},"injectables/GameService.html":{},"components/MyLibraryComponent.html":{},"interfaces/RawgAchievementApi.html":{},"interfaces/RawgAchievementsApiResponse.html":{},"interfaces/RawgApiResponse.html":{},"interfaces/RawgGame.html":{},"coverage.html":{}}}],["0.0.0",{"_index":1569,"title":{},"body":{"properties.html":{}}}],["0.13.0",{"_index":1492,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":1450,"title":{},"body":{"coverage.html":{}}}],["0/10",{"_index":1447,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":1444,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":1445,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":1443,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":1448,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":1446,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":520,"title":{},"body":{"injectables/AuthService.html":{},"components/RecoverPasswordComponent.html":{},"components/RegisterComponent.html":{},"interfaces/User.html":{},"components/UserProfileComponent.html":{}}}],["1/1",{"_index":1467,"title":{},"body":{"coverage.html":{}}}],["1/10",{"_index":1458,"title":{},"body":{"coverage.html":{}}}],["1/11",{"_index":1454,"title":{},"body":{"coverage.html":{}}}],["1/13",{"_index":1466,"title":{},"body":{"coverage.html":{}}}],["1/16",{"_index":1463,"title":{},"body":{"coverage.html":{}}}],["1/27",{"_index":1456,"title":{},"body":{"coverage.html":{}}}],["1/28",{"_index":1459,"title":{},"body":{"coverage.html":{}}}],["1/4",{"_index":1471,"title":{},"body":{"coverage.html":{}}}],["1/5",{"_index":1440,"title":{},"body":{"coverage.html":{}}}],["1/7",{"_index":1452,"title":{},"body":{"coverage.html":{}}}],["1/8",{"_index":1461,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":1457,"title":{},"body":{"coverage.html":{}}}],["100",{"_index":960,"title":{},"body":{"components/GameCardComponent.html":{},"coverage.html":{}}}],["1000",{"_index":1159,"title":{},"body":{"components/LoginComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/RegisterComponent.html":{},"components/UserProfileComponent.html":{}}}],["101",{"_index":898,"title":{},"body":{"interfaces/Game.html":{},"interfaces/GameAchievement.html":{},"injectables/GameService.html":{}}}],["102",{"_index":901,"title":{},"body":{"interfaces/Game.html":{},"interfaces/GameAchievement.html":{},"injectables/GameService.html":{}}}],["11",{"_index":484,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/User.html":{}}}],["12",{"_index":1460,"title":{},"body":{"coverage.html":{}}}],["13",{"_index":1388,"title":{},"body":{"components/RegisterComponent.html":{},"components/UserProfileComponent.html":{},"overview.html":{}}}],["14",{"_index":1451,"title":{},"body":{"coverage.html":{}}}],["150",{"_index":234,"title":{},"body":{"injectables/ApiService.html":{},"interfaces/RawgAchievementApi.html":{},"interfaces/RawgAchievementsApiResponse.html":{},"interfaces/RawgApiResponse.html":{},"interfaces/RawgGame.html":{}}}],["16.2.0",{"_index":1478,"title":{},"body":{"dependencies.html":{}}}],["16.2.14",{"_index":1482,"title":{},"body":{"dependencies.html":{}}}],["16.2.16",{"_index":1515,"title":{},"body":{"index.html":{}}}],["17",{"_index":485,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/User.html":{}}}],["1997",{"_index":483,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/User.html":{}}}],["2",{"_index":1568,"title":{},"body":{"overview.html":{}}}],["2.3.0",{"_index":1490,"title":{},"body":{"dependencies.html":{}}}],["20",{"_index":92,"title":{},"body":{"injectables/ApiService.html":{},"interfaces/RawgAchievementApi.html":{},"interfaces/RawgAchievementsApiResponse.html":{},"interfaces/RawgApiResponse.html":{},"interfaces/RawgGame.html":{},"coverage.html":{}}}],["2025",{"_index":819,"title":{},"body":{"components/FooterComponent.html":{}}}],["25",{"_index":1470,"title":{},"body":{"coverage.html":{}}}],["3",{"_index":1455,"title":{},"body":{"coverage.html":{},"overview.html":{}}}],["33",{"_index":1468,"title":{},"body":{"coverage.html":{}}}],["4/12",{"_index":1469,"title":{},"body":{"coverage.html":{}}}],["404",{"_index":419,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["5.3.6",{"_index":1487,"title":{},"body":{"dependencies.html":{}}}],["6",{"_index":1462,"title":{},"body":{"coverage.html":{}}}],["6.7.2",{"_index":1486,"title":{},"body":{"dependencies.html":{}}}],["63",{"_index":1441,"title":{},"body":{"coverage.html":{}}}],["7",{"_index":1465,"title":{},"body":{"coverage.html":{},"overview.html":{}}}],["7.8.0",{"_index":1488,"title":{},"body":{"dependencies.html":{}}}],["7/11",{"_index":1442,"title":{},"body":{"coverage.html":{}}}],["8",{"_index":1336,"title":{},"body":{"components/RecoverPasswordComponent.html":{},"components/RegisterComponent.html":{},"components/UserProfileComponent.html":{}}}],["9",{"_index":1453,"title":{},"body":{"coverage.html":{},"overview.html":{}}}],["_saveusergames",{"_index":1027,"title":{},"body":{"injectables/GameService.html":{}}}],["_saveusergames(username",{"_index":877,"title":{},"body":{"interfaces/Game.html":{},"interfaces/GameAchievement.html":{},"injectables/GameService.html":{}}}],["a.localecompare(b",{"_index":676,"title":{},"body":{"components/CategoryComponent.html":{}}}],["abre",{"_index":719,"title":{},"body":{"components/CategoryComponent.html":{},"components/MyLibraryComponent.html":{}}}],["acceder",{"_index":1589,"title":{},"body":{"miscellaneous/variables.html":{}}}],["acceso",{"_index":1432,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["accessors",{"_index":429,"title":{},"body":{"injectables/AuthService.html":{}}}],["accion",{"_index":1102,"title":{},"body":{"components/HomeComponent.html":{}}}],["acción",{"_index":751,"title":{},"body":{"components/ConfirmationModalComponent.html":{},"components/GameCardComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/MyLibraryComponent.html":{}}}],["ach",{"_index":897,"title":{},"body":{"interfaces/Game.html":{},"interfaces/GameAchievement.html":{},"injectables/GameService.html":{}}}],["achievement",{"_index":830,"title":{},"body":{"interfaces/Game.html":{},"interfaces/GameAchievement.html":{},"injectables/GameService.html":{}}}],["achievement.name",{"_index":1025,"title":{},"body":{"components/GameDetailModalComponent.html":{}}}],["achievementindex",{"_index":985,"title":{},"body":{"components/GameDetailModalComponent.html":{}}}],["achievements",{"_index":225,"title":{},"body":{"injectables/ApiService.html":{},"components/CategoryComponent.html":{},"interfaces/Game.html":{},"interfaces/GameAchievement.html":{},"injectables/GameService.html":{},"components/MyLibraryComponent.html":{},"interfaces/RawgAchievementApi.html":{},"interfaces/RawgAchievementsApiResponse.html":{},"interfaces/RawgApiResponse.html":{},"interfaces/RawgGame.html":{}}}],["achievements_count",{"_index":168,"title":{},"body":{"injectables/ApiService.html":{},"interfaces/RawgAchievementApi.html":{},"interfaces/RawgAchievementsApiResponse.html":{},"interfaces/RawgApiResponse.html":{},"interfaces/RawgGame.html":{}}}],["achievementupdated",{"_index":972,"title":{},"body":{"components/GameDetailModalComponent.html":{}}}],["action",{"_index":1101,"title":{},"body":{"components/HomeComponent.html":{}}}],["activatedroute",{"_index":579,"title":{},"body":{"components/CategoryComponent.html":{}}}],["actual",{"_index":488,"title":{},"body":{"injectables/AuthService.html":{},"components/GameDetailModalComponent.html":{},"interfaces/User.html":{},"components/UserProfileComponent.html":{}}}],["actual_component",{"_index":347,"title":{},"body":{"components/AppComponent.html":{},"components/CategoryComponent.html":{},"components/ConfirmationModalComponent.html":{},"components/FooterComponent.html":{},"components/GameCardComponent.html":{},"components/GameDetailModalComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/MyLibraryComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/RegisterComponent.html":{},"components/UserProfileComponent.html":{}}}],["actualiza",{"_index":917,"title":{},"body":{"interfaces/Game.html":{},"interfaces/GameAchievement.html":{},"components/GameDetailModalComponent.html":{},"injectables/GameService.html":{},"components/UserProfileComponent.html":{}}}],["actualización",{"_index":1249,"title":{},"body":{"components/MyLibraryComponent.html":{},"components/UserProfileComponent.html":{}}}],["actualizada",{"_index":526,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/User.html":{}}}],["actualizado",{"_index":536,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/User.html":{}}}],["actualizar",{"_index":515,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Game.html":{},"interfaces/GameAchievement.html":{},"injectables/GameService.html":{},"components/MyLibraryComponent.html":{},"components/RecoverPasswordComponent.html":{},"interfaces/User.html":{},"components/UserProfileComponent.html":{}}}],["actúa",{"_index":271,"title":{},"body":{"components/AppComponent.html":{}}}],["add",{"_index":1552,"title":{},"body":{"index.html":{}}}],["addgame",{"_index":1028,"title":{},"body":{"injectables/GameService.html":{}}}],["addgame(username",{"_index":880,"title":{},"body":{"interfaces/Game.html":{},"interfaces/GameAchievement.html":{},"injectables/GameService.html":{}}}],["addgametolibrary",{"_index":944,"title":{},"body":{"components/GameCardComponent.html":{}}}],["adicionales",{"_index":938,"title":{},"body":{"components/GameCardComponent.html":{}}}],["admin",{"_index":465,"title":{},"body":{"injectables/AuthService.html":{},"components/MyLibraryComponent.html":{},"interfaces/User.html":{},"miscellaneous/variables.html":{}}}],["admin123",{"_index":486,"title":{},"body":{"injectables/AuthService.html":{},"components/MyLibraryComponent.html":{},"interfaces/User.html":{}}}],["administradores",{"_index":1587,"title":{},"body":{"miscellaneous/variables.html":{}}}],["adventure",{"_index":1103,"title":{},"body":{"components/HomeComponent.html":{}}}],["afterviewinit",{"_index":752,"title":{},"body":{"components/ConfirmationModalComponent.html":{}}}],["ahora",{"_index":513,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/User.html":{}}}],["ajusta",{"_index":159,"title":{},"body":{"injectables/ApiService.html":{},"interfaces/RawgAchievementApi.html":{},"interfaces/RawgAchievementsApiResponse.html":{},"interfaces/RawgApiResponse.html":{},"interfaces/RawgGame.html":{}}}],["ajustar",{"_index":1290,"title":{},"body":{"components/MyLibraryComponent.html":{}}}],["al",{"_index":190,"title":{},"body":{"injectables/ApiService.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/CategoryComponent.html":{},"interfaces/Game.html":{},"interfaces/GameAchievement.html":{},"components/GameCardComponent.html":{},"components/GameDetailModalComponent.html":{},"injectables/GameService.html":{},"components/HomeComponent.html":{},"components/MyLibraryComponent.html":{},"interfaces/RawgAchievementApi.html":{},"interfaces/RawgAchievementsApiResponse.html":{},"interfaces/RawgApiResponse.html":{},"interfaces/RawgGame.html":{},"components/RecoverPasswordComponent.html":{},"components/RegisterComponent.html":{},"components/UserProfileComponent.html":{}}}],["alert('acceso",{"_index":1585,"title":{},"body":{"miscellaneous/variables.html":{}}}],["alert('debes",{"_index":709,"title":{},"body":{"components/CategoryComponent.html":{},"miscellaneous/variables.html":{}}}],["alert('error",{"_index":646,"title":{},"body":{"components/CategoryComponent.html":{},"components/HomeComponent.html":{}}}],["alert(result.message",{"_index":714,"title":{},"body":{"components/CategoryComponent.html":{}}}],["algunos",{"_index":474,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/User.html":{}}}],["allgames",{"_index":557,"title":{},"body":{"components/CategoryComponent.html":{}}}],["allusergames",{"_index":872,"title":{},"body":{"interfaces/Game.html":{},"interfaces/GameAchievement.html":{},"injectables/GameService.html":{},"components/MyLibraryComponent.html":{}}}],["allusergames[username",{"_index":875,"title":{},"body":{"interfaces/Game.html":{},"interfaces/GameAchievement.html":{},"injectables/GameService.html":{}}}],["almacena",{"_index":1264,"title":{},"body":{"components/MyLibraryComponent.html":{}}}],["almacenamiento",{"_index":454,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Game.html":{},"interfaces/GameAchievement.html":{},"injectables/GameService.html":{},"interfaces/User.html":{}}}],["alreadyexists",{"_index":888,"title":{},"body":{"interfaces/Game.html":{},"interfaces/GameAchievement.html":{},"injectables/GameService.html":{}}}],["alt",{"_index":1092,"title":{},"body":{"components/HomeComponent.html":{}}}],["angular",{"_index":306,"title":{},"body":{"components/AppComponent.html":{},"index.html":{}}}],["angular/animations",{"_index":1477,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":1479,"title":{},"body":{"dependencies.html":{}}}],["angular/common/http",{"_index":142,"title":{},"body":{"injectables/ApiService.html":{},"modules/AppModule.html":{},"interfaces/RawgAchievementApi.html":{},"interfaces/RawgAchievementsApiResponse.html":{},"interfaces/RawgApiResponse.html":{},"interfaces/RawgGame.html":{}}}],["angular/compiler",{"_index":1480,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":140,"title":{},"body":{"injectables/ApiService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthService.html":{},"components/CategoryComponent.html":{},"components/ConfirmationModalComponent.html":{},"components/FooterComponent.html":{},"interfaces/Game.html":{},"interfaces/GameAchievement.html":{},"components/GameCardComponent.html":{},"components/GameDetailModalComponent.html":{},"injectables/GameService.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/MyLibraryComponent.html":{},"interfaces/RawgAchievementApi.html":{},"interfaces/RawgAchievementsApiResponse.html":{},"interfaces/RawgApiResponse.html":{},"interfaces/RawgGame.html":{},"components/RecoverPasswordComponent.html":{},"components/RegisterComponent.html":{},"interfaces/User.html":{},"components/UserProfileComponent.html":{},"dependencies.html":{}}}],["angular/forms",{"_index":396,"title":{},"body":{"modules/AppModule.html":{},"components/LoginComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/RegisterComponent.html":{},"components/UserProfileComponent.html":{},"dependencies.html":{}}}],["angular/material",{"_index":1481,"title":{},"body":{"dependencies.html":{}}}],["angular/platform",{"_index":369,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/router",{"_index":403,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/CategoryComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/RegisterComponent.html":{},"components/UserProfileComponent.html":{},"dependencies.html":{}}}],["antes",{"_index":976,"title":{},"body":{"components/GameDetailModalComponent.html":{}}}],["api",{"_index":79,"title":{},"body":{"injectables/ApiService.html":{},"components/CategoryComponent.html":{},"components/HomeComponent.html":{},"components/MyLibraryComponent.html":{},"interfaces/RawgAchievementApi.html":{},"interfaces/RawgAchievementsApiResponse.html":{},"interfaces/RawgApiResponse.html":{},"interfaces/RawgGame.html":{}}}],["api_key",{"_index":11,"title":{},"body":{"injectables/ApiService.html":{},"interfaces/RawgAchievementApi.html":{},"interfaces/RawgAchievementsApiResponse.html":{},"interfaces/RawgApiResponse.html":{},"interfaces/RawgGame.html":{}}}],["apiservice",{"_index":1,"title":{"injectables/ApiService.html":{}},"body":{"injectables/ApiService.html":{},"components/CategoryComponent.html":{},"components/HomeComponent.html":{},"components/MyLibraryComponent.html":{},"interfaces/RawgAchievementApi.html":{},"interfaces/RawgAchievementsApiResponse.html":{},"interfaces/RawgApiResponse.html":{},"interfaces/RawgGame.html":{},"coverage.html":{}}}],["aplica",{"_index":1507,"title":{},"body":{"miscellaneous/functions.html":{}}}],["aplicación",{"_index":112,"title":{},"body":{"injectables/ApiService.html":{},"components/AppComponent.html":{},"components/FooterComponent.html":{},"interfaces/Game.html":{},"interfaces/GameAchievement.html":{},"injectables/GameService.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"interfaces/RawgAchievementApi.html":{},"interfaces/RawgAchievementsApiResponse.html":{},"interfaces/RawgApiResponse.html":{},"interfaces/RawgGame.html":{}}}],["aplicados",{"_index":737,"title":{},"body":{"components/CategoryComponent.html":{},"components/MyLibraryComponent.html":{}}}],["app",{"_index":293,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CategoryComponent.html":{},"components/ConfirmationModalComponent.html":{},"components/FooterComponent.html":{},"components/GameCardComponent.html":{},"components/GameDetailModalComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/MyLibraryComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/RegisterComponent.html":{},"components/UserProfileComponent.html":{}}}],["app.component",{"_index":373,"title":{},"body":{"modules/AppModule.html":{}}}],["app.component.css",{"_index":295,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.html",{"_index":297,"title":{},"body":{"components/AppComponent.html":{}}}],["appcomponent",{"_index":261,"title":{"components/AppComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CategoryComponent.html":{},"components/ConfirmationModalComponent.html":{},"components/FooterComponent.html":{},"components/GameCardComponent.html":{},"components/GameDetailModalComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/MyLibraryComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/RegisterComponent.html":{},"components/UserProfileComponent.html":{},"coverage.html":{},"overview.html":{}}}],["application",{"_index":1524,"title":{},"body":{"index.html":{}}}],["appmodule",{"_index":349,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["approutingmodule",{"_index":361,"title":{"modules/AppRoutingModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["aqu",{"_index":1168,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["array",{"_index":55,"title":{},"body":{"injectables/ApiService.html":{},"interfaces/Game.html":{},"interfaces/GameAchievement.html":{},"components/GameDetailModalComponent.html":{},"injectables/GameService.html":{},"interfaces/RawgAchievementApi.html":{},"interfaces/RawgAchievementsApiResponse.html":{},"interfaces/RawgApiResponse.html":{},"interfaces/RawgGame.html":{}}}],["array.from(genres).sort((a",{"_index":677,"title":{},"body":{"components/CategoryComponent.html":{}}}],["array.from(platforms).sort((a",{"_index":674,"title":{},"body":{"components/CategoryComponent.html":{}}}],["arriba",{"_index":1275,"title":{},"body":{"components/MyLibraryComponent.html":{}}}],["artifacts",{"_index":1535,"title":{},"body":{"index.html":{}}}],["asociados",{"_index":853,"title":{},"body":{"interfaces/Game.html":{},"interfaces/GameAchievement.html":{},"injectables/GameService.html":{}}}],["autenticación",{"_index":286,"title":{},"body":{"components/AppComponent.html":{},"components/GameDetailModalComponent.html":{},"components/HeaderComponent.html":{},"components/MyLibraryComponent.html":{}}}],["autenticado",{"_index":988,"title":{},"body":{"components/GameDetailModalComponent.html":{},"components/UserProfileComponent.html":{}}}],["autenticarse",{"_index":1121,"title":{},"body":{"components/LoginComponent.html":{}}}],["auth_storage_key",{"_index":455,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/User.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["authguard",{"_index":404,"title":{},"body":{"modules/AppRoutingModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["authservice",{"_index":301,"title":{"injectables/AuthService.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/AuthService.html":{},"components/CategoryComponent.html":{},"components/GameDetailModalComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/MyLibraryComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/RegisterComponent.html":{},"interfaces/User.html":{},"components/UserProfileComponent.html":{},"coverage.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["authservice.currentuser.pipe",{"_index":1581,"title":{},"body":{"miscellaneous/variables.html":{}}}],["authsubscription",{"_index":558,"title":{},"body":{"components/CategoryComponent.html":{},"components/LoginComponent.html":{},"components/MyLibraryComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/RegisterComponent.html":{},"components/UserProfileComponent.html":{}}}],["automatically",{"_index":1525,"title":{},"body":{"index.html":{}}}],["available",{"_index":1567,"title":{},"body":{"modules.html":{}}}],["availablegenres",{"_index":559,"title":{},"body":{"components/CategoryComponent.html":{}}}],["availableplatforms",{"_index":560,"title":{},"body":{"components/CategoryComponent.html":{}}}],["aventura",{"_index":1053,"title":{},"body":{"components/HeaderComponent.html":{},"components/HomeComponent.html":{}}}],["añade",{"_index":982,"title":{},"body":{"components/GameDetailModalComponent.html":{}}}],["añadido",{"_index":916,"title":{},"body":{"interfaces/Game.html":{},"interfaces/GameAchievement.html":{},"injectables/GameService.html":{}}}],["añadir",{"_index":549,"title":{},"body":{"components/CategoryComponent.html":{},"interfaces/Game.html":{},"interfaces/GameAchievement.html":{},"components/GameCardComponent.html":{},"injectables/GameService.html":{}}}],["años",{"_index":1389,"title":{},"body":{"components/RegisterComponent.html":{},"components/UserProfileComponent.html":{}}}],["b",{"_index":675,"title":{},"body":{"components/CategoryComponent.html":{}}}],["backdrop",{"_index":799,"title":{},"body":{"components/ConfirmationModalComponent.html":{},"components/GameDetailModalComponent.html":{}}}],["backdrop.remove",{"_index":801,"title":{},"body":{"components/ConfirmationModalComponent.html":{},"components/GameDetailModalComponent.html":{}}}],["background_image",{"_index":164,"title":{},"body":{"injectables/ApiService.html":{},"interfaces/RawgAchievementApi.html":{},"interfaces/RawgAchievementsApiResponse.html":{},"interfaces/RawgApiResponse.html":{},"interfaces/RawgGame.html":{}}}],["base",{"_index":277,"title":{},"body":{"components/AppComponent.html":{}}}],["base_url",{"_index":12,"title":{},"body":{"injectables/ApiService.html":{},"interfaces/RawgAchievementApi.html":{},"interfaces/RawgAchievementsApiResponse.html":{},"interfaces/RawgApiResponse.html":{},"interfaces/RawgGame.html":{}}}],["basándose",{"_index":684,"title":{},"body":{"components/CategoryComponent.html":{}}}],["behaviorsubject",{"_index":449,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/User.html":{}}}],["biblioteca",{"_index":550,"title":{},"body":{"components/CategoryComponent.html":{},"interfaces/Game.html":{},"interfaces/GameAchievement.html":{},"components/GameCardComponent.html":{},"components/GameDetailModalComponent.html":{},"injectables/GameService.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/MyLibraryComponent.html":{}}}],["bienvenido",{"_index":1292,"title":{},"body":{"components/MyLibraryComponent.html":{}}}],["birthday",{"_index":463,"title":{},"body":{"injectables/AuthService.html":{},"components/RegisterComponent.html":{},"interfaces/User.html":{},"components/UserProfileComponent.html":{}}}],["boolean",{"_index":122,"title":{},"body":{"injectables/ApiService.html":{},"injectables/AuthService.html":{},"interfaces/Game.html":{},"interfaces/GameAchievement.html":{},"components/GameCardComponent.html":{},"injectables/GameService.html":{},"components/MyLibraryComponent.html":{},"interfaces/RawgAchievementApi.html":{},"interfaces/RawgAchievementsApiResponse.html":{},"interfaces/RawgApiResponse.html":{},"interfaces/RawgGame.html":{},"interfaces/User.html":{}}}],["bootstrap",{"_index":353,"title":{},"body":{"modules/AppModule.html":{},"components/CategoryComponent.html":{},"components/ConfirmationModalComponent.html":{},"components/GameDetailModalComponent.html":{},"coverage.html":{},"dependencies.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["bootstrap.modal(this.modalelementref.nativeelement",{"_index":794,"title":{},"body":{"components/ConfirmationModalComponent.html":{},"components/GameDetailModalComponent.html":{}}}],["botones",{"_index":932,"title":{},"body":{"components/GameCardComponent.html":{}}}],["botón",{"_index":747,"title":{},"body":{"components/ConfirmationModalComponent.html":{}}}],["browse",{"_index":1565,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":370,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{},"modules.html":{}}}],["browsermodule",{"_index":368,"title":{},"body":{"modules/AppModule.html":{}}}],["bsmodal",{"_index":755,"title":{},"body":{"components/ConfirmationModalComponent.html":{},"components/GameDetailModalComponent.html":{}}}],["build",{"_index":1534,"title":{},"body":{"index.html":{}}}],["búsqueda",{"_index":84,"title":{},"body":{"injectables/ApiService.html":{},"components/CategoryComponent.html":{},"components/MyLibraryComponent.html":{},"interfaces/RawgAchievementApi.html":{},"interfaces/RawgAchievementsApiResponse.html":{},"interfaces/RawgApiResponse.html":{},"interfaces/RawgGame.html":{}}}],["cada",{"_index":1062,"title":{},"body":{"components/HomeComponent.html":{}}}],["cambiar",{"_index":1343,"title":{},"body":{"components/RecoverPasswordComponent.html":{}}}],["cambie",{"_index":1410,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["cambio",{"_index":991,"title":{},"body":{"components/GameDetailModalComponent.html":{}}}],["cambios",{"_index":977,"title":{},"body":{"components/GameDetailModalComponent.html":{},"components/UserProfileComponent.html":{}}}],["campo",{"_index":1161,"title":{},"body":{"components/LoginComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/RegisterComponent.html":{},"components/UserProfileComponent.html":{}}}],["campos",{"_index":163,"title":{},"body":{"injectables/ApiService.html":{},"components/LoginComponent.html":{},"interfaces/RawgAchievementApi.html":{},"interfaces/RawgAchievementsApiResponse.html":{},"interfaces/RawgApiResponse.html":{},"interfaces/RawgGame.html":{},"components/RecoverPasswordComponent.html":{},"components/RegisterComponent.html":{},"components/UserProfileComponent.html":{}}}],["canactivate",{"_index":412,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["canactivatefn",{"_index":1577,"title":{},"body":{"miscellaneous/variables.html":{}}}],["cancela",{"_index":750,"title":{},"body":{"components/ConfirmationModalComponent.html":{}}}],["cancelar",{"_index":808,"title":{},"body":{"components/ConfirmationModalComponent.html":{}}}],["capabilities",{"_index":1554,"title":{},"body":{"index.html":{}}}],["capitalizefirstletter",{"_index":570,"title":{},"body":{"components/CategoryComponent.html":{}}}],["capitalizefirstletter(str",{"_index":584,"title":{},"body":{"components/CategoryComponent.html":{}}}],["car",{"_index":1110,"title":{},"body":{"components/HomeComponent.html":{}}}],["caracter",{"_index":1339,"title":{},"body":{"components/RecoverPasswordComponent.html":{},"components/RegisterComponent.html":{},"components/UserProfileComponent.html":{}}}],["caracteres",{"_index":1337,"title":{},"body":{"components/RecoverPasswordComponent.html":{},"components/RegisterComponent.html":{},"components/UserProfileComponent.html":{}}}],["card",{"_index":940,"title":{},"body":{"components/GameCardComponent.html":{}}}],["card'},{'name",{"_index":328,"title":{},"body":{"components/AppComponent.html":{},"components/CategoryComponent.html":{},"components/ConfirmationModalComponent.html":{},"components/FooterComponent.html":{},"components/GameCardComponent.html":{},"components/GameDetailModalComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/MyLibraryComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/RegisterComponent.html":{},"components/UserProfileComponent.html":{}}}],["card.component",{"_index":378,"title":{},"body":{"modules/AppModule.html":{}}}],["card.component.css",{"_index":941,"title":{},"body":{"components/GameCardComponent.html":{}}}],["card.component.html",{"_index":942,"title":{},"body":{"components/GameCardComponent.html":{}}}],["card.component.ts",{"_index":926,"title":{},"body":{"components/GameCardComponent.html":{},"coverage.html":{}}}],["card.component.ts:26",{"_index":951,"title":{},"body":{"components/GameCardComponent.html":{}}}],["card.component.ts:27",{"_index":952,"title":{},"body":{"components/GameCardComponent.html":{}}}],["card.component.ts:29",{"_index":953,"title":{},"body":{"components/GameCardComponent.html":{}}}],["card.component.ts:30",{"_index":957,"title":{},"body":{"components/GameCardComponent.html":{}}}],["card.component.ts:31",{"_index":954,"title":{},"body":{"components/GameCardComponent.html":{}}}],["card.component.ts:32",{"_index":955,"title":{},"body":{"components/GameCardComponent.html":{}}}],["card.component.ts:33",{"_index":956,"title":{},"body":{"components/GameCardComponent.html":{}}}],["card.component.ts:34",{"_index":950,"title":{},"body":{"components/GameCardComponent.html":{}}}],["card/game",{"_index":377,"title":{},"body":{"modules/AppModule.html":{},"components/GameCardComponent.html":{},"coverage.html":{}}}],["carga",{"_index":1063,"title":{},"body":{"components/HomeComponent.html":{},"components/MyLibraryComponent.html":{},"components/UserProfileComponent.html":{}}}],["cargados",{"_index":665,"title":{},"body":{"components/CategoryComponent.html":{}}}],["cargar",{"_index":644,"title":{},"body":{"components/CategoryComponent.html":{},"components/HomeComponent.html":{},"components/MyLibraryComponent.html":{}}}],["case",{"_index":1100,"title":{},"body":{"components/HomeComponent.html":{}}}],["caso",{"_index":205,"title":{},"body":{"injectables/ApiService.html":{},"components/HomeComponent.html":{},"interfaces/RawgAchievementApi.html":{},"interfaces/RawgAchievementsApiResponse.html":{},"interfaces/RawgApiResponse.html":{},"interfaces/RawgGame.html":{}}}],["catcherror",{"_index":145,"title":{},"body":{"injectables/ApiService.html":{},"components/CategoryComponent.html":{},"components/MyLibraryComponent.html":{},"interfaces/RawgAchievementApi.html":{},"interfaces/RawgAchievementsApiResponse.html":{},"interfaces/RawgApiResponse.html":{},"interfaces/RawgGame.html":{}}}],["catcherror(err",{"_index":725,"title":{},"body":{"components/CategoryComponent.html":{},"components/MyLibraryComponent.html":{}}}],["catcherror(error",{"_index":198,"title":{},"body":{"injectables/ApiService.html":{},"interfaces/RawgAchievementApi.html":{},"interfaces/RawgAchievementsApiResponse.html":{},"interfaces/RawgApiResponse.html":{},"interfaces/RawgGame.html":{}}}],["categorias/:categoryslug",{"_index":416,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["categories",{"_index":1069,"title":{},"body":{"components/HomeComponent.html":{}}}],["categoriessubscription",{"_index":1070,"title":{},"body":{"components/HomeComponent.html":{}}}],["category",{"_index":554,"title":{},"body":{"components/CategoryComponent.html":{}}}],["category'},{'name",{"_index":321,"title":{},"body":{"components/AppComponent.html":{},"components/CategoryComponent.html":{},"components/ConfirmationModalComponent.html":{},"components/FooterComponent.html":{},"components/GameCardComponent.html":{},"components/GameDetailModalComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/MyLibraryComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/RegisterComponent.html":{},"components/UserProfileComponent.html":{}}}],["category.component.css",{"_index":555,"title":{},"body":{"components/CategoryComponent.html":{}}}],["category.component.html",{"_index":556,"title":{},"body":{"components/CategoryComponent.html":{}}}],["category.name",{"_index":1115,"title":{},"body":{"components/HomeComponent.html":{}}}],["category.tolowercase().replace(/\\s/g",{"_index":654,"title":{},"body":{"components/CategoryComponent.html":{}}}],["categorycomponent",{"_index":320,"title":{"components/CategoryComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/CategoryComponent.html":{},"components/ConfirmationModalComponent.html":{},"components/FooterComponent.html":{},"components/GameCardComponent.html":{},"components/GameDetailModalComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/MyLibraryComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/RegisterComponent.html":{},"components/UserProfileComponent.html":{},"coverage.html":{},"overview.html":{}}}],["categoryname",{"_index":561,"title":{},"body":{"components/CategoryComponent.html":{},"components/HomeComponent.html":{}}}],["categoryname.tolowercase",{"_index":1099,"title":{},"body":{"components/HomeComponent.html":{}}}],["categorynames",{"_index":1081,"title":{},"body":{"components/HomeComponent.html":{}}}],["categorynames.map(name",{"_index":1083,"title":{},"body":{"components/HomeComponent.html":{}}}],["categoryslug",{"_index":562,"title":{},"body":{"components/CategoryComponent.html":{}}}],["categoría",{"_index":543,"title":{},"body":{"components/CategoryComponent.html":{},"components/HomeComponent.html":{}}}],["categorías",{"_index":930,"title":{},"body":{"components/GameCardComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{}}}],["cerrar",{"_index":809,"title":{},"body":{"components/ConfirmationModalComponent.html":{},"components/GameDetailModalComponent.html":{},"components/HeaderComponent.html":{}}}],["change",{"_index":1527,"title":{},"body":{"index.html":{}}}],["check",{"_index":1559,"title":{},"body":{"index.html":{}}}],["checkbox",{"_index":992,"title":{},"body":{"components/GameDetailModalComponent.html":{}}}],["chess",{"_index":1093,"title":{},"body":{"components/HomeComponent.html":{}}}],["choice",{"_index":1548,"title":{},"body":{"index.html":{}}}],["cierra",{"_index":797,"title":{},"body":{"components/ConfirmationModalComponent.html":{}}}],["class",{"_index":176,"title":{},"body":{"injectables/ApiService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthService.html":{},"components/CategoryComponent.html":{},"components/ConfirmationModalComponent.html":{},"components/FooterComponent.html":{},"interfaces/Game.html":{},"interfaces/GameAchievement.html":{},"components/GameCardComponent.html":{},"components/GameDetailModalComponent.html":{},"injectables/GameService.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/MyLibraryComponent.html":{},"interfaces/RawgAchievementApi.html":{},"interfaces/RawgAchievementsApiResponse.html":{},"interfaces/RawgApiResponse.html":{},"interfaces/RawgGame.html":{},"components/RecoverPasswordComponent.html":{},"components/RegisterComponent.html":{},"interfaces/User.html":{},"components/UserProfileComponent.html":{}}}],["clave",{"_index":649,"title":{},"body":{"components/CategoryComponent.html":{}}}],["claves",{"_index":453,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/User.html":{}}}],["cli",{"_index":1513,"title":{},"body":{"index.html":{}}}],["clic",{"_index":706,"title":{},"body":{"components/CategoryComponent.html":{},"components/ConfirmationModalComponent.html":{}}}],["cluster_appmodule",{"_index":356,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_bootstrap",{"_index":358,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_declarations",{"_index":360,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":357,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":359,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["code",{"_index":1529,"title":{},"body":{"index.html":{}}}],["coinciden",{"_index":1342,"title":{},"body":{"components/RecoverPasswordComponent.html":{},"components/RegisterComponent.html":{}}}],["coma",{"_index":90,"title":{},"body":{"injectables/ApiService.html":{},"interfaces/RawgAchievementApi.html":{},"interfaces/RawgAchievementsApiResponse.html":{},"interfaces/RawgApiResponse.html":{},"interfaces/RawgGame.html":{}}}],["command",{"_index":1549,"title":{},"body":{"index.html":{}}}],["como",{"_index":272,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Game.html":{},"interfaces/GameAchievement.html":{},"injectables/GameService.html":{},"components/MyLibraryComponent.html":{}}}],["comodín",{"_index":418,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["compatible",{"_index":115,"title":{},"body":{"injectables/ApiService.html":{},"interfaces/RawgAchievementApi.html":{},"interfaces/RawgAchievementsApiResponse.html":{},"interfaces/RawgApiResponse.html":{},"interfaces/RawgGame.html":{}}}],["completa",{"_index":67,"title":{},"body":{"injectables/ApiService.html":{},"interfaces/Game.html":{},"interfaces/GameAchievement.html":{},"injectables/GameService.html":{},"components/LoginComponent.html":{},"interfaces/RawgAchievementApi.html":{},"interfaces/RawgAchievementsApiResponse.html":{},"interfaces/RawgApiResponse.html":{},"interfaces/RawgGame.html":{}}}],["completado",{"_index":841,"title":{},"body":{"interfaces/Game.html":{},"interfaces/GameAchievement.html":{},"components/GameDetailModalComponent.html":{},"injectables/GameService.html":{}}}],["completar",{"_index":899,"title":{},"body":{"interfaces/Game.html":{},"interfaces/GameAchievement.html":{},"injectables/GameService.html":{}}}],["completed",{"_index":117,"title":{},"body":{"injectables/ApiService.html":{},"interfaces/Game.html":{},"interfaces/GameAchievement.html":{},"components/GameDetailModalComponent.html":{},"injectables/GameService.html":{},"interfaces/RawgAchievementApi.html":{},"interfaces/RawgAchievementsApiResponse.html":{},"interfaces/RawgApiResponse.html":{},"interfaces/RawgGame.html":{}}}],["completo",{"_index":1384,"title":{},"body":{"components/RegisterComponent.html":{},"components/UserProfileComponent.html":{}}}],["completos",{"_index":62,"title":{},"body":{"injectables/ApiService.html":{},"components/CategoryComponent.html":{},"components/GameDetailModalComponent.html":{},"components/MyLibraryComponent.html":{},"interfaces/RawgAchievementApi.html":{},"interfaces/RawgAchievementsApiResponse.html":{},"interfaces/RawgApiResponse.html":{},"interfaces/RawgGame.html":{}}}],["component",{"_index":260,"title":{"components/AppComponent.html":{},"components/CategoryComponent.html":{},"components/ConfirmationModalComponent.html":{},"components/FooterComponent.html":{},"components/GameCardComponent.html":{},"components/GameDetailModalComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/MyLibraryComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/RegisterComponent.html":{},"components/UserProfileComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/CategoryComponent.html":{},"components/ConfirmationModalComponent.html":{},"components/FooterComponent.html":{},"components/GameCardComponent.html":{},"components/GameDetailModalComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/MyLibraryComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/RegisterComponent.html":{},"components/UserProfileComponent.html":{},"coverage.html":{},"index.html":{}}}],["component_template",{"_index":318,"title":{},"body":{"components/AppComponent.html":{},"components/CategoryComponent.html":{},"components/ConfirmationModalComponent.html":{},"components/FooterComponent.html":{},"components/GameCardComponent.html":{},"components/GameDetailModalComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/MyLibraryComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/RegisterComponent.html":{},"components/UserProfileComponent.html":{}}}],["componente",{"_index":219,"title":{},"body":{"injectables/ApiService.html":{},"components/AppComponent.html":{},"components/CategoryComponent.html":{},"components/ConfirmationModalComponent.html":{},"components/FooterComponent.html":{},"components/GameCardComponent.html":{},"components/GameDetailModalComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/MyLibraryComponent.html":{},"interfaces/RawgAchievementApi.html":{},"interfaces/RawgAchievementsApiResponse.html":{},"interfaces/RawgApiResponse.html":{},"interfaces/RawgGame.html":{},"components/RecoverPasswordComponent.html":{},"components/RegisterComponent.html":{},"components/UserProfileComponent.html":{}}}],["componentes",{"_index":862,"title":{},"body":{"interfaces/Game.html":{},"interfaces/GameAchievement.html":{},"injectables/GameService.html":{}}}],["components",{"_index":262,"title":{},"body":{"components/AppComponent.html":{},"components/CategoryComponent.html":{},"components/ConfirmationModalComponent.html":{},"components/FooterComponent.html":{},"components/GameCardComponent.html":{},"components/GameDetailModalComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/MyLibraryComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/RegisterComponent.html":{},"components/UserProfileComponent.html":{},"overview.html":{}}}],["con",{"_index":102,"title":{},"body":{"injectables/ApiService.html":{},"components/AppComponent.html":{},"components/CategoryComponent.html":{},"interfaces/Game.html":{},"interfaces/GameAchievement.html":{},"components/GameDetailModalComponent.html":{},"injectables/GameService.html":{},"components/MyLibraryComponent.html":{},"interfaces/RawgAchievementApi.html":{},"interfaces/RawgAchievementsApiResponse.html":{},"interfaces/RawgApiResponse.html":{},"interfaces/RawgGame.html":{},"components/RecoverPasswordComponent.html":{},"components/RegisterComponent.html":{},"components/UserProfileComponent.html":{}}}],["configurando",{"_index":276,"title":{},"body":{"components/AppComponent.html":{}}}],["configurar",{"_index":743,"title":{},"body":{"components/ConfirmationModalComponent.html":{}}}],["confirma",{"_index":749,"title":{},"body":{"components/ConfirmationModalComponent.html":{}}}],["confirmación",{"_index":741,"title":{},"body":{"components/ConfirmationModalComponent.html":{},"components/MyLibraryComponent.html":{},"miscellaneous/functions.html":{}}}],["confirmar",{"_index":767,"title":{},"body":{"components/ConfirmationModalComponent.html":{},"components/MyLibraryComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/RegisterComponent.html":{}}}],["confirmation",{"_index":323,"title":{},"body":{"components/AppComponent.html":{},"components/CategoryComponent.html":{},"components/ConfirmationModalComponent.html":{},"components/FooterComponent.html":{},"components/GameCardComponent.html":{},"components/GameDetailModalComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/MyLibraryComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/RegisterComponent.html":{},"components/UserProfileComponent.html":{}}}],["confirmationmodal",{"_index":1182,"title":{},"body":{"components/MyLibraryComponent.html":{}}}],["confirmationmodalcomponent",{"_index":322,"title":{"components/ConfirmationModalComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CategoryComponent.html":{},"components/ConfirmationModalComponent.html":{},"components/FooterComponent.html":{},"components/GameCardComponent.html":{},"components/GameDetailModalComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/MyLibraryComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/RegisterComponent.html":{},"components/UserProfileComponent.html":{},"coverage.html":{},"overview.html":{}}}],["confirmationmodalconfirmtext",{"_index":1183,"title":{},"body":{"components/MyLibraryComponent.html":{}}}],["confirmationmodalmessage",{"_index":1184,"title":{},"body":{"components/MyLibraryComponent.html":{}}}],["confirmationmodaltitle",{"_index":1185,"title":{},"body":{"components/MyLibraryComponent.html":{}}}],["confirmbuttontext",{"_index":763,"title":{},"body":{"components/ConfirmationModalComponent.html":{}}}],["confirmed",{"_index":765,"title":{},"body":{"components/ConfirmationModalComponent.html":{},"components/MyLibraryComponent.html":{}}}],["confirmpassword",{"_index":1321,"title":{},"body":{"components/RecoverPasswordComponent.html":{},"components/RegisterComponent.html":{}}}],["confirmpasswordcontrolname",{"_index":1504,"title":{},"body":{"miscellaneous/functions.html":{}}}],["console.error('error",{"_index":199,"title":{},"body":{"injectables/ApiService.html":{},"components/CategoryComponent.html":{},"components/HomeComponent.html":{},"components/MyLibraryComponent.html":{},"interfaces/RawgAchievementApi.html":{},"interfaces/RawgAchievementsApiResponse.html":{},"interfaces/RawgApiResponse.html":{},"interfaces/RawgGame.html":{}}}],["console.error(`error",{"_index":215,"title":{},"body":{"injectables/ApiService.html":{},"interfaces/RawgAchievementApi.html":{},"interfaces/RawgAchievementsApiResponse.html":{},"interfaces/RawgApiResponse.html":{},"interfaces/RawgGame.html":{}}}],["console.log(this.registerform.invalid",{"_index":1378,"title":{},"body":{"components/RegisterComponent.html":{}}}],["console.warn('no",{"_index":715,"title":{},"body":{"components/CategoryComponent.html":{}}}],["const",{"_index":206,"title":{},"body":{"injectables/ApiService.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthService.html":{},"components/CategoryComponent.html":{},"components/ConfirmationModalComponent.html":{},"interfaces/Game.html":{},"interfaces/GameAchievement.html":{},"components/GameDetailModalComponent.html":{},"injectables/GameService.html":{},"components/LoginComponent.html":{},"components/MyLibraryComponent.html":{},"interfaces/RawgAchievementApi.html":{},"interfaces/RawgAchievementsApiResponse.html":{},"interfaces/RawgApiResponse.html":{},"interfaces/RawgGame.html":{},"components/RecoverPasswordComponent.html":{},"components/RegisterComponent.html":{},"interfaces/User.html":{},"components/UserProfileComponent.html":{},"miscellaneous/variables.html":{}}}],["constructor",{"_index":21,"title":{},"body":{"injectables/ApiService.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/CategoryComponent.html":{},"components/ConfirmationModalComponent.html":{},"interfaces/Game.html":{},"interfaces/GameAchievement.html":{},"components/GameCardComponent.html":{},"components/GameDetailModalComponent.html":{},"injectables/GameService.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/MyLibraryComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/RegisterComponent.html":{},"interfaces/User.html":{},"components/UserProfileComponent.html":{}}}],["constructor(authservice",{"_index":300,"title":{},"body":{"components/AppComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/MyLibraryComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/RegisterComponent.html":{},"components/UserProfileComponent.html":{}}}],["constructor(gameservice",{"_index":973,"title":{},"body":{"components/GameDetailModalComponent.html":{}}}],["constructor(http",{"_index":22,"title":{},"body":{"injectables/ApiService.html":{}}}],["constructor(private",{"_index":177,"title":{},"body":{"injectables/ApiService.html":{},"components/AppComponent.html":{},"interfaces/Game.html":{},"interfaces/GameAchievement.html":{},"injectables/GameService.html":{},"interfaces/RawgAchievementApi.html":{},"interfaces/RawgAchievementsApiResponse.html":{},"interfaces/RawgApiResponse.html":{},"interfaces/RawgGame.html":{}}}],["constructor(public",{"_index":1049,"title":{},"body":{"components/HeaderComponent.html":{}}}],["constructor(route",{"_index":578,"title":{},"body":{"components/CategoryComponent.html":{}}}],["contenido",{"_index":279,"title":{},"body":{"components/AppComponent.html":{}}}],["contiene",{"_index":812,"title":{},"body":{"components/FooterComponent.html":{}}}],["contrasena",{"_index":516,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/User.html":{}}}],["contraseña",{"_index":503,"title":{},"body":{"injectables/AuthService.html":{},"components/LoginComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/RegisterComponent.html":{},"interfaces/User.html":{},"components/UserProfileComponent.html":{},"miscellaneous/functions.html":{}}}],["contraseñas",{"_index":1341,"title":{},"body":{"components/RecoverPasswordComponent.html":{},"components/RegisterComponent.html":{}}}],["control",{"_index":1506,"title":{},"body":{"miscellaneous/functions.html":{}}}],["controles",{"_index":937,"title":{},"body":{"components/GameCardComponent.html":{}}}],["copy",{"_index":818,"title":{},"body":{"components/FooterComponent.html":{}}}],["copyright",{"_index":814,"title":{},"body":{"components/FooterComponent.html":{}}}],["core/auth/auth.service",{"_index":308,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{}}}],["correctamente",{"_index":527,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Game.html":{},"interfaces/GameAchievement.html":{},"injectables/GameService.html":{},"components/LoginComponent.html":{},"interfaces/User.html":{}}}],["correo",{"_index":1301,"title":{},"body":{"components/RecoverPasswordComponent.html":{},"components/RegisterComponent.html":{},"components/UserProfileComponent.html":{}}}],["count",{"_index":153,"title":{},"body":{"injectables/ApiService.html":{},"interfaces/RawgAchievementApi.html":{},"interfaces/RawgAchievementsApiResponse.html":{},"interfaces/RawgApiResponse.html":{},"interfaces/RawgGame.html":{}}}],["coverage",{"_index":1436,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["crear",{"_index":1347,"title":{},"body":{"components/RegisterComponent.html":{}}}],["credenciales",{"_index":1120,"title":{},"body":{"components/LoginComponent.html":{}}}],["criterios",{"_index":685,"title":{},"body":{"components/CategoryComponent.html":{},"components/MyLibraryComponent.html":{}}}],["crosshairs",{"_index":1106,"title":{},"body":{"components/HomeComponent.html":{}}}],["crud",{"_index":832,"title":{},"body":{"interfaces/Game.html":{},"interfaces/GameAchievement.html":{},"injectables/GameService.html":{}}}],["cuando",{"_index":704,"title":{},"body":{"components/CategoryComponent.html":{},"components/ConfirmationModalComponent.html":{},"components/GameDetailModalComponent.html":{},"components/UserProfileComponent.html":{}}}],["cuenta",{"_index":1166,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["cumpla",{"_index":1304,"title":{},"body":{"components/RecoverPasswordComponent.html":{}}}],["current_user_key",{"_index":457,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/User.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["currentuser",{"_index":298,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/CategoryComponent.html":{},"components/GameDetailModalComponent.html":{},"components/MyLibraryComponent.html":{},"interfaces/User.html":{},"components/UserProfileComponent.html":{}}}],["currentuser.email",{"_index":524,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/User.html":{}}}],["currentuser.username",{"_index":535,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/User.html":{}}}],["currentusersubject",{"_index":424,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/User.html":{}}}],["cuyos",{"_index":998,"title":{},"body":{"components/GameDetailModalComponent.html":{}}}],["date.now",{"_index":886,"title":{},"body":{"interfaces/Game.html":{},"interfaces/GameAchievement.html":{},"injectables/GameService.html":{}}}],["date.parse(user.birthday",{"_index":1416,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["datos",{"_index":645,"title":{},"body":{"components/CategoryComponent.html":{},"interfaces/Game.html":{},"interfaces/GameAchievement.html":{},"injectables/GameService.html":{},"components/RegisterComponent.html":{},"components/UserProfileComponent.html":{}}}],["de",{"_index":38,"title":{},"body":{"injectables/ApiService.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/CategoryComponent.html":{},"components/ConfirmationModalComponent.html":{},"components/FooterComponent.html":{},"interfaces/Game.html":{},"interfaces/GameAchievement.html":{},"components/GameCardComponent.html":{},"components/GameDetailModalComponent.html":{},"injectables/GameService.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/MyLibraryComponent.html":{},"interfaces/RawgAchievementApi.html":{},"interfaces/RawgAchievementsApiResponse.html":{},"interfaces/RawgApiResponse.html":{},"interfaces/RawgGame.html":{},"components/RecoverPasswordComponent.html":{},"components/RegisterComponent.html":{},"interfaces/User.html":{},"components/UserProfileComponent.html":{},"miscellaneous/functions.html":{}}}],["debe",{"_index":133,"title":{},"body":{"injectables/ApiService.html":{},"interfaces/RawgAchievementApi.html":{},"interfaces/RawgAchievementsApiResponse.html":{},"interfaces/RawgApiResponse.html":{},"interfaces/RawgGame.html":{},"components/RecoverPasswordComponent.html":{},"components/RegisterComponent.html":{},"components/UserProfileComponent.html":{}}}],["debería",{"_index":1273,"title":{},"body":{"components/MyLibraryComponent.html":{}}}],["debes",{"_index":1009,"title":{},"body":{"components/GameDetailModalComponent.html":{},"components/LoginComponent.html":{},"components/MyLibraryComponent.html":{},"components/RegisterComponent.html":{},"components/UserProfileComponent.html":{}}}],["debido",{"_index":718,"title":{},"body":{"components/CategoryComponent.html":{}}}],["declarations",{"_index":352,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["declare",{"_index":623,"title":{},"body":{"components/CategoryComponent.html":{},"components/ConfirmationModalComponent.html":{},"components/GameDetailModalComponent.html":{}}}],["decorators",{"_index":608,"title":{},"body":{"components/CategoryComponent.html":{},"components/ConfirmationModalComponent.html":{},"components/GameDetailModalComponent.html":{},"components/MyLibraryComponent.html":{}}}],["default",{"_index":80,"title":{},"body":{"injectables/ApiService.html":{},"components/AppComponent.html":{},"components/CategoryComponent.html":{},"components/ConfirmationModalComponent.html":{},"components/GameCardComponent.html":{},"components/GameDetailModalComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/MyLibraryComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/RegisterComponent.html":{},"components/UserProfileComponent.html":{},"miscellaneous/variables.html":{}}}],["defecto",{"_index":119,"title":{},"body":{"injectables/ApiService.html":{},"interfaces/RawgAchievementApi.html":{},"interfaces/RawgAchievementsApiResponse.html":{},"interfaces/RawgApiResponse.html":{},"interfaces/RawgGame.html":{}}}],["define",{"_index":148,"title":{},"body":{"injectables/ApiService.html":{},"interfaces/Game.html":{},"interfaces/GameAchievement.html":{},"injectables/GameService.html":{},"interfaces/RawgAchievementApi.html":{},"interfaces/RawgAchievementsApiResponse.html":{},"interfaces/RawgApiResponse.html":{},"interfaces/RawgGame.html":{}}}],["defined",{"_index":24,"title":{},"body":{"injectables/ApiService.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/CategoryComponent.html":{},"components/ConfirmationModalComponent.html":{},"components/GameCardComponent.html":{},"components/GameDetailModalComponent.html":{},"injectables/GameService.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/MyLibraryComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/RegisterComponent.html":{},"components/UserProfileComponent.html":{}}}],["del",{"_index":50,"title":{},"body":{"injectables/ApiService.html":{},"components/AppComponent.html":{},"components/CategoryComponent.html":{},"components/ConfirmationModalComponent.html":{},"interfaces/Game.html":{},"interfaces/GameAchievement.html":{},"components/GameCardComponent.html":{},"components/GameDetailModalComponent.html":{},"injectables/GameService.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/MyLibraryComponent.html":{},"interfaces/RawgAchievementApi.html":{},"interfaces/RawgAchievementsApiResponse.html":{},"interfaces/RawgApiResponse.html":{},"interfaces/RawgGame.html":{},"components/UserProfileComponent.html":{},"miscellaneous/functions.html":{}}}],["deletegame",{"_index":945,"title":{},"body":{"components/GameCardComponent.html":{},"injectables/GameService.html":{}}}],["deletegame(username",{"_index":924,"title":{},"body":{"interfaces/Game.html":{},"interfaces/GameAchievement.html":{},"injectables/GameService.html":{}}}],["denegado",{"_index":1586,"title":{},"body":{"miscellaneous/variables.html":{}}}],["dentro",{"_index":990,"title":{},"body":{"components/GameDetailModalComponent.html":{}}}],["dependencies",{"_index":351,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"dependencies.html":{},"overview.html":{}}}],["derechos",{"_index":821,"title":{},"body":{"components/FooterComponent.html":{}}}],["derrota",{"_index":905,"title":{},"body":{"interfaces/Game.html":{},"interfaces/GameAchievement.html":{},"injectables/GameService.html":{}}}],["derrotar",{"_index":902,"title":{},"body":{"interfaces/Game.html":{},"interfaces/GameAchievement.html":{},"injectables/GameService.html":{}}}],["desconocida",{"_index":908,"title":{},"body":{"interfaces/Game.html":{},"interfaces/GameAchievement.html":{},"injectables/GameService.html":{}}}],["descripción",{"_index":66,"title":{},"body":{"injectables/ApiService.html":{},"interfaces/Game.html":{},"interfaces/GameAchievement.html":{},"components/GameDetailModalComponent.html":{},"injectables/GameService.html":{},"interfaces/RawgAchievementApi.html":{},"interfaces/RawgAchievementsApiResponse.html":{},"interfaces/RawgApiResponse.html":{},"interfaces/RawgGame.html":{}}}],["description",{"_index":47,"title":{},"body":{"injectables/ApiService.html":{},"components/AppComponent.html":{},"components/CategoryComponent.html":{},"components/ConfirmationModalComponent.html":{},"components/FooterComponent.html":{},"interfaces/Game.html":{},"interfaces/GameAchievement.html":{},"components/GameCardComponent.html":{},"components/GameDetailModalComponent.html":{},"injectables/GameService.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/MyLibraryComponent.html":{},"interfaces/RawgAchievementApi.html":{},"interfaces/RawgAchievementsApiResponse.html":{},"interfaces/RawgApiResponse.html":{},"interfaces/RawgGame.html":{},"components/RecoverPasswordComponent.html":{},"components/RegisterComponent.html":{},"components/UserProfileComponent.html":{},"miscellaneous/functions.html":{}}}],["description.length",{"_index":235,"title":{},"body":{"injectables/ApiService.html":{},"interfaces/RawgAchievementApi.html":{},"interfaces/RawgAchievementsApiResponse.html":{},"interfaces/RawgApiResponse.html":{},"interfaces/RawgGame.html":{}}}],["description.substring(0",{"_index":233,"title":{},"body":{"injectables/ApiService.html":{},"interfaces/RawgAchievementApi.html":{},"interfaces/RawgAchievementsApiResponse.html":{},"interfaces/RawgApiResponse.html":{},"interfaces/RawgGame.html":{}}}],["description_raw",{"_index":135,"title":{},"body":{"injectables/ApiService.html":{},"interfaces/RawgAchievementApi.html":{},"interfaces/RawgAchievementsApiResponse.html":{},"interfaces/RawgApiResponse.html":{},"interfaces/RawgGame.html":{}}}],["desde",{"_index":97,"title":{},"body":{"injectables/ApiService.html":{},"components/GameDetailModalComponent.html":{},"components/HomeComponent.html":{},"components/MyLibraryComponent.html":{},"interfaces/RawgAchievementApi.html":{},"interfaces/RawgAchievementsApiResponse.html":{},"interfaces/RawgApiResponse.html":{},"interfaces/RawgGame.html":{}}}],["deshacer",{"_index":1269,"title":{},"body":{"components/MyLibraryComponent.html":{}}}],["después",{"_index":788,"title":{},"body":{"components/ConfirmationModalComponent.html":{},"components/GameDetailModalComponent.html":{}}}],["desuscribe",{"_index":1429,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["detail",{"_index":330,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CategoryComponent.html":{},"components/ConfirmationModalComponent.html":{},"components/FooterComponent.html":{},"components/GameCardComponent.html":{},"components/GameDetailModalComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/MyLibraryComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/RegisterComponent.html":{},"components/UserProfileComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["details",{"_index":216,"title":{},"body":{"injectables/ApiService.html":{},"components/CategoryComponent.html":{},"interfaces/RawgAchievementApi.html":{},"interfaces/RawgAchievementsApiResponse.html":{},"interfaces/RawgApiResponse.html":{},"interfaces/RawgGame.html":{}}}],["detallada",{"_index":846,"title":{},"body":{"interfaces/Game.html":{},"interfaces/GameAchievement.html":{},"injectables/GameService.html":{}}}],["detalle",{"_index":214,"title":{},"body":{"injectables/ApiService.html":{},"interfaces/RawgAchievementApi.html":{},"interfaces/RawgAchievementsApiResponse.html":{},"interfaces/RawgApiResponse.html":{},"interfaces/RawgGame.html":{}}}],["detalles",{"_index":61,"title":{},"body":{"injectables/ApiService.html":{},"components/CategoryComponent.html":{},"interfaces/Game.html":{},"interfaces/GameAchievement.html":{},"components/GameCardComponent.html":{},"components/GameDetailModalComponent.html":{},"injectables/GameService.html":{},"components/MyLibraryComponent.html":{},"interfaces/RawgAchievementApi.html":{},"interfaces/RawgAchievementsApiResponse.html":{},"interfaces/RawgApiResponse.html":{},"interfaces/RawgGame.html":{}}}],["dev",{"_index":1521,"title":{},"body":{"index.html":{}}}],["development",{"_index":1516,"title":{},"body":{"index.html":{}}}],["diferente",{"_index":531,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/User.html":{}}}],["directive",{"_index":316,"title":{},"body":{"components/AppComponent.html":{},"components/CategoryComponent.html":{},"components/ConfirmationModalComponent.html":{},"components/FooterComponent.html":{},"components/GameCardComponent.html":{},"components/GameDetailModalComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/MyLibraryComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/RegisterComponent.html":{},"components/UserProfileComponent.html":{}}}],["directives",{"_index":346,"title":{},"body":{"components/AppComponent.html":{},"components/CategoryComponent.html":{},"components/ConfirmationModalComponent.html":{},"components/FooterComponent.html":{},"components/GameCardComponent.html":{},"components/GameDetailModalComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/MyLibraryComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/RegisterComponent.html":{},"components/UserProfileComponent.html":{}}}],["directive|pipe|service|class|guard|interface|enum|module",{"_index":1533,"title":{},"body":{"index.html":{}}}],["directory",{"_index":1538,"title":{},"body":{"index.html":{}}}],["disabled",{"_index":1415,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["disponible",{"_index":70,"title":{},"body":{"injectables/ApiService.html":{},"interfaces/Game.html":{},"interfaces/GameAchievement.html":{},"injectables/GameService.html":{},"interfaces/RawgAchievementApi.html":{},"interfaces/RawgAchievementsApiResponse.html":{},"interfaces/RawgApiResponse.html":{},"interfaces/RawgGame.html":{}}}],["disponibles",{"_index":100,"title":{},"body":{"injectables/ApiService.html":{},"components/GameDetailModalComponent.html":{},"interfaces/RawgAchievementApi.html":{},"interfaces/RawgAchievementsApiResponse.html":{},"interfaces/RawgApiResponse.html":{},"interfaces/RawgGame.html":{}}}],["dist",{"_index":1537,"title":{},"body":{"index.html":{}}}],["document.queryselector('.modal",{"_index":800,"title":{},"body":{"components/ConfirmationModalComponent.html":{},"components/GameDetailModalComponent.html":{}}}],["documentation",{"_index":1437,"title":{},"body":{"coverage.html":{}}}],["dom",{"_index":265,"title":{},"body":{"components/AppComponent.html":{},"components/CategoryComponent.html":{},"components/ConfirmationModalComponent.html":{},"components/FooterComponent.html":{},"components/GameCardComponent.html":{},"components/GameDetailModalComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/MyLibraryComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/RegisterComponent.html":{},"components/UserProfileComponent.html":{}}}],["dynamic",{"_index":1483,"title":{},"body":{"dependencies.html":{}}}],["e2e",{"_index":1547,"title":{},"body":{"index.html":{}}}],["e8efc69ecead49639193319812de4f90",{"_index":136,"title":{},"body":{"injectables/ApiService.html":{},"interfaces/RawgAchievementApi.html":{},"interfaces/RawgAchievementsApiResponse.html":{},"interfaces/RawgApiResponse.html":{},"interfaces/RawgGame.html":{}}}],["edad",{"_index":1500,"title":{},"body":{"miscellaneous/functions.html":{}}}],["edición",{"_index":1393,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["editar",{"_index":1434,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["ejecuta",{"_index":1005,"title":{},"body":{"components/GameDetailModalComponent.html":{}}}],["el",{"_index":49,"title":{},"body":{"injectables/ApiService.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/CategoryComponent.html":{},"components/ConfirmationModalComponent.html":{},"components/FooterComponent.html":{},"interfaces/Game.html":{},"interfaces/GameAchievement.html":{},"components/GameDetailModalComponent.html":{},"injectables/GameService.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/MyLibraryComponent.html":{},"interfaces/RawgAchievementApi.html":{},"interfaces/RawgAchievementsApiResponse.html":{},"interfaces/RawgApiResponse.html":{},"interfaces/RawgGame.html":{},"components/RecoverPasswordComponent.html":{},"components/RegisterComponent.html":{},"interfaces/User.html":{},"components/UserProfileComponent.html":{},"miscellaneous/functions.html":{}}}],["electrónico",{"_index":1302,"title":{},"body":{"components/RecoverPasswordComponent.html":{},"components/RegisterComponent.html":{},"components/UserProfileComponent.html":{}}}],["element",{"_index":315,"title":{},"body":{"components/AppComponent.html":{},"components/CategoryComponent.html":{},"components/ConfirmationModalComponent.html":{},"components/FooterComponent.html":{},"components/GameCardComponent.html":{},"components/GameDetailModalComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/MyLibraryComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/RegisterComponent.html":{},"components/UserProfileComponent.html":{}}}],["elemento",{"_index":1001,"title":{},"body":{"components/GameDetailModalComponent.html":{}}}],["elementref",{"_index":780,"title":{},"body":{"components/ConfirmationModalComponent.html":{},"components/GameDetailModalComponent.html":{}}}],["elimina",{"_index":923,"title":{},"body":{"interfaces/Game.html":{},"interfaces/GameAchievement.html":{},"injectables/GameService.html":{}}}],["eliminaciones",{"_index":1178,"title":{},"body":{"components/MyLibraryComponent.html":{}}}],["eliminar",{"_index":833,"title":{},"body":{"interfaces/Game.html":{},"interfaces/GameAchievement.html":{},"injectables/GameService.html":{},"components/MyLibraryComponent.html":{}}}],["email",{"_index":462,"title":{},"body":{"injectables/AuthService.html":{},"components/RecoverPasswordComponent.html":{},"components/RegisterComponent.html":{},"interfaces/User.html":{},"components/UserProfileComponent.html":{}}}],["emailvalidator",{"_index":1317,"title":{},"body":{"components/RecoverPasswordComponent.html":{},"components/RegisterComponent.html":{},"components/UserProfileComponent.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["emite",{"_index":748,"title":{},"body":{"components/ConfirmationModalComponent.html":{},"components/GameDetailModalComponent.html":{}}}],["emiten",{"_index":933,"title":{},"body":{"components/GameCardComponent.html":{}}}],["emptystringvalidator",{"_index":1144,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/UserProfileComponent.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["en",{"_index":51,"title":{},"body":{"injectables/ApiService.html":{},"injectables/AuthService.html":{},"components/CategoryComponent.html":{},"components/ConfirmationModalComponent.html":{},"interfaces/Game.html":{},"interfaces/GameAchievement.html":{},"components/GameCardComponent.html":{},"components/GameDetailModalComponent.html":{},"injectables/GameService.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/MyLibraryComponent.html":{},"interfaces/RawgAchievementApi.html":{},"interfaces/RawgAchievementsApiResponse.html":{},"interfaces/RawgApiResponse.html":{},"interfaces/RawgGame.html":{},"interfaces/User.html":{},"components/UserProfileComponent.html":{}}}],["encabezado",{"_index":278,"title":{},"body":{"components/AppComponent.html":{},"components/HeaderComponent.html":{}}}],["encontrado",{"_index":521,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/User.html":{}}}],["encontraron",{"_index":736,"title":{},"body":{"components/CategoryComponent.html":{},"components/MyLibraryComponent.html":{}}}],["end",{"_index":1546,"title":{},"body":{"index.html":{}}}],["endpoint",{"_index":130,"title":{},"body":{"injectables/ApiService.html":{},"interfaces/RawgAchievementApi.html":{},"interfaces/RawgAchievementsApiResponse.html":{},"interfaces/RawgApiResponse.html":{},"interfaces/RawgGame.html":{}}}],["enlaces",{"_index":1038,"title":{},"body":{"components/HeaderComponent.html":{}}}],["entrada",{"_index":274,"title":{},"body":{"components/AppComponent.html":{},"components/MyLibraryComponent.html":{}}}],["entrar",{"_index":1163,"title":{},"body":{"components/LoginComponent.html":{}}}],["enviar",{"_index":1329,"title":{},"body":{"components/RecoverPasswordComponent.html":{},"components/RegisterComponent.html":{}}}],["err",{"_index":643,"title":{},"body":{"components/CategoryComponent.html":{},"components/HomeComponent.html":{},"components/MyLibraryComponent.html":{}}}],["error",{"_index":202,"title":{},"body":{"injectables/ApiService.html":{},"components/CategoryComponent.html":{},"components/GameDetailModalComponent.html":{},"components/HomeComponent.html":{},"components/MyLibraryComponent.html":{},"interfaces/RawgAchievementApi.html":{},"interfaces/RawgAchievementsApiResponse.html":{},"interfaces/RawgApiResponse.html":{},"interfaces/RawgGame.html":{},"components/RecoverPasswordComponent.html":{},"components/RegisterComponent.html":{},"components/UserProfileComponent.html":{}}}],["es",{"_index":213,"title":{},"body":{"injectables/ApiService.html":{},"injectables/AuthService.html":{},"components/LoginComponent.html":{},"interfaces/RawgAchievementApi.html":{},"interfaces/RawgAchievementsApiResponse.html":{},"interfaces/RawgApiResponse.html":{},"interfaces/RawgGame.html":{},"components/RecoverPasswordComponent.html":{},"components/RegisterComponent.html":{},"interfaces/User.html":{},"components/UserProfileComponent.html":{}}}],["especial",{"_index":1340,"title":{},"body":{"components/RecoverPasswordComponent.html":{},"components/RegisterComponent.html":{},"components/UserProfileComponent.html":{}}}],["específico",{"_index":43,"title":{},"body":{"injectables/ApiService.html":{},"interfaces/Game.html":{},"interfaces/GameAchievement.html":{},"injectables/GameService.html":{},"interfaces/RawgAchievementApi.html":{},"interfaces/RawgAchievementsApiResponse.html":{},"interfaces/RawgApiResponse.html":{},"interfaces/RawgGame.html":{}}}],["est",{"_index":69,"title":{},"body":{"injectables/ApiService.html":{},"injectables/AuthService.html":{},"interfaces/Game.html":{},"interfaces/GameAchievement.html":{},"components/GameDetailModalComponent.html":{},"injectables/GameService.html":{},"interfaces/RawgAchievementApi.html":{},"interfaces/RawgAchievementsApiResponse.html":{},"interfaces/RawgApiResponse.html":{},"interfaces/RawgGame.html":{},"components/RecoverPasswordComponent.html":{},"components/RegisterComponent.html":{},"interfaces/User.html":{}}}],["esta",{"_index":124,"title":{},"body":{"injectables/ApiService.html":{},"components/CategoryComponent.html":{},"components/ConfirmationModalComponent.html":{},"components/MyLibraryComponent.html":{},"interfaces/RawgAchievementApi.html":{},"interfaces/RawgAchievementsApiResponse.html":{},"interfaces/RawgApiResponse.html":{},"interfaces/RawgGame.html":{},"miscellaneous/variables.html":{}}}],["estado",{"_index":285,"title":{},"body":{"components/AppComponent.html":{},"components/GameDetailModalComponent.html":{},"components/HeaderComponent.html":{},"components/MyLibraryComponent.html":{},"components/UserProfileComponent.html":{}}}],["estados",{"_index":1288,"title":{},"body":{"components/MyLibraryComponent.html":{}}}],["este",{"_index":270,"title":{},"body":{"components/AppComponent.html":{},"components/CategoryComponent.html":{},"interfaces/Game.html":{},"interfaces/GameAchievement.html":{},"components/GameDetailModalComponent.html":{},"injectables/GameService.html":{},"components/LoginComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/RegisterComponent.html":{},"components/UserProfileComponent.html":{}}}],["esto",{"_index":1272,"title":{},"body":{"components/MyLibraryComponent.html":{}}}],["estrategia",{"_index":1054,"title":{},"body":{"components/HeaderComponent.html":{},"components/HomeComponent.html":{}}}],["estructura",{"_index":149,"title":{},"body":{"injectables/ApiService.html":{},"components/AppComponent.html":{},"interfaces/Game.html":{},"interfaces/GameAchievement.html":{},"injectables/GameService.html":{},"interfaces/RawgAchievementApi.html":{},"interfaces/RawgAchievementsApiResponse.html":{},"interfaces/RawgApiResponse.html":{},"interfaces/RawgGame.html":{}}}],["están",{"_index":1095,"title":{},"body":{"components/HomeComponent.html":{}}}],["estás",{"_index":769,"title":{},"body":{"components/ConfirmationModalComponent.html":{},"components/MyLibraryComponent.html":{}}}],["event",{"_index":986,"title":{},"body":{"components/GameDetailModalComponent.html":{}}}],["event.target",{"_index":1011,"title":{},"body":{"components/GameDetailModalComponent.html":{}}}],["eventemitter",{"_index":773,"title":{},"body":{"components/ConfirmationModalComponent.html":{},"components/GameCardComponent.html":{},"components/GameDetailModalComponent.html":{}}}],["evento",{"_index":703,"title":{},"body":{"components/CategoryComponent.html":{},"components/ConfirmationModalComponent.html":{},"components/GameDetailModalComponent.html":{}}}],["eventos",{"_index":934,"title":{},"body":{"components/GameCardComponent.html":{}}}],["evitar",{"_index":1376,"title":{},"body":{"components/RegisterComponent.html":{},"components/UserProfileComponent.html":{}}}],["example",{"_index":288,"title":{},"body":{"components/AppComponent.html":{},"components/CategoryComponent.html":{},"components/ConfirmationModalComponent.html":{},"components/FooterComponent.html":{},"components/GameCardComponent.html":{},"components/GameDetailModalComponent.html":{},"injectables/GameService.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/MyLibraryComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/RegisterComponent.html":{},"components/UserProfileComponent.html":{}}}],["execute",{"_index":1543,"title":{},"body":{"index.html":{}}}],["existe",{"_index":508,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Game.html":{},"interfaces/GameAchievement.html":{},"injectables/GameService.html":{},"interfaces/User.html":{}}}],["existente",{"_index":918,"title":{},"body":{"interfaces/Game.html":{},"interfaces/GameAchievement.html":{},"injectables/GameService.html":{}}}],["exitoso",{"_index":512,"title":{},"body":{"injectables/AuthService.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"interfaces/User.html":{}}}],["explora",{"_index":1116,"title":{},"body":{"components/HomeComponent.html":{}}}],["export",{"_index":175,"title":{},"body":{"injectables/ApiService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthService.html":{},"components/CategoryComponent.html":{},"components/ConfirmationModalComponent.html":{},"components/FooterComponent.html":{},"interfaces/Game.html":{},"interfaces/GameAchievement.html":{},"components/GameCardComponent.html":{},"components/GameDetailModalComponent.html":{},"injectables/GameService.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/MyLibraryComponent.html":{},"interfaces/RawgAchievementApi.html":{},"interfaces/RawgAchievementsApiResponse.html":{},"interfaces/RawgApiResponse.html":{},"interfaces/RawgGame.html":{},"components/RecoverPasswordComponent.html":{},"components/RegisterComponent.html":{},"interfaces/User.html":{},"components/UserProfileComponent.html":{}}}],["exports",{"_index":355,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"overview.html":{}}}],["extractfilteroptions",{"_index":571,"title":{},"body":{"components/CategoryComponent.html":{}}}],["extrae",{"_index":660,"title":{},"body":{"components/CategoryComponent.html":{}}}],["fa",{"_index":1086,"title":{},"body":{"components/HomeComponent.html":{}}}],["false",{"_index":118,"title":{},"body":{"injectables/ApiService.html":{},"injectables/AuthService.html":{},"interfaces/Game.html":{},"interfaces/GameAchievement.html":{},"components/GameCardComponent.html":{},"injectables/GameService.html":{},"interfaces/RawgAchievementApi.html":{},"interfaces/RawgAchievementsApiResponse.html":{},"interfaces/RawgApiResponse.html":{},"interfaces/RawgGame.html":{},"interfaces/User.html":{}}}],["fas",{"_index":1085,"title":{},"body":{"components/HomeComponent.html":{}}}],["fav",{"_index":967,"title":{},"body":{"components/GameCardComponent.html":{}}}],["favor",{"_index":647,"title":{},"body":{"components/CategoryComponent.html":{},"components/LoginComponent.html":{},"components/MyLibraryComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/RegisterComponent.html":{},"components/UserProfileComponent.html":{}}}],["favorito",{"_index":851,"title":{},"body":{"interfaces/Game.html":{},"interfaces/GameAchievement.html":{},"components/GameCardComponent.html":{},"injectables/GameService.html":{},"components/MyLibraryComponent.html":{}}}],["favorito/no",{"_index":1174,"title":{},"body":{"components/MyLibraryComponent.html":{}}}],["favoritos",{"_index":1059,"title":{},"body":{"components/HeaderComponent.html":{},"components/MyLibraryComponent.html":{}}}],["fb",{"_index":1132,"title":{},"body":{"components/LoginComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/RegisterComponent.html":{},"components/UserProfileComponent.html":{}}}],["features/category/category.component",{"_index":382,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["features/home/home.component",{"_index":381,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["features/login/login.component",{"_index":386,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["features/my",{"_index":383,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["features/recover",{"_index":391,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["features/register/register.component",{"_index":387,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["features/user",{"_index":388,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["fecha",{"_index":1385,"title":{},"body":{"components/RegisterComponent.html":{},"components/UserProfileComponent.html":{}}}],["fetching",{"_index":200,"title":{},"body":{"injectables/ApiService.html":{},"interfaces/RawgAchievementApi.html":{},"interfaces/RawgAchievementsApiResponse.html":{},"interfaces/RawgApiResponse.html":{},"interfaces/RawgGame.html":{}}}],["file",{"_index":5,"title":{},"body":{"injectables/ApiService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthService.html":{},"components/CategoryComponent.html":{},"components/ConfirmationModalComponent.html":{},"components/FooterComponent.html":{},"interfaces/Game.html":{},"interfaces/GameAchievement.html":{},"components/GameCardComponent.html":{},"components/GameDetailModalComponent.html":{},"injectables/GameService.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/MyLibraryComponent.html":{},"interfaces/RawgAchievementApi.html":{},"interfaces/RawgAchievementsApiResponse.html":{},"interfaces/RawgApiResponse.html":{},"interfaces/RawgGame.html":{},"components/RecoverPasswordComponent.html":{},"components/RegisterComponent.html":{},"interfaces/User.html":{},"components/UserProfileComponent.html":{},"coverage.html":{}}}],["files",{"_index":1528,"title":{},"body":{"index.html":{}}}],["filterandrendergames",{"_index":1189,"title":{},"body":{"components/MyLibraryComponent.html":{}}}],["filteredgames",{"_index":563,"title":{},"body":{"components/CategoryComponent.html":{},"components/MyLibraryComponent.html":{}}}],["filtergames",{"_index":572,"title":{},"body":{"components/CategoryComponent.html":{}}}],["filtra",{"_index":683,"title":{},"body":{"components/CategoryComponent.html":{},"components/MyLibraryComponent.html":{}}}],["filtrado",{"_index":546,"title":{},"body":{"components/CategoryComponent.html":{}}}],["filtrados",{"_index":542,"title":{},"body":{"components/CategoryComponent.html":{}}}],["filtrarlos",{"_index":1171,"title":{},"body":{"components/MyLibraryComponent.html":{}}}],["filtro",{"_index":1291,"title":{},"body":{"components/MyLibraryComponent.html":{}}}],["filtros",{"_index":679,"title":{},"body":{"components/CategoryComponent.html":{},"components/MyLibraryComponent.html":{}}}],["first",{"_index":1551,"title":{},"body":{"index.html":{}}}],["fist",{"_index":1087,"title":{},"body":{"components/HomeComponent.html":{}}}],["footer",{"_index":815,"title":{},"body":{"components/FooterComponent.html":{}}}],["footer'},{'name",{"_index":326,"title":{},"body":{"components/AppComponent.html":{},"components/CategoryComponent.html":{},"components/ConfirmationModalComponent.html":{},"components/FooterComponent.html":{},"components/GameCardComponent.html":{},"components/GameDetailModalComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/MyLibraryComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/RegisterComponent.html":{},"components/UserProfileComponent.html":{}}}],["footer.component.css",{"_index":816,"title":{},"body":{"components/FooterComponent.html":{}}}],["footer.component.html",{"_index":817,"title":{},"body":{"components/FooterComponent.html":{}}}],["footercomponent",{"_index":325,"title":{"components/FooterComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CategoryComponent.html":{},"components/ConfirmationModalComponent.html":{},"components/FooterComponent.html":{},"components/GameCardComponent.html":{},"components/GameDetailModalComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/MyLibraryComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/RegisterComponent.html":{},"components/UserProfileComponent.html":{},"coverage.html":{},"overview.html":{}}}],["forkjoin",{"_index":617,"title":{},"body":{"components/CategoryComponent.html":{}}}],["formato",{"_index":191,"title":{},"body":{"injectables/ApiService.html":{},"interfaces/RawgAchievementApi.html":{},"interfaces/RawgAchievementsApiResponse.html":{},"interfaces/RawgApiResponse.html":{},"interfaces/RawgGame.html":{}}}],["formbuilder",{"_index":1133,"title":{},"body":{"components/LoginComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/RegisterComponent.html":{},"components/UserProfileComponent.html":{}}}],["formgroup",{"_index":1138,"title":{},"body":{"components/LoginComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/RegisterComponent.html":{},"components/UserProfileComponent.html":{},"miscellaneous/functions.html":{}}}],["formsmodule",{"_index":394,"title":{},"body":{"modules/AppModule.html":{}}}],["formulario",{"_index":1146,"title":{},"body":{"components/LoginComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/RegisterComponent.html":{},"components/UserProfileComponent.html":{}}}],["formularios",{"_index":1123,"title":{},"body":{"components/LoginComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/RegisterComponent.html":{}}}],["fortawesome/fontawesome",{"_index":1484,"title":{},"body":{"dependencies.html":{}}}],["free",{"_index":1485,"title":{},"body":{"dependencies.html":{}}}],["fugas",{"_index":1430,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["full",{"_index":410,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["fulldetailsgame",{"_index":1286,"title":{},"body":{"components/MyLibraryComponent.html":{}}}],["fullname",{"_index":461,"title":{},"body":{"injectables/AuthService.html":{},"components/RegisterComponent.html":{},"interfaces/User.html":{},"components/UserProfileComponent.html":{}}}],["funciona",{"_index":1276,"title":{},"body":{"components/MyLibraryComponent.html":{}}}],["funcionalidad",{"_index":548,"title":{},"body":{"components/CategoryComponent.html":{}}}],["función",{"_index":125,"title":{},"body":{"injectables/ApiService.html":{},"injectables/AuthService.html":{},"components/ConfirmationModalComponent.html":{},"interfaces/RawgAchievementApi.html":{},"interfaces/RawgAchievementsApiResponse.html":{},"interfaces/RawgApiResponse.html":{},"interfaces/RawgGame.html":{},"interfaces/User.html":{},"miscellaneous/functions.html":{}}}],["function",{"_index":1473,"title":{},"body":{"coverage.html":{}}}],["functions",{"_index":1494,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["further",{"_index":1555,"title":{},"body":{"index.html":{}}}],["futbol",{"_index":1112,"title":{},"body":{"components/HomeComponent.html":{}}}],["g",{"_index":633,"title":{},"body":{"components/CategoryComponent.html":{}}}],["g.id",{"_index":1017,"title":{},"body":{"components/GameDetailModalComponent.html":{}}}],["g.name).join",{"_index":240,"title":{},"body":{"injectables/ApiService.html":{},"interfaces/RawgAchievementApi.html":{},"interfaces/RawgAchievementsApiResponse.html":{},"interfaces/RawgApiResponse.html":{},"interfaces/RawgGame.html":{}}}],["g.trim()).foreach(g",{"_index":672,"title":{},"body":{"components/CategoryComponent.html":{}}}],["game",{"_index":64,"title":{"interfaces/Game.html":{}},"body":{"injectables/ApiService.html":{},"components/AppComponent.html":{},"components/CategoryComponent.html":{},"components/ConfirmationModalComponent.html":{},"components/FooterComponent.html":{},"interfaces/Game.html":{},"interfaces/GameAchievement.html":{},"components/GameCardComponent.html":{},"components/GameDetailModalComponent.html":{},"injectables/GameService.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/MyLibraryComponent.html":{},"interfaces/RawgAchievementApi.html":{},"interfaces/RawgAchievementsApiResponse.html":{},"interfaces/RawgApiResponse.html":{},"interfaces/RawgGame.html":{},"components/RecoverPasswordComponent.html":{},"components/RegisterComponent.html":{},"components/UserProfileComponent.html":{},"coverage.html":{}}}],["game.achievements",{"_index":1287,"title":{},"body":{"components/MyLibraryComponent.html":{}}}],["game.description",{"_index":1022,"title":{},"body":{"components/GameDetailModalComponent.html":{}}}],["game.description.length",{"_index":961,"title":{},"body":{"components/GameCardComponent.html":{}}}],["game.description.substring(0",{"_index":959,"title":{},"body":{"components/GameCardComponent.html":{}}}],["game.description.tolowercase().includes(searchtermlower",{"_index":697,"title":{},"body":{"components/CategoryComponent.html":{},"components/MyLibraryComponent.html":{}}}],["game.genre",{"_index":958,"title":{},"body":{"components/GameCardComponent.html":{},"components/GameDetailModalComponent.html":{}}}],["game.genre.split(',').map(g",{"_index":671,"title":{},"body":{"components/CategoryComponent.html":{}}}],["game.genre.tolowercase().includes(searchtermlower",{"_index":1241,"title":{},"body":{"components/MyLibraryComponent.html":{}}}],["game.genre.tolowercase().includes(selectedgenrelower",{"_index":701,"title":{},"body":{"components/CategoryComponent.html":{}}}],["game.hoursplayed",{"_index":962,"title":{},"body":{"components/GameCardComponent.html":{},"components/GameDetailModalComponent.html":{}}}],["game.id",{"_index":726,"title":{},"body":{"components/CategoryComponent.html":{},"interfaces/Game.html":{},"interfaces/GameAchievement.html":{},"injectables/GameService.html":{},"components/MyLibraryComponent.html":{}}}],["game.isfavorite",{"_index":966,"title":{},"body":{"components/GameCardComponent.html":{},"components/MyLibraryComponent.html":{}}}],["game.platform",{"_index":891,"title":{},"body":{"interfaces/Game.html":{},"interfaces/GameAchievement.html":{},"components/GameCardComponent.html":{},"components/GameDetailModalComponent.html":{},"injectables/GameService.html":{}}}],["game.platform.split(',').map(p",{"_index":668,"title":{},"body":{"components/CategoryComponent.html":{}}}],["game.platform.tolowercase().includes(searchtermlower",{"_index":1240,"title":{},"body":{"components/MyLibraryComponent.html":{}}}],["game.platform.tolowercase().includes(selectedplatformlower",{"_index":699,"title":{},"body":{"components/CategoryComponent.html":{}}}],["game.played",{"_index":964,"title":{},"body":{"components/GameCardComponent.html":{},"components/MyLibraryComponent.html":{}}}],["game.title",{"_index":717,"title":{},"body":{"components/CategoryComponent.html":{},"interfaces/Game.html":{},"interfaces/GameAchievement.html":{},"components/GameCardComponent.html":{},"components/GameDetailModalComponent.html":{},"injectables/GameService.html":{}}}],["game.title.tolowercase().includes(searchtermlower",{"_index":696,"title":{},"body":{"components/CategoryComponent.html":{},"components/MyLibraryComponent.html":{}}}],["game/game.service",{"_index":147,"title":{},"body":{"injectables/ApiService.html":{},"interfaces/RawgAchievementApi.html":{},"interfaces/RawgAchievementsApiResponse.html":{},"interfaces/RawgApiResponse.html":{},"interfaces/RawgGame.html":{}}}],["gameachievement",{"_index":57,"title":{"interfaces/GameAchievement.html":{}},"body":{"injectables/ApiService.html":{},"interfaces/Game.html":{},"interfaces/GameAchievement.html":{},"injectables/GameService.html":{},"interfaces/RawgAchievementApi.html":{},"interfaces/RawgAchievementsApiResponse.html":{},"interfaces/RawgApiResponse.html":{},"interfaces/RawgGame.html":{},"coverage.html":{}}}],["gamecardcomponent",{"_index":327,"title":{"components/GameCardComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CategoryComponent.html":{},"components/ConfirmationModalComponent.html":{},"components/FooterComponent.html":{},"components/GameCardComponent.html":{},"components/GameDetailModalComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/MyLibraryComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/RegisterComponent.html":{},"components/UserProfileComponent.html":{},"coverage.html":{},"overview.html":{}}}],["gamedata",{"_index":881,"title":{},"body":{"interfaces/Game.html":{},"interfaces/GameAchievement.html":{},"injectables/GameService.html":{}}}],["gamedata.achievements",{"_index":894,"title":{},"body":{"interfaces/Game.html":{},"interfaces/GameAchievement.html":{},"injectables/GameService.html":{}}}],["gamedata.achievements.length",{"_index":895,"title":{},"body":{"interfaces/Game.html":{},"interfaces/GameAchievement.html":{},"injectables/GameService.html":{}}}],["gamedata.achievements.map(ach",{"_index":896,"title":{},"body":{"interfaces/Game.html":{},"interfaces/GameAchievement.html":{},"injectables/GameService.html":{}}}],["gamedata.description",{"_index":907,"title":{},"body":{"interfaces/Game.html":{},"interfaces/GameAchievement.html":{},"injectables/GameService.html":{}}}],["gamedata.genre",{"_index":909,"title":{},"body":{"interfaces/Game.html":{},"interfaces/GameAchievement.html":{},"injectables/GameService.html":{}}}],["gamedata.hoursplayed",{"_index":911,"title":{},"body":{"interfaces/Game.html":{},"interfaces/GameAchievement.html":{},"injectables/GameService.html":{}}}],["gamedata.id",{"_index":885,"title":{},"body":{"interfaces/Game.html":{},"interfaces/GameAchievement.html":{},"injectables/GameService.html":{}}}],["gamedata.image",{"_index":912,"title":{},"body":{"interfaces/Game.html":{},"interfaces/GameAchievement.html":{},"injectables/GameService.html":{}}}],["gamedata.platform",{"_index":892,"title":{},"body":{"interfaces/Game.html":{},"interfaces/GameAchievement.html":{},"injectables/GameService.html":{}}}],["gamedata.title",{"_index":890,"title":{},"body":{"interfaces/Game.html":{},"interfaces/GameAchievement.html":{},"injectables/GameService.html":{}}}],["gamedetailmodal",{"_index":564,"title":{},"body":{"components/CategoryComponent.html":{},"components/MyLibraryComponent.html":{}}}],["gamedetailmodalcomponent",{"_index":329,"title":{"components/GameDetailModalComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CategoryComponent.html":{},"components/ConfirmationModalComponent.html":{},"components/FooterComponent.html":{},"components/GameCardComponent.html":{},"components/GameDetailModalComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/MyLibraryComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/RegisterComponent.html":{},"components/UserProfileComponent.html":{},"coverage.html":{},"overview.html":{}}}],["gameid",{"_index":48,"title":{},"body":{"injectables/ApiService.html":{},"interfaces/Game.html":{},"interfaces/GameAchievement.html":{},"components/GameDetailModalComponent.html":{},"injectables/GameService.html":{},"components/MyLibraryComponent.html":{},"interfaces/RawgAchievementApi.html":{},"interfaces/RawgAchievementsApiResponse.html":{},"interfaces/RawgApiResponse.html":{},"interfaces/RawgGame.html":{}}}],["gameidtodelete",{"_index":1186,"title":{},"body":{"components/MyLibraryComponent.html":{}}}],["gamepad",{"_index":1113,"title":{},"body":{"components/HomeComponent.html":{}}}],["games",{"_index":201,"title":{},"body":{"injectables/ApiService.html":{},"components/CategoryComponent.html":{},"interfaces/Game.html":{},"interfaces/GameAchievement.html":{},"injectables/GameService.html":{},"interfaces/RawgAchievementApi.html":{},"interfaces/RawgAchievementsApiResponse.html":{},"interfaces/RawgApiResponse.html":{},"interfaces/RawgGame.html":{}}}],["games/{id",{"_index":228,"title":{},"body":{"injectables/ApiService.html":{},"interfaces/RawgAchievementApi.html":{},"interfaces/RawgAchievementsApiResponse.html":{},"interfaces/RawgApiResponse.html":{},"interfaces/RawgGame.html":{}}}],["gameservice",{"_index":580,"title":{"injectables/GameService.html":{}},"body":{"components/CategoryComponent.html":{},"interfaces/Game.html":{},"interfaces/GameAchievement.html":{},"components/GameDetailModalComponent.html":{},"injectables/GameService.html":{},"components/MyLibraryComponent.html":{},"coverage.html":{}}}],["gametodelete",{"_index":1262,"title":{},"body":{"components/MyLibraryComponent.html":{}}}],["gametodelete.title",{"_index":1268,"title":{},"body":{"components/MyLibraryComponent.html":{}}}],["gametoupdate",{"_index":1015,"title":{},"body":{"components/GameDetailModalComponent.html":{},"components/MyLibraryComponent.html":{}}}],["gametoupdate.achievements[achievementindex].completed",{"_index":1019,"title":{},"body":{"components/GameDetailModalComponent.html":{}}}],["gametoupdate.hoursplayed",{"_index":1257,"title":{},"body":{"components/MyLibraryComponent.html":{}}}],["gametoupdate.isfavorite",{"_index":1246,"title":{},"body":{"components/MyLibraryComponent.html":{}}}],["gametoupdate.played",{"_index":1248,"title":{},"body":{"components/MyLibraryComponent.html":{}}}],["gametoupdate.title",{"_index":1252,"title":{},"body":{"components/MyLibraryComponent.html":{}}}],["gametoupdate?.achievements",{"_index":1018,"title":{},"body":{"components/GameDetailModalComponent.html":{}}}],["gamewithachievements",{"_index":711,"title":{},"body":{"components/CategoryComponent.html":{}}}],["generate",{"_index":1531,"title":{},"body":{"index.html":{}}}],["generated",{"_index":1512,"title":{},"body":{"index.html":{}}}],["genre",{"_index":238,"title":{},"body":{"injectables/ApiService.html":{},"components/CategoryComponent.html":{},"interfaces/Game.html":{},"interfaces/GameAchievement.html":{},"injectables/GameService.html":{},"interfaces/RawgAchievementApi.html":{},"interfaces/RawgAchievementsApiResponse.html":{},"interfaces/RawgApiResponse.html":{},"interfaces/RawgGame.html":{}}}],["genre.name",{"_index":255,"title":{},"body":{"injectables/ApiService.html":{},"interfaces/RawgAchievementApi.html":{},"interfaces/RawgAchievementsApiResponse.html":{},"interfaces/RawgApiResponse.html":{},"interfaces/RawgGame.html":{}}}],["genres",{"_index":73,"title":{},"body":{"injectables/ApiService.html":{},"components/CategoryComponent.html":{},"interfaces/RawgAchievementApi.html":{},"interfaces/RawgAchievementsApiResponse.html":{},"interfaces/RawgApiResponse.html":{},"interfaces/RawgGame.html":{}}}],["genres.add(g",{"_index":673,"title":{},"body":{"components/CategoryComponent.html":{}}}],["genérico",{"_index":742,"title":{},"body":{"components/ConfirmationModalComponent.html":{}}}],["gestiona",{"_index":854,"title":{},"body":{"interfaces/Game.html":{},"interfaces/GameAchievement.html":{},"injectables/GameService.html":{},"components/HeaderComponent.html":{}}}],["gestionando",{"_index":283,"title":{},"body":{"components/AppComponent.html":{}}}],["gestionar",{"_index":828,"title":{},"body":{"interfaces/Game.html":{},"interfaces/GameAchievement.html":{},"components/GameDetailModalComponent.html":{},"injectables/GameService.html":{},"components/MyLibraryComponent.html":{}}}],["getcategoryicon",{"_index":1071,"title":{},"body":{"components/HomeComponent.html":{}}}],["getcategoryicon(categoryname",{"_index":1073,"title":{},"body":{"components/HomeComponent.html":{}}}],["getcurrentuser",{"_index":430,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/User.html":{}}}],["getgameachievements",{"_index":14,"title":{},"body":{"injectables/ApiService.html":{}}}],["getgameachievements(gameid",{"_index":32,"title":{},"body":{"injectables/ApiService.html":{},"interfaces/RawgAchievementApi.html":{},"interfaces/RawgAchievementsApiResponse.html":{},"interfaces/RawgApiResponse.html":{},"interfaces/RawgGame.html":{}}}],["getgamedetails",{"_index":15,"title":{},"body":{"injectables/ApiService.html":{}}}],["getgamedetails(id",{"_index":58,"title":{},"body":{"injectables/ApiService.html":{},"interfaces/RawgAchievementApi.html":{},"interfaces/RawgAchievementsApiResponse.html":{},"interfaces/RawgApiResponse.html":{},"interfaces/RawgGame.html":{}}}],["getgames",{"_index":16,"title":{},"body":{"injectables/ApiService.html":{}}}],["getgames(searchquery",{"_index":71,"title":{},"body":{"injectables/ApiService.html":{},"interfaces/RawgAchievementApi.html":{},"interfaces/RawgAchievementsApiResponse.html":{},"interfaces/RawgApiResponse.html":{},"interfaces/RawgGame.html":{}}}],["getgenres",{"_index":17,"title":{},"body":{"injectables/ApiService.html":{},"interfaces/RawgAchievementApi.html":{},"interfaces/RawgAchievementsApiResponse.html":{},"interfaces/RawgApiResponse.html":{},"interfaces/RawgGame.html":{}}}],["getgetcurrentuser",{"_index":451,"title":{},"body":{"injectables/AuthService.html":{}}}],["getplatforms",{"_index":18,"title":{},"body":{"injectables/ApiService.html":{},"interfaces/RawgAchievementApi.html":{},"interfaces/RawgAchievementsApiResponse.html":{},"interfaces/RawgApiResponse.html":{},"interfaces/RawgGame.html":{}}}],["getting",{"_index":1508,"title":{"index.html":{}},"body":{}}],["getusergames",{"_index":1029,"title":{},"body":{"injectables/GameService.html":{}}}],["getusergames(username",{"_index":871,"title":{},"body":{"interfaces/Game.html":{},"interfaces/GameAchievement.html":{},"injectables/GameService.html":{}}}],["go",{"_index":1558,"title":{},"body":{"index.html":{}}}],["graph",{"_index":1566,"title":{},"body":{"modules.html":{}}}],["guardar",{"_index":876,"title":{},"body":{"interfaces/Game.html":{},"interfaces/GameAchievement.html":{},"components/GameDetailModalComponent.html":{},"injectables/GameService.html":{},"components/UserProfileComponent.html":{}}}],["guardián",{"_index":1274,"title":{},"body":{"components/MyLibraryComponent.html":{}}}],["guards/auth.guard",{"_index":405,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["género",{"_index":664,"title":{},"body":{"components/CategoryComponent.html":{},"components/GameCardComponent.html":{},"components/GameDetailModalComponent.html":{}}}],["géneros",{"_index":88,"title":{},"body":{"injectables/ApiService.html":{},"components/CategoryComponent.html":{},"interfaces/Game.html":{},"interfaces/GameAchievement.html":{},"injectables/GameService.html":{},"interfaces/RawgAchievementApi.html":{},"interfaces/RawgAchievementsApiResponse.html":{},"interfaces/RawgApiResponse.html":{},"interfaces/RawgGame.html":{}}}],["h",{"_index":963,"title":{},"body":{"components/GameCardComponent.html":{},"components/GameDetailModalComponent.html":{}}}],["ha",{"_index":839,"title":{},"body":{"interfaces/Game.html":{},"interfaces/GameAchievement.html":{},"components/GameDetailModalComponent.html":{},"injectables/GameService.html":{}}}],["hace",{"_index":705,"title":{},"body":{"components/CategoryComponent.html":{},"components/ConfirmationModalComponent.html":{}}}],["hacer",{"_index":656,"title":{},"body":{"components/CategoryComponent.html":{}}}],["handleaddtolibrary",{"_index":573,"title":{},"body":{"components/CategoryComponent.html":{}}}],["handleaddtolibrary(game",{"_index":589,"title":{},"body":{"components/CategoryComponent.html":{}}}],["handledeletegameconfirmation",{"_index":1190,"title":{},"body":{"components/MyLibraryComponent.html":{}}}],["handledeletegameconfirmation(gameid",{"_index":1198,"title":{},"body":{"components/MyLibraryComponent.html":{}}}],["handleprofileupdate",{"_index":1399,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["handletogglefavorite",{"_index":1191,"title":{},"body":{"components/MyLibraryComponent.html":{}}}],["handletogglefavorite(gameid",{"_index":1200,"title":{},"body":{"components/MyLibraryComponent.html":{}}}],["handletoggleplayed",{"_index":1192,"title":{},"body":{"components/MyLibraryComponent.html":{}}}],["handletoggleplayed(gameid",{"_index":1202,"title":{},"body":{"components/MyLibraryComponent.html":{}}}],["handleupdatehoursplayed",{"_index":1193,"title":{},"body":{"components/MyLibraryComponent.html":{}}}],["handleupdatehoursplayed(gameid",{"_index":1204,"title":{},"body":{"components/MyLibraryComponent.html":{}}}],["hat",{"_index":1089,"title":{},"body":{"components/HomeComponent.html":{}}}],["hay",{"_index":1026,"title":{},"body":{"components/GameDetailModalComponent.html":{},"components/UserProfileComponent.html":{}}}],["haya",{"_index":790,"title":{},"body":{"components/ConfirmationModalComponent.html":{}}}],["header",{"_index":1043,"title":{},"body":{"components/HeaderComponent.html":{}}}],["header'},{'name",{"_index":332,"title":{},"body":{"components/AppComponent.html":{},"components/CategoryComponent.html":{},"components/ConfirmationModalComponent.html":{},"components/FooterComponent.html":{},"components/GameCardComponent.html":{},"components/GameDetailModalComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/MyLibraryComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/RegisterComponent.html":{},"components/UserProfileComponent.html":{}}}],["header.component.css",{"_index":1044,"title":{},"body":{"components/HeaderComponent.html":{}}}],["header.component.html",{"_index":1045,"title":{},"body":{"components/HeaderComponent.html":{}}}],["headercomponent",{"_index":331,"title":{"components/HeaderComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CategoryComponent.html":{},"components/ConfirmationModalComponent.html":{},"components/FooterComponent.html":{},"components/GameCardComponent.html":{},"components/GameDetailModalComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/MyLibraryComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/RegisterComponent.html":{},"components/UserProfileComponent.html":{},"coverage.html":{},"overview.html":{}}}],["help",{"_index":1556,"title":{},"body":{"index.html":{}}}],["hide",{"_index":757,"title":{},"body":{"components/ConfirmationModalComponent.html":{},"components/GameDetailModalComponent.html":{}}}],["hijo",{"_index":1282,"title":{},"body":{"components/MyLibraryComponent.html":{}}}],["home",{"_index":1066,"title":{},"body":{"components/HomeComponent.html":{}}}],["home'},{'name",{"_index":334,"title":{},"body":{"components/AppComponent.html":{},"components/CategoryComponent.html":{},"components/ConfirmationModalComponent.html":{},"components/FooterComponent.html":{},"components/GameCardComponent.html":{},"components/GameDetailModalComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/MyLibraryComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/RegisterComponent.html":{},"components/UserProfileComponent.html":{}}}],["home.component.css",{"_index":1067,"title":{},"body":{"components/HomeComponent.html":{}}}],["home.component.html",{"_index":1068,"title":{},"body":{"components/HomeComponent.html":{}}}],["homecomponent",{"_index":333,"title":{"components/HomeComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/CategoryComponent.html":{},"components/ConfirmationModalComponent.html":{},"components/FooterComponent.html":{},"components/GameCardComponent.html":{},"components/GameDetailModalComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/MyLibraryComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/RegisterComponent.html":{},"components/UserProfileComponent.html":{},"coverage.html":{},"overview.html":{}}}],["hook",{"_index":1004,"title":{},"body":{"components/GameDetailModalComponent.html":{}}}],["horas",{"_index":848,"title":{},"body":{"interfaces/Game.html":{},"interfaces/GameAchievement.html":{},"components/GameCardComponent.html":{},"components/GameDetailModalComponent.html":{},"injectables/GameService.html":{},"components/MyLibraryComponent.html":{}}}],["hoursplayed",{"_index":241,"title":{},"body":{"injectables/ApiService.html":{},"interfaces/Game.html":{},"interfaces/GameAchievement.html":{},"injectables/GameService.html":{},"interfaces/RawgAchievementApi.html":{},"interfaces/RawgAchievementsApiResponse.html":{},"interfaces/RawgApiResponse.html":{},"interfaces/RawgGame.html":{}}}],["html",{"_index":311,"title":{},"body":{"components/AppComponent.html":{},"components/CategoryComponent.html":{},"components/ConfirmationModalComponent.html":{},"components/FooterComponent.html":{},"components/GameCardComponent.html":{},"components/GameDetailModalComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/MyLibraryComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/RegisterComponent.html":{},"components/UserProfileComponent.html":{}}}],["htmlinputelement).checked",{"_index":1012,"title":{},"body":{"components/GameDetailModalComponent.html":{}}}],["http",{"_index":31,"title":{},"body":{"injectables/ApiService.html":{},"interfaces/RawgAchievementApi.html":{},"interfaces/RawgAchievementsApiResponse.html":{},"interfaces/RawgApiResponse.html":{},"interfaces/RawgGame.html":{}}}],["http://localhost:4200",{"_index":1523,"title":{},"body":{"index.html":{}}}],["httpclient",{"_index":23,"title":{},"body":{"injectables/ApiService.html":{},"interfaces/RawgAchievementApi.html":{},"interfaces/RawgAchievementsApiResponse.html":{},"interfaces/RawgApiResponse.html":{},"interfaces/RawgGame.html":{}}}],["httpclientmodule",{"_index":371,"title":{},"body":{"modules/AppModule.html":{}}}],["httpparams",{"_index":141,"title":{},"body":{"injectables/ApiService.html":{},"interfaces/RawgAchievementApi.html":{},"interfaces/RawgAchievementsApiResponse.html":{},"interfaces/RawgApiResponse.html":{},"interfaces/RawgGame.html":{}}}],["httpparams().set('key",{"_index":181,"title":{},"body":{"injectables/ApiService.html":{},"interfaces/RawgAchievementApi.html":{},"interfaces/RawgAchievementsApiResponse.html":{},"interfaces/RawgApiResponse.html":{},"interfaces/RawgGame.html":{}}}],["https://api.rawg.io/api",{"_index":137,"title":{},"body":{"injectables/ApiService.html":{},"interfaces/RawgAchievementApi.html":{},"interfaces/RawgAchievementsApiResponse.html":{},"interfaces/RawgApiResponse.html":{},"interfaces/RawgGame.html":{}}}],["https://placehold.co/100x100/374151/d1d5db?text=ach",{"_index":251,"title":{},"body":{"injectables/ApiService.html":{},"interfaces/RawgAchievementApi.html":{},"interfaces/RawgAchievementsApiResponse.html":{},"interfaces/RawgApiResponse.html":{},"interfaces/RawgGame.html":{}}}],["https://placehold.co/400x250/374151/d1d5db?text=no+image",{"_index":244,"title":{},"body":{"injectables/ApiService.html":{},"interfaces/Game.html":{},"interfaces/GameAchievement.html":{},"injectables/GameService.html":{},"interfaces/RawgAchievementApi.html":{},"interfaces/RawgAchievementsApiResponse.html":{},"interfaces/RawgApiResponse.html":{},"interfaces/RawgGame.html":{}}}],["iconclass",{"_index":1078,"title":{},"body":{"components/HomeComponent.html":{}}}],["id",{"_index":46,"title":{},"body":{"injectables/ApiService.html":{},"interfaces/Game.html":{},"interfaces/GameAchievement.html":{},"components/GameDetailModalComponent.html":{},"injectables/GameService.html":{},"components/MyLibraryComponent.html":{},"interfaces/RawgAchievementApi.html":{},"interfaces/RawgAchievementsApiResponse.html":{},"interfaces/RawgApiResponse.html":{},"interfaces/RawgGame.html":{}}}],["identificador",{"_index":842,"title":{},"body":{"interfaces/Game.html":{},"interfaces/GameAchievement.html":{},"injectables/GameService.html":{}}}],["identifier",{"_index":1438,"title":{},"body":{"coverage.html":{}}}],["ids",{"_index":85,"title":{},"body":{"injectables/ApiService.html":{},"interfaces/RawgAchievementApi.html":{},"interfaces/RawgAchievementsApiResponse.html":{},"interfaces/RawgApiResponse.html":{},"interfaces/RawgGame.html":{}}}],["image",{"_index":171,"title":{},"body":{"injectables/ApiService.html":{},"interfaces/Game.html":{},"interfaces/GameAchievement.html":{},"injectables/GameService.html":{},"interfaces/RawgAchievementApi.html":{},"interfaces/RawgAchievementsApiResponse.html":{},"interfaces/RawgApiResponse.html":{},"interfaces/RawgGame.html":{}}}],["imagen",{"_index":837,"title":{},"body":{"interfaces/Game.html":{},"interfaces/GameAchievement.html":{},"injectables/GameService.html":{}}}],["implements",{"_index":289,"title":{},"body":{"components/AppComponent.html":{},"components/CategoryComponent.html":{},"components/ConfirmationModalComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/MyLibraryComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/RegisterComponent.html":{},"components/UserProfileComponent.html":{},"index.html":{}}}],["import",{"_index":139,"title":{},"body":{"injectables/ApiService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthService.html":{},"components/CategoryComponent.html":{},"components/ConfirmationModalComponent.html":{},"components/FooterComponent.html":{},"interfaces/Game.html":{},"interfaces/GameAchievement.html":{},"components/GameCardComponent.html":{},"components/GameDetailModalComponent.html":{},"injectables/GameService.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/MyLibraryComponent.html":{},"interfaces/RawgAchievementApi.html":{},"interfaces/RawgAchievementsApiResponse.html":{},"interfaces/RawgApiResponse.html":{},"interfaces/RawgGame.html":{},"components/RecoverPasswordComponent.html":{},"components/RegisterComponent.html":{},"interfaces/User.html":{},"components/UserProfileComponent.html":{}}}],["importa",{"_index":785,"title":{},"body":{"components/ConfirmationModalComponent.html":{}}}],["imports",{"_index":366,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["includefulldescription",{"_index":121,"title":{},"body":{"injectables/ApiService.html":{},"interfaces/RawgAchievementApi.html":{},"interfaces/RawgAchievementsApiResponse.html":{},"interfaces/RawgApiResponse.html":{},"interfaces/RawgGame.html":{}}}],["incluir",{"_index":134,"title":{},"body":{"injectables/ApiService.html":{},"interfaces/RawgAchievementApi.html":{},"interfaces/RawgAchievementsApiResponse.html":{},"interfaces/RawgApiResponse.html":{},"interfaces/RawgGame.html":{}}}],["incluye",{"_index":65,"title":{},"body":{"injectables/ApiService.html":{},"interfaces/RawgAchievementApi.html":{},"interfaces/RawgAchievementsApiResponse.html":{},"interfaces/RawgApiResponse.html":{},"interfaces/RawgGame.html":{},"components/RegisterComponent.html":{},"components/UserProfileComponent.html":{}}}],["incluyendo",{"_index":826,"title":{},"body":{"interfaces/Game.html":{},"interfaces/GameAchievement.html":{},"injectables/GameService.html":{}}}],["incorrectos",{"_index":504,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/User.html":{}}}],["index",{"_index":7,"title":{"index.html":{}},"body":{"injectables/ApiService.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/CategoryComponent.html":{},"components/ConfirmationModalComponent.html":{},"interfaces/Game.html":{},"interfaces/GameAchievement.html":{},"components/GameCardComponent.html":{},"components/GameDetailModalComponent.html":{},"injectables/GameService.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/MyLibraryComponent.html":{},"interfaces/RawgAchievementApi.html":{},"interfaces/RawgAchievementsApiResponse.html":{},"interfaces/RawgApiResponse.html":{},"interfaces/RawgGame.html":{},"components/RecoverPasswordComponent.html":{},"components/RegisterComponent.html":{},"interfaces/User.html":{},"components/UserProfileComponent.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["indica",{"_index":132,"title":{},"body":{"injectables/ApiService.html":{},"interfaces/Game.html":{},"interfaces/GameAchievement.html":{},"injectables/GameService.html":{},"interfaces/RawgAchievementApi.html":{},"interfaces/RawgAchievementsApiResponse.html":{},"interfaces/RawgApiResponse.html":{},"interfaces/RawgGame.html":{}}}],["indicar",{"_index":212,"title":{},"body":{"injectables/ApiService.html":{},"interfaces/RawgAchievementApi.html":{},"interfaces/RawgAchievementsApiResponse.html":{},"interfaces/RawgApiResponse.html":{},"interfaces/RawgGame.html":{}}}],["individual",{"_index":170,"title":{},"body":{"injectables/ApiService.html":{},"interfaces/Game.html":{},"interfaces/GameAchievement.html":{},"components/GameCardComponent.html":{},"injectables/GameService.html":{},"interfaces/RawgAchievementApi.html":{},"interfaces/RawgAchievementsApiResponse.html":{},"interfaces/RawgApiResponse.html":{},"interfaces/RawgGame.html":{}}}],["info",{"_index":3,"title":{},"body":{"injectables/ApiService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthService.html":{},"components/CategoryComponent.html":{},"components/ConfirmationModalComponent.html":{},"components/FooterComponent.html":{},"interfaces/Game.html":{},"interfaces/GameAchievement.html":{},"components/GameCardComponent.html":{},"components/GameDetailModalComponent.html":{},"injectables/GameService.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/MyLibraryComponent.html":{},"interfaces/RawgAchievementApi.html":{},"interfaces/RawgAchievementsApiResponse.html":{},"interfaces/RawgApiResponse.html":{},"interfaces/RawgGame.html":{},"components/RecoverPasswordComponent.html":{},"components/RegisterComponent.html":{},"interfaces/User.html":{},"components/UserProfileComponent.html":{}}}],["información",{"_index":813,"title":{},"body":{"components/FooterComponent.html":{},"components/GameCardComponent.html":{}}}],["ingresar",{"_index":1119,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/UserProfileComponent.html":{}}}],["inicia",{"_index":1293,"title":{},"body":{"components/MyLibraryComponent.html":{},"components/RegisterComponent.html":{},"components/UserProfileComponent.html":{}}}],["inicializa",{"_index":473,"title":{},"body":{"injectables/AuthService.html":{},"components/GameDetailModalComponent.html":{},"components/LoginComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/RegisterComponent.html":{},"interfaces/User.html":{},"components/UserProfileComponent.html":{}}}],["inicializada",{"_index":1006,"title":{},"body":{"components/GameDetailModalComponent.html":{}}}],["inicializado",{"_index":791,"title":{},"body":{"components/ConfirmationModalComponent.html":{}}}],["inicializar",{"_index":786,"title":{},"body":{"components/ConfirmationModalComponent.html":{}}}],["iniciar",{"_index":490,"title":{},"body":{"injectables/AuthService.html":{},"components/CategoryComponent.html":{},"components/GameDetailModalComponent.html":{},"components/LoginComponent.html":{},"components/MyLibraryComponent.html":{},"interfaces/User.html":{},"miscellaneous/variables.html":{}}}],["inicio",{"_index":408,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/RegisterComponent.html":{},"components/UserProfileComponent.html":{}}}],["init",{"_index":425,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/User.html":{}}}],["initialachievements",{"_index":893,"title":{},"body":{"interfaces/Game.html":{},"interfaces/GameAchievement.html":{},"injectables/GameService.html":{}}}],["initprofileform",{"_index":1400,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["initprofileform(user",{"_index":1403,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["inject(authservice",{"_index":1579,"title":{},"body":{"miscellaneous/variables.html":{}}}],["inject(router",{"_index":1580,"title":{},"body":{"miscellaneous/variables.html":{}}}],["injectable",{"_index":0,"title":{"injectables/ApiService.html":{},"injectables/AuthService.html":{},"injectables/GameService.html":{}},"body":{"injectables/ApiService.html":{},"injectables/AuthService.html":{},"interfaces/Game.html":{},"interfaces/GameAchievement.html":{},"injectables/GameService.html":{},"interfaces/RawgAchievementApi.html":{},"interfaces/RawgAchievementsApiResponse.html":{},"interfaces/RawgApiResponse.html":{},"interfaces/RawgGame.html":{},"interfaces/User.html":{},"coverage.html":{}}}],["injectables",{"_index":2,"title":{},"body":{"injectables/ApiService.html":{},"injectables/AuthService.html":{},"injectables/GameService.html":{},"overview.html":{}}}],["input",{"_index":783,"title":{},"body":{"components/ConfirmationModalComponent.html":{},"components/GameCardComponent.html":{},"components/GameDetailModalComponent.html":{}}}],["inputs",{"_index":762,"title":{},"body":{"components/ConfirmationModalComponent.html":{},"components/GameCardComponent.html":{},"components/GameDetailModalComponent.html":{}}}],["instancia",{"_index":787,"title":{},"body":{"components/ConfirmationModalComponent.html":{},"components/GameDetailModalComponent.html":{}}}],["integra",{"_index":1176,"title":{},"body":{"components/MyLibraryComponent.html":{}}}],["integridad",{"_index":859,"title":{},"body":{"interfaces/Game.html":{},"interfaces/GameAchievement.html":{},"injectables/GameService.html":{}}}],["intenta",{"_index":1289,"title":{},"body":{"components/MyLibraryComponent.html":{}}}],["interactuar",{"_index":865,"title":{},"body":{"interfaces/Game.html":{},"interfaces/GameAchievement.html":{},"components/GameDetailModalComponent.html":{},"injectables/GameService.html":{}}}],["interface",{"_index":151,"title":{"interfaces/Game.html":{},"interfaces/GameAchievement.html":{},"interfaces/RawgAchievementApi.html":{},"interfaces/RawgAchievementsApiResponse.html":{},"interfaces/RawgApiResponse.html":{},"interfaces/RawgGame.html":{},"interfaces/User.html":{}},"body":{"injectables/ApiService.html":{},"injectables/AuthService.html":{},"interfaces/Game.html":{},"interfaces/GameAchievement.html":{},"injectables/GameService.html":{},"interfaces/RawgAchievementApi.html":{},"interfaces/RawgAchievementsApiResponse.html":{},"interfaces/RawgApiResponse.html":{},"interfaces/RawgGame.html":{},"interfaces/User.html":{},"coverage.html":{}}}],["interfaces",{"_index":823,"title":{},"body":{"interfaces/Game.html":{},"interfaces/GameAchievement.html":{},"injectables/GameService.html":{},"interfaces/RawgAchievementApi.html":{},"interfaces/RawgAchievementsApiResponse.html":{},"interfaces/RawgApiResponse.html":{},"interfaces/RawgGame.html":{},"interfaces/User.html":{},"overview.html":{}}}],["interfaz",{"_index":110,"title":{},"body":{"injectables/ApiService.html":{},"interfaces/RawgAchievementApi.html":{},"interfaces/RawgAchievementsApiResponse.html":{},"interfaces/RawgApiResponse.html":{},"interfaces/RawgGame.html":{}}}],["introduce",{"_index":1259,"title":{},"body":{"components/MyLibraryComponent.html":{}}}],["inténtalo",{"_index":650,"title":{},"body":{"components/CategoryComponent.html":{}}}],["inválido",{"_index":1333,"title":{},"body":{"components/RecoverPasswordComponent.html":{},"components/RegisterComponent.html":{}}}],["inyecta",{"_index":860,"title":{},"body":{"interfaces/Game.html":{},"interfaces/GameAchievement.html":{},"injectables/GameService.html":{}}}],["ir",{"_index":1435,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["iscompleted",{"_index":1013,"title":{},"body":{"components/GameDetailModalComponent.html":{}}}],["isfavorite",{"_index":245,"title":{},"body":{"injectables/ApiService.html":{},"interfaces/Game.html":{},"interfaces/GameAchievement.html":{},"injectables/GameService.html":{},"interfaces/RawgAchievementApi.html":{},"interfaces/RawgAchievementsApiResponse.html":{},"interfaces/RawgApiResponse.html":{},"interfaces/RawgGame.html":{}}}],["isnan(parsedhours",{"_index":1256,"title":{},"body":{"components/MyLibraryComponent.html":{}}}],["jefe",{"_index":904,"title":{},"body":{"interfaces/Game.html":{},"interfaces/GameAchievement.html":{},"injectables/GameService.html":{}}}],["json.parse(localstorage.getitem(auth_storage_key",{"_index":495,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/User.html":{}}}],["json.parse(localstorage.getitem(user_games_key",{"_index":874,"title":{},"body":{"interfaces/Game.html":{},"interfaces/GameAchievement.html":{},"injectables/GameService.html":{}}}],["json.parse(storeduser",{"_index":471,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/User.html":{}}}],["json.stringify",{"_index":479,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/User.html":{}}}],["json.stringify(allusergames",{"_index":879,"title":{},"body":{"interfaces/Game.html":{},"interfaces/GameAchievement.html":{},"injectables/GameService.html":{}}}],["json.stringify(user",{"_index":500,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/User.html":{}}}],["json.stringify(users",{"_index":510,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/User.html":{}}}],["json.stringify(users[userindex",{"_index":525,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/User.html":{}}}],["juego",{"_index":42,"title":{},"body":{"injectables/ApiService.html":{},"components/CategoryComponent.html":{},"interfaces/Game.html":{},"interfaces/GameAchievement.html":{},"components/GameCardComponent.html":{},"components/GameDetailModalComponent.html":{},"injectables/GameService.html":{},"components/MyLibraryComponent.html":{},"interfaces/RawgAchievementApi.html":{},"interfaces/RawgAchievementsApiResponse.html":{},"interfaces/RawgApiResponse.html":{},"interfaces/RawgGame.html":{}}}],["juegos",{"_index":78,"title":{},"body":{"injectables/ApiService.html":{},"components/CategoryComponent.html":{},"interfaces/Game.html":{},"interfaces/GameAchievement.html":{},"components/GameDetailModalComponent.html":{},"injectables/GameService.html":{},"components/HomeComponent.html":{},"components/MyLibraryComponent.html":{},"interfaces/RawgAchievementApi.html":{},"interfaces/RawgAchievementsApiResponse.html":{},"interfaces/RawgApiResponse.html":{},"interfaces/RawgGame.html":{}}}],["jugadas",{"_index":1173,"title":{},"body":{"components/MyLibraryComponent.html":{}}}],["jugado",{"_index":849,"title":{},"body":{"interfaces/Game.html":{},"interfaces/GameAchievement.html":{},"components/GameCardComponent.html":{},"injectables/GameService.html":{},"components/MyLibraryComponent.html":{}}}],["jugado/pendiente",{"_index":1172,"title":{},"body":{"components/MyLibraryComponent.html":{}}}],["karma",{"_index":1545,"title":{},"body":{"index.html":{}}}],["key",{"_index":873,"title":{},"body":{"interfaces/Game.html":{},"interfaces/GameAchievement.html":{},"injectables/GameService.html":{}}}],["knight",{"_index":1094,"title":{},"body":{"components/HomeComponent.html":{}}}],["la",{"_index":36,"title":{},"body":{"injectables/ApiService.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/CategoryComponent.html":{},"components/ConfirmationModalComponent.html":{},"components/FooterComponent.html":{},"interfaces/Game.html":{},"interfaces/GameAchievement.html":{},"components/GameCardComponent.html":{},"components/GameDetailModalComponent.html":{},"injectables/GameService.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/MyLibraryComponent.html":{},"interfaces/RawgAchievementApi.html":{},"interfaces/RawgAchievementsApiResponse.html":{},"interfaces/RawgApiResponse.html":{},"interfaces/RawgGame.html":{},"components/RecoverPasswordComponent.html":{},"interfaces/User.html":{},"components/UserProfileComponent.html":{},"miscellaneous/functions.html":{}}}],["las",{"_index":105,"title":{},"body":{"injectables/ApiService.html":{},"components/CategoryComponent.html":{},"interfaces/Game.html":{},"interfaces/GameAchievement.html":{},"components/GameCardComponent.html":{},"injectables/GameService.html":{},"components/HomeComponent.html":{},"components/MyLibraryComponent.html":{},"interfaces/RawgAchievementApi.html":{},"interfaces/RawgAchievementsApiResponse.html":{},"interfaces/RawgApiResponse.html":{},"interfaces/RawgGame.html":{},"components/RecoverPasswordComponent.html":{},"components/RegisterComponent.html":{}}}],["legend",{"_index":314,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CategoryComponent.html":{},"components/ConfirmationModalComponent.html":{},"components/FooterComponent.html":{},"components/GameCardComponent.html":{},"components/GameDetailModalComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/MyLibraryComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/RegisterComponent.html":{},"components/UserProfileComponent.html":{},"overview.html":{}}}],["library",{"_index":1179,"title":{},"body":{"components/MyLibraryComponent.html":{}}}],["library'},{'name",{"_index":338,"title":{},"body":{"components/AppComponent.html":{},"components/CategoryComponent.html":{},"components/ConfirmationModalComponent.html":{},"components/FooterComponent.html":{},"components/GameCardComponent.html":{},"components/GameDetailModalComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/MyLibraryComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/RegisterComponent.html":{},"components/UserProfileComponent.html":{}}}],["library.component",{"_index":385,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["library.component.css",{"_index":1180,"title":{},"body":{"components/MyLibraryComponent.html":{}}}],["library.component.html",{"_index":1181,"title":{},"body":{"components/MyLibraryComponent.html":{}}}],["library.component.ts",{"_index":1170,"title":{},"body":{"components/MyLibraryComponent.html":{},"coverage.html":{}}}],["library.component.ts:108",{"_index":1201,"title":{},"body":{"components/MyLibraryComponent.html":{}}}],["library.component.ts:119",{"_index":1203,"title":{},"body":{"components/MyLibraryComponent.html":{}}}],["library.component.ts:130",{"_index":1205,"title":{},"body":{"components/MyLibraryComponent.html":{}}}],["library.component.ts:149",{"_index":1199,"title":{},"body":{"components/MyLibraryComponent.html":{}}}],["library.component.ts:165",{"_index":1210,"title":{},"body":{"components/MyLibraryComponent.html":{}}}],["library.component.ts:175",{"_index":1211,"title":{},"body":{"components/MyLibraryComponent.html":{}}}],["library.component.ts:192",{"_index":1207,"title":{},"body":{"components/MyLibraryComponent.html":{}}}],["library.component.ts:27",{"_index":1223,"title":{},"body":{"components/MyLibraryComponent.html":{}}}],["library.component.ts:28",{"_index":1219,"title":{},"body":{"components/MyLibraryComponent.html":{}}}],["library.component.ts:30",{"_index":1218,"title":{},"body":{"components/MyLibraryComponent.html":{}}}],["library.component.ts:31",{"_index":1212,"title":{},"body":{"components/MyLibraryComponent.html":{}}}],["library.component.ts:32",{"_index":1220,"title":{},"body":{"components/MyLibraryComponent.html":{}}}],["library.component.ts:34",{"_index":1224,"title":{},"body":{"components/MyLibraryComponent.html":{}}}],["library.component.ts:35",{"_index":1227,"title":{},"body":{"components/MyLibraryComponent.html":{}}}],["library.component.ts:36",{"_index":1225,"title":{},"body":{"components/MyLibraryComponent.html":{}}}],["library.component.ts:38",{"_index":1226,"title":{},"body":{"components/MyLibraryComponent.html":{}}}],["library.component.ts:39",{"_index":1222,"title":{},"body":{"components/MyLibraryComponent.html":{}}}],["library.component.ts:42",{"_index":1217,"title":{},"body":{"components/MyLibraryComponent.html":{}}}],["library.component.ts:43",{"_index":1216,"title":{},"body":{"components/MyLibraryComponent.html":{}}}],["library.component.ts:44",{"_index":1215,"title":{},"body":{"components/MyLibraryComponent.html":{}}}],["library.component.ts:46",{"_index":1213,"title":{},"body":{"components/MyLibraryComponent.html":{}}}],["library.component.ts:48",{"_index":1221,"title":{},"body":{"components/MyLibraryComponent.html":{}}}],["library.component.ts:49",{"_index":1196,"title":{},"body":{"components/MyLibraryComponent.html":{}}}],["library.component.ts:57",{"_index":1208,"title":{},"body":{"components/MyLibraryComponent.html":{}}}],["library.component.ts:71",{"_index":1206,"title":{},"body":{"components/MyLibraryComponent.html":{}}}],["library.component.ts:79",{"_index":1197,"title":{},"body":{"components/MyLibraryComponent.html":{}}}],["library/my",{"_index":384,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/MyLibraryComponent.html":{},"coverage.html":{}}}],["librery",{"_index":411,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["lifecycle",{"_index":1003,"title":{},"body":{"components/GameDetailModalComponent.html":{}}}],["limpia",{"_index":1280,"title":{},"body":{"components/MyLibraryComponent.html":{}}}],["limpiar",{"_index":983,"title":{},"body":{"components/GameDetailModalComponent.html":{},"components/RegisterComponent.html":{}}}],["lista",{"_index":37,"title":{},"body":{"injectables/ApiService.html":{},"components/CategoryComponent.html":{},"components/GameDetailModalComponent.html":{},"components/HomeComponent.html":{},"interfaces/RawgAchievementApi.html":{},"interfaces/RawgAchievementsApiResponse.html":{},"interfaces/RawgApiResponse.html":{},"interfaces/RawgGame.html":{}}}],["listener",{"_index":795,"title":{},"body":{"components/ConfirmationModalComponent.html":{},"components/GameDetailModalComponent.html":{}}}],["literal",{"_index":436,"title":{},"body":{"injectables/AuthService.html":{},"injectables/GameService.html":{},"components/HomeComponent.html":{},"interfaces/RawgGame.html":{}}}],["llama",{"_index":805,"title":{},"body":{"components/ConfirmationModalComponent.html":{}}}],["llamadas",{"_index":658,"title":{},"body":{"components/CategoryComponent.html":{}}}],["lo",{"_index":220,"title":{},"body":{"injectables/ApiService.html":{},"interfaces/RawgAchievementApi.html":{},"interfaces/RawgAchievementsApiResponse.html":{},"interfaces/RawgApiResponse.html":{},"interfaces/RawgGame.html":{}}}],["loadgamesandfiltersfromrawg",{"_index":574,"title":{},"body":{"components/CategoryComponent.html":{}}}],["loadgamesandfiltersfromrawg(category",{"_index":591,"title":{},"body":{"components/CategoryComponent.html":{}}}],["loadusergames",{"_index":1194,"title":{},"body":{"components/MyLibraryComponent.html":{}}}],["local",{"_index":835,"title":{},"body":{"interfaces/Game.html":{},"interfaces/GameAchievement.html":{},"injectables/GameService.html":{}}}],["localstorage",{"_index":856,"title":{},"body":{"interfaces/Game.html":{},"interfaces/GameAchievement.html":{},"injectables/GameService.html":{}}}],["localstorage.getitem(auth_storage_key",{"_index":477,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/User.html":{}}}],["localstorage.getitem(current_user_key",{"_index":469,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/User.html":{}}}],["localstorage.removeitem(current_user_key",{"_index":537,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/User.html":{}}}],["localstorage.setitem(auth_storage_key",{"_index":478,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/User.html":{}}}],["localstorage.setitem(current_user_key",{"_index":499,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/User.html":{}}}],["localstorage.setitem(user_games_key",{"_index":878,"title":{},"body":{"interfaces/Game.html":{},"interfaces/GameAchievement.html":{},"injectables/GameService.html":{}}}],["login",{"_index":413,"title":{},"body":{"modules/AppRoutingModule.html":{},"injectables/AuthService.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/RegisterComponent.html":{},"interfaces/User.html":{},"components/UserProfileComponent.html":{}}}],["login'},{'name",{"_index":336,"title":{},"body":{"components/AppComponent.html":{},"components/CategoryComponent.html":{},"components/ConfirmationModalComponent.html":{},"components/FooterComponent.html":{},"components/GameCardComponent.html":{},"components/GameDetailModalComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/MyLibraryComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/RegisterComponent.html":{},"components/UserProfileComponent.html":{}}}],["login(username",{"_index":433,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/User.html":{}}}],["login.component.css",{"_index":1127,"title":{},"body":{"components/LoginComponent.html":{}}}],["login.component.html",{"_index":1128,"title":{},"body":{"components/LoginComponent.html":{}}}],["login/registro",{"_index":1041,"title":{},"body":{"components/HeaderComponent.html":{}}}],["logincomponent",{"_index":335,"title":{"components/LoginComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/CategoryComponent.html":{},"components/ConfirmationModalComponent.html":{},"components/FooterComponent.html":{},"components/GameCardComponent.html":{},"components/GameDetailModalComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/MyLibraryComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/RegisterComponent.html":{},"components/UserProfileComponent.html":{},"coverage.html":{},"overview.html":{}}}],["loginform",{"_index":1129,"title":{},"body":{"components/LoginComponent.html":{}}}],["loginmessage",{"_index":1130,"title":{},"body":{"components/LoginComponent.html":{}}}],["logout",{"_index":426,"title":{},"body":{"injectables/AuthService.html":{},"components/HeaderComponent.html":{},"interfaces/User.html":{}}}],["logro",{"_index":114,"title":{},"body":{"injectables/ApiService.html":{},"interfaces/Game.html":{},"interfaces/GameAchievement.html":{},"components/GameDetailModalComponent.html":{},"injectables/GameService.html":{},"interfaces/RawgAchievementApi.html":{},"interfaces/RawgAchievementsApiResponse.html":{},"interfaces/RawgApiResponse.html":{},"interfaces/RawgGame.html":{}}}],["logros",{"_index":39,"title":{},"body":{"injectables/ApiService.html":{},"components/CategoryComponent.html":{},"interfaces/Game.html":{},"interfaces/GameAchievement.html":{},"components/GameDetailModalComponent.html":{},"injectables/GameService.html":{},"interfaces/RawgAchievementApi.html":{},"interfaces/RawgAchievementsApiResponse.html":{},"interfaces/RawgApiResponse.html":{},"interfaces/RawgGame.html":{}}}],["logueado",{"_index":1323,"title":{},"body":{"components/RecoverPasswordComponent.html":{},"components/RegisterComponent.html":{}}}],["los",{"_index":60,"title":{},"body":{"injectables/ApiService.html":{},"components/CategoryComponent.html":{},"components/FooterComponent.html":{},"interfaces/Game.html":{},"interfaces/GameAchievement.html":{},"components/GameDetailModalComponent.html":{},"injectables/GameService.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/MyLibraryComponent.html":{},"interfaces/RawgAchievementApi.html":{},"interfaces/RawgAchievementsApiResponse.html":{},"interfaces/RawgApiResponse.html":{},"interfaces/RawgGame.html":{},"components/RecoverPasswordComponent.html":{},"components/RegisterComponent.html":{},"components/UserProfileComponent.html":{}}}],["lowercase",{"_index":1117,"title":{},"body":{"components/HomeComponent.html":{}}}],["maneja",{"_index":702,"title":{},"body":{"components/CategoryComponent.html":{},"components/GameDetailModalComponent.html":{},"components/MyLibraryComponent.html":{},"components/UserProfileComponent.html":{}}}],["maneje",{"_index":221,"title":{},"body":{"injectables/ApiService.html":{},"interfaces/RawgAchievementApi.html":{},"interfaces/RawgAchievementsApiResponse.html":{},"interfaces/RawgApiResponse.html":{},"interfaces/RawgGame.html":{}}}],["manteniendo",{"_index":858,"title":{},"body":{"interfaces/Game.html":{},"interfaces/GameAchievement.html":{},"injectables/GameService.html":{}}}],["map",{"_index":144,"title":{},"body":{"injectables/ApiService.html":{},"components/HomeComponent.html":{},"interfaces/RawgAchievementApi.html":{},"interfaces/RawgAchievementsApiResponse.html":{},"interfaces/RawgApiResponse.html":{},"interfaces/RawgGame.html":{}}}],["map(rawggame",{"_index":209,"title":{},"body":{"injectables/ApiService.html":{},"interfaces/RawgAchievementApi.html":{},"interfaces/RawgAchievementsApiResponse.html":{},"interfaces/RawgApiResponse.html":{},"interfaces/RawgGame.html":{}}}],["map(response",{"_index":195,"title":{},"body":{"injectables/ApiService.html":{},"interfaces/RawgAchievementApi.html":{},"interfaces/RawgAchievementsApiResponse.html":{},"interfaces/RawgApiResponse.html":{},"interfaces/RawgGame.html":{}}}],["map(user",{"_index":1582,"title":{},"body":{"miscellaneous/variables.html":{}}}],["mapea",{"_index":109,"title":{},"body":{"injectables/ApiService.html":{},"interfaces/RawgAchievementApi.html":{},"interfaces/RawgAchievementsApiResponse.html":{},"interfaces/RawgApiResponse.html":{},"interfaces/RawgGame.html":{}}}],["maprawgachievementtogameachievement",{"_index":19,"title":{},"body":{"injectables/ApiService.html":{}}}],["maprawgachievementtogameachievement(rawgachievement",{"_index":106,"title":{},"body":{"injectables/ApiService.html":{},"interfaces/RawgAchievementApi.html":{},"interfaces/RawgAchievementsApiResponse.html":{},"interfaces/RawgApiResponse.html":{},"interfaces/RawgGame.html":{}}}],["maprawggametogame",{"_index":20,"title":{},"body":{"injectables/ApiService.html":{}}}],["maprawggametogame(rawggame",{"_index":120,"title":{},"body":{"injectables/ApiService.html":{},"interfaces/RawgAchievementApi.html":{},"interfaces/RawgAchievementsApiResponse.html":{},"interfaces/RawgApiResponse.html":{},"interfaces/RawgGame.html":{}}}],["marcado",{"_index":850,"title":{},"body":{"interfaces/Game.html":{},"interfaces/GameAchievement.html":{},"injectables/GameService.html":{}}}],["marcar",{"_index":968,"title":{},"body":{"components/GameCardComponent.html":{},"components/MyLibraryComponent.html":{}}}],["marcar/desmarcar",{"_index":970,"title":{},"body":{"components/GameDetailModalComponent.html":{}}}],["marked",{"_index":1091,"title":{},"body":{"components/HomeComponent.html":{}}}],["matchesfavorite",{"_index":1243,"title":{},"body":{"components/MyLibraryComponent.html":{}}}],["matchesgenre",{"_index":700,"title":{},"body":{"components/CategoryComponent.html":{}}}],["matchesplatform",{"_index":698,"title":{},"body":{"components/CategoryComponent.html":{}}}],["matchessearch",{"_index":695,"title":{},"body":{"components/CategoryComponent.html":{},"components/MyLibraryComponent.html":{}}}],["matchesstatus",{"_index":1242,"title":{},"body":{"components/MyLibraryComponent.html":{}}}],["matching",{"_index":259,"title":{},"body":{"injectables/ApiService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthService.html":{},"components/CategoryComponent.html":{},"components/ConfirmationModalComponent.html":{},"components/FooterComponent.html":{},"interfaces/Game.html":{},"interfaces/GameAchievement.html":{},"components/GameCardComponent.html":{},"components/GameDetailModalComponent.html":{},"injectables/GameService.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/MyLibraryComponent.html":{},"interfaces/RawgAchievementApi.html":{},"interfaces/RawgAchievementsApiResponse.html":{},"interfaces/RawgApiResponse.html":{},"interfaces/RawgGame.html":{},"components/RecoverPasswordComponent.html":{},"components/RegisterComponent.html":{},"interfaces/User.html":{},"components/UserProfileComponent.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["mayúscula",{"_index":1338,"title":{},"body":{"components/RecoverPasswordComponent.html":{},"components/RegisterComponent.html":{},"components/UserProfileComponent.html":{}}}],["memoria",{"_index":1431,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["menos",{"_index":1387,"title":{},"body":{"components/RegisterComponent.html":{},"components/UserProfileComponent.html":{}}}],["mensaje",{"_index":745,"title":{},"body":{"components/ConfirmationModalComponent.html":{}}}],["mensajes",{"_index":1394,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["message",{"_index":493,"title":{},"body":{"injectables/AuthService.html":{},"components/CategoryComponent.html":{},"components/ConfirmationModalComponent.html":{},"interfaces/Game.html":{},"interfaces/GameAchievement.html":{},"components/GameDetailModalComponent.html":{},"injectables/GameService.html":{},"components/MyLibraryComponent.html":{},"components/RegisterComponent.html":{},"interfaces/User.html":{}}}],["metadata",{"_index":291,"title":{},"body":{"components/AppComponent.html":{},"components/CategoryComponent.html":{},"components/ConfirmationModalComponent.html":{},"components/FooterComponent.html":{},"components/GameCardComponent.html":{},"components/GameDetailModalComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/MyLibraryComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/RegisterComponent.html":{},"components/UserProfileComponent.html":{}}}],["methods",{"_index":13,"title":{},"body":{"injectables/ApiService.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/CategoryComponent.html":{},"components/ConfirmationModalComponent.html":{},"components/GameDetailModalComponent.html":{},"injectables/GameService.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/MyLibraryComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/RegisterComponent.html":{},"components/UserProfileComponent.html":{}}}],["mi",{"_index":707,"title":{},"body":{"components/CategoryComponent.html":{},"components/GameCardComponent.html":{},"components/HeaderComponent.html":{},"components/MyLibraryComponent.html":{},"components/UserProfileComponent.html":{}}}],["minage",{"_index":1499,"title":{},"body":{"miscellaneous/functions.html":{}}}],["minagevalidator",{"_index":1369,"title":{},"body":{"components/RegisterComponent.html":{},"components/UserProfileComponent.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["minagevalidator(13",{"_index":1374,"title":{},"body":{"components/RegisterComponent.html":{},"components/UserProfileComponent.html":{}}}],["minagevalidator(minage",{"_index":1498,"title":{},"body":{"miscellaneous/functions.html":{}}}],["miscellaneous",{"_index":1493,"title":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["modal",{"_index":552,"title":{},"body":{"components/CategoryComponent.html":{},"components/ConfirmationModalComponent.html":{},"components/GameDetailModalComponent.html":{},"components/MyLibraryComponent.html":{}}}],["modal'},{'name",{"_index":324,"title":{},"body":{"components/AppComponent.html":{},"components/CategoryComponent.html":{},"components/ConfirmationModalComponent.html":{},"components/FooterComponent.html":{},"components/GameCardComponent.html":{},"components/GameDetailModalComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/MyLibraryComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/RegisterComponent.html":{},"components/UserProfileComponent.html":{}}}],["modal.component",{"_index":380,"title":{},"body":{"modules/AppModule.html":{},"components/CategoryComponent.html":{},"components/MyLibraryComponent.html":{}}}],["modal.component.css",{"_index":753,"title":{},"body":{"components/ConfirmationModalComponent.html":{},"components/GameDetailModalComponent.html":{}}}],["modal.component.html",{"_index":754,"title":{},"body":{"components/ConfirmationModalComponent.html":{},"components/GameDetailModalComponent.html":{}}}],["modal.component.ts",{"_index":739,"title":{},"body":{"components/ConfirmationModalComponent.html":{},"components/GameDetailModalComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["modal.component.ts:110",{"_index":987,"title":{},"body":{"components/GameDetailModalComponent.html":{}}}],["modal.component.ts:24",{"_index":995,"title":{},"body":{"components/GameDetailModalComponent.html":{}}}],["modal.component.ts:25",{"_index":994,"title":{},"body":{"components/GameDetailModalComponent.html":{}}}],["modal.component.ts:28",{"_index":772,"title":{},"body":{"components/ConfirmationModalComponent.html":{}}}],["modal.component.ts:29",{"_index":771,"title":{},"body":{"components/ConfirmationModalComponent.html":{}}}],["modal.component.ts:30",{"_index":768,"title":{},"body":{"components/ConfirmationModalComponent.html":{}}}],["modal.component.ts:31",{"_index":978,"title":{},"body":{"components/GameDetailModalComponent.html":{}}}],["modal.component.ts:32",{"_index":774,"title":{},"body":{"components/ConfirmationModalComponent.html":{}}}],["modal.component.ts:34",{"_index":782,"title":{},"body":{"components/ConfirmationModalComponent.html":{}}}],["modal.component.ts:35",{"_index":766,"title":{},"body":{"components/ConfirmationModalComponent.html":{}}}],["modal.component.ts:38",{"_index":979,"title":{},"body":{"components/GameDetailModalComponent.html":{}}}],["modal.component.ts:39",{"_index":776,"title":{},"body":{"components/ConfirmationModalComponent.html":{}}}],["modal.component.ts:44",{"_index":997,"title":{},"body":{"components/GameDetailModalComponent.html":{}}}],["modal.component.ts:46",{"_index":974,"title":{},"body":{"components/GameDetailModalComponent.html":{}}}],["modal.component.ts:55",{"_index":779,"title":{},"body":{"components/ConfirmationModalComponent.html":{}}}],["modal.component.ts:62",{"_index":775,"title":{},"body":{"components/ConfirmationModalComponent.html":{}}}],["modal.component.ts:64",{"_index":981,"title":{},"body":{"components/GameDetailModalComponent.html":{}}}],["modal.component.ts:69",{"_index":778,"title":{},"body":{"components/ConfirmationModalComponent.html":{}}}],["modal.component.ts:75",{"_index":777,"title":{},"body":{"components/ConfirmationModalComponent.html":{}}}],["modal.component.ts:84",{"_index":993,"title":{},"body":{"components/GameDetailModalComponent.html":{}}}],["modal.component.ts:95",{"_index":980,"title":{},"body":{"components/GameDetailModalComponent.html":{}}}],["modal/confirmation",{"_index":398,"title":{},"body":{"modules/AppModule.html":{},"components/ConfirmationModalComponent.html":{},"components/MyLibraryComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["modal/game",{"_index":379,"title":{},"body":{"modules/AppModule.html":{},"components/CategoryComponent.html":{},"components/GameDetailModalComponent.html":{},"components/MyLibraryComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["modalelementref",{"_index":756,"title":{},"body":{"components/ConfirmationModalComponent.html":{},"components/GameDetailModalComponent.html":{}}}],["modales",{"_index":1177,"title":{},"body":{"components/MyLibraryComponent.html":{}}}],["module",{"_index":348,"title":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["modules",{"_index":350,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["more",{"_index":1557,"title":{},"body":{"index.html":{}}}],["mostrando",{"_index":1096,"title":{},"body":{"components/HomeComponent.html":{}}}],["mostrar",{"_index":540,"title":{},"body":{"components/CategoryComponent.html":{},"components/ConfirmationModalComponent.html":{},"components/GameCardComponent.html":{},"components/GameDetailModalComponent.html":{},"components/MyLibraryComponent.html":{},"components/UserProfileComponent.html":{}}}],["muestra",{"_index":802,"title":{},"body":{"components/ConfirmationModalComponent.html":{},"components/GameCardComponent.html":{},"components/GameDetailModalComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/MyLibraryComponent.html":{},"components/UserProfileComponent.html":{}}}],["my_game_library_currentuser",{"_index":458,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/User.html":{},"miscellaneous/variables.html":{}}}],["my_game_library_usergames",{"_index":460,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Game.html":{},"interfaces/GameAchievement.html":{},"injectables/GameService.html":{},"interfaces/User.html":{},"miscellaneous/variables.html":{}}}],["my_game_library_users",{"_index":456,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/User.html":{},"miscellaneous/variables.html":{}}}],["mylibrarycomponent",{"_index":337,"title":{"components/MyLibraryComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/CategoryComponent.html":{},"components/ConfirmationModalComponent.html":{},"components/FooterComponent.html":{},"components/GameCardComponent.html":{},"components/GameDetailModalComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/MyLibraryComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/RegisterComponent.html":{},"components/UserProfileComponent.html":{},"coverage.html":{},"overview.html":{}}}],["más",{"_index":162,"title":{},"body":{"injectables/ApiService.html":{},"components/CategoryComponent.html":{},"interfaces/RawgAchievementApi.html":{},"interfaces/RawgAchievementsApiResponse.html":{},"interfaces/RawgApiResponse.html":{},"interfaces/RawgGame.html":{}}}],["métodos",{"_index":857,"title":{},"body":{"interfaces/Game.html":{},"interfaces/GameAchievement.html":{},"injectables/GameService.html":{}}}],["mínima",{"_index":1501,"title":{},"body":{"miscellaneous/functions.html":{}}}],["mínimo",{"_index":1335,"title":{},"body":{"components/RecoverPasswordComponent.html":{},"components/RegisterComponent.html":{},"components/UserProfileComponent.html":{}}}],["múltiples",{"_index":657,"title":{},"body":{"components/CategoryComponent.html":{}}}],["nacimiento",{"_index":1386,"title":{},"body":{"components/RegisterComponent.html":{},"components/UserProfileComponent.html":{}}}],["name",{"_index":28,"title":{},"body":{"injectables/ApiService.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/CategoryComponent.html":{},"components/ConfirmationModalComponent.html":{},"components/FooterComponent.html":{},"interfaces/Game.html":{},"interfaces/GameAchievement.html":{},"components/GameCardComponent.html":{},"components/GameDetailModalComponent.html":{},"injectables/GameService.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/MyLibraryComponent.html":{},"interfaces/RawgAchievementApi.html":{},"interfaces/RawgAchievementsApiResponse.html":{},"interfaces/RawgApiResponse.html":{},"interfaces/RawgGame.html":{},"components/RecoverPasswordComponent.html":{},"components/RegisterComponent.html":{},"components/UserProfileComponent.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["nativo",{"_index":1002,"title":{},"body":{"components/GameDetailModalComponent.html":{}}}],["navegación",{"_index":1039,"title":{},"body":{"components/HeaderComponent.html":{}}}],["navegar",{"_index":1061,"title":{},"body":{"components/HomeComponent.html":{}}}],["navigate",{"_index":1522,"title":{},"body":{"index.html":{}}}],["ndice",{"_index":989,"title":{},"body":{"components/GameDetailModalComponent.html":{}}}],["necesiten",{"_index":864,"title":{},"body":{"interfaces/Game.html":{},"interfaces/GameAchievement.html":{},"injectables/GameService.html":{}}}],["necesites",{"_index":161,"title":{},"body":{"injectables/ApiService.html":{},"interfaces/RawgAchievementApi.html":{},"interfaces/RawgAchievementsApiResponse.html":{},"interfaces/RawgApiResponse.html":{},"interfaces/RawgGame.html":{}}}],["need",{"_index":1550,"title":{},"body":{"index.html":{}}}],["new",{"_index":180,"title":{},"body":{"injectables/ApiService.html":{},"injectables/AuthService.html":{},"components/CategoryComponent.html":{},"components/ConfirmationModalComponent.html":{},"components/GameCardComponent.html":{},"components/GameDetailModalComponent.html":{},"interfaces/RawgAchievementApi.html":{},"interfaces/RawgAchievementsApiResponse.html":{},"interfaces/RawgApiResponse.html":{},"interfaces/RawgGame.html":{},"interfaces/User.html":{},"coverage.html":{},"index.html":{}}}],["newgame",{"_index":870,"title":{},"body":{"interfaces/Game.html":{},"interfaces/GameAchievement.html":{},"injectables/GameService.html":{}}}],["newgame.title",{"_index":915,"title":{},"body":{"interfaces/Game.html":{},"interfaces/GameAchievement.html":{},"injectables/GameService.html":{}}}],["newgameid",{"_index":884,"title":{},"body":{"interfaces/Game.html":{},"interfaces/GameAchievement.html":{},"injectables/GameService.html":{}}}],["newhoursstr",{"_index":1250,"title":{},"body":{"components/MyLibraryComponent.html":{}}}],["newpassword",{"_index":442,"title":{},"body":{"injectables/AuthService.html":{},"components/RecoverPasswordComponent.html":{},"interfaces/User.html":{}}}],["newuser",{"_index":440,"title":{},"body":{"injectables/AuthService.html":{},"components/RegisterComponent.html":{}}}],["newuser.username",{"_index":507,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/User.html":{}}}],["newuserdata",{"_index":446,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/User.html":{}}}],["newuserdata.username",{"_index":532,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/User.html":{}}}],["next",{"_index":154,"title":{},"body":{"injectables/ApiService.html":{},"components/CategoryComponent.html":{},"components/HomeComponent.html":{},"interfaces/RawgAchievementApi.html":{},"interfaces/RawgAchievementsApiResponse.html":{},"interfaces/RawgApiResponse.html":{},"interfaces/RawgGame.html":{}}}],["ng",{"_index":1519,"title":{},"body":{"index.html":{}}}],["ngafterviewinit",{"_index":758,"title":{},"body":{"components/ConfirmationModalComponent.html":{},"components/GameDetailModalComponent.html":{}}}],["ngmodule",{"_index":367,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["ngondestroy",{"_index":575,"title":{},"body":{"components/CategoryComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/MyLibraryComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/RegisterComponent.html":{},"components/UserProfileComponent.html":{}}}],["ngoninit",{"_index":299,"title":{},"body":{"components/AppComponent.html":{},"components/CategoryComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/MyLibraryComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/RegisterComponent.html":{},"components/UserProfileComponent.html":{}}}],["nicas",{"_index":662,"title":{},"body":{"components/CategoryComponent.html":{}}}],["nico",{"_index":843,"title":{},"body":{"interfaces/Game.html":{},"interfaces/GameAchievement.html":{},"injectables/GameService.html":{}}}],["noachievements",{"_index":1024,"title":{},"body":{"components/GameDetailModalComponent.html":{}}}],["nogamesfound",{"_index":735,"title":{},"body":{"components/CategoryComponent.html":{},"components/MyLibraryComponent.html":{}}}],["nombre",{"_index":502,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Game.html":{},"interfaces/GameAchievement.html":{},"injectables/GameService.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"interfaces/User.html":{},"components/UserProfileComponent.html":{},"miscellaneous/functions.html":{}}}],["nombres",{"_index":103,"title":{},"body":{"injectables/ApiService.html":{},"interfaces/RawgAchievementApi.html":{},"interfaces/RawgAchievementsApiResponse.html":{},"interfaces/RawgApiResponse.html":{},"interfaces/RawgGame.html":{}}}],["normal",{"_index":466,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/User.html":{}}}],["nuestra",{"_index":111,"title":{},"body":{"injectables/ApiService.html":{},"interfaces/RawgAchievementApi.html":{},"interfaces/RawgAchievementsApiResponse.html":{},"interfaces/RawgApiResponse.html":{},"interfaces/RawgGame.html":{}}}],["nueva",{"_index":1303,"title":{},"body":{"components/RecoverPasswordComponent.html":{},"components/RegisterComponent.html":{}}}],["nuevo",{"_index":530,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Game.html":{},"interfaces/GameAchievement.html":{},"components/GameDetailModalComponent.html":{},"injectables/GameService.html":{},"components/RegisterComponent.html":{},"interfaces/User.html":{}}}],["nuevos",{"_index":1346,"title":{},"body":{"components/RegisterComponent.html":{}}}],["null",{"_index":155,"title":{},"body":{"injectables/ApiService.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/CategoryComponent.html":{},"components/GameDetailModalComponent.html":{},"components/MyLibraryComponent.html":{},"interfaces/RawgAchievementApi.html":{},"interfaces/RawgAchievementsApiResponse.html":{},"interfaces/RawgApiResponse.html":{},"interfaces/RawgGame.html":{},"interfaces/User.html":{},"components/UserProfileComponent.html":{}}}],["number",{"_index":33,"title":{},"body":{"injectables/ApiService.html":{},"interfaces/Game.html":{},"interfaces/GameAchievement.html":{},"components/GameDetailModalComponent.html":{},"injectables/GameService.html":{},"components/MyLibraryComponent.html":{},"interfaces/RawgAchievementApi.html":{},"interfaces/RawgAchievementsApiResponse.html":{},"interfaces/RawgApiResponse.html":{},"interfaces/RawgGame.html":{},"miscellaneous/functions.html":{}}}],["número",{"_index":93,"title":{},"body":{"injectables/ApiService.html":{},"interfaces/Game.html":{},"interfaces/GameAchievement.html":{},"injectables/GameService.html":{},"components/MyLibraryComponent.html":{},"interfaces/RawgAchievementApi.html":{},"interfaces/RawgAchievementsApiResponse.html":{},"interfaces/RawgApiResponse.html":{},"interfaces/RawgGame.html":{},"components/RecoverPasswordComponent.html":{},"components/RegisterComponent.html":{},"components/UserProfileComponent.html":{}}}],["o",{"_index":86,"title":{},"body":{"injectables/ApiService.html":{},"injectables/AuthService.html":{},"components/CategoryComponent.html":{},"components/ConfirmationModalComponent.html":{},"interfaces/Game.html":{},"interfaces/GameAchievement.html":{},"injectables/GameService.html":{},"components/HomeComponent.html":{},"components/MyLibraryComponent.html":{},"interfaces/RawgAchievementApi.html":{},"interfaces/RawgAchievementsApiResponse.html":{},"interfaces/RawgApiResponse.html":{},"interfaces/RawgGame.html":{},"interfaces/User.html":{}}}],["objeto",{"_index":63,"title":{},"body":{"injectables/ApiService.html":{},"components/GameDetailModalComponent.html":{},"interfaces/RawgAchievementApi.html":{},"interfaces/RawgAchievementsApiResponse.html":{},"interfaces/RawgApiResponse.html":{},"interfaces/RawgGame.html":{}}}],["objetos",{"_index":56,"title":{},"body":{"injectables/ApiService.html":{},"interfaces/RawgAchievementApi.html":{},"interfaces/RawgAchievementsApiResponse.html":{},"interfaces/RawgApiResponse.html":{},"interfaces/RawgGame.html":{}}}],["obligatorio",{"_index":1162,"title":{},"body":{"components/LoginComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/RegisterComponent.html":{},"components/UserProfileComponent.html":{}}}],["observable",{"_index":54,"title":{},"body":{"injectables/ApiService.html":{},"injectables/AuthService.html":{},"interfaces/RawgAchievementApi.html":{},"interfaces/RawgAchievementsApiResponse.html":{},"interfaces/RawgApiResponse.html":{},"interfaces/RawgGame.html":{},"interfaces/User.html":{}}}],["obtener",{"_index":487,"title":{},"body":{"injectables/AuthService.html":{},"components/CategoryComponent.html":{},"interfaces/Game.html":{},"interfaces/GameAchievement.html":{},"injectables/GameService.html":{},"components/MyLibraryComponent.html":{},"interfaces/User.html":{}}}],["obtiene",{"_index":35,"title":{},"body":{"injectables/ApiService.html":{},"interfaces/Game.html":{},"interfaces/GameAchievement.html":{},"components/GameDetailModalComponent.html":{},"injectables/GameService.html":{},"interfaces/RawgAchievementApi.html":{},"interfaces/RawgAchievementsApiResponse.html":{},"interfaces/RawgApiResponse.html":{},"interfaces/RawgGame.html":{}}}],["obtienen",{"_index":129,"title":{},"body":{"injectables/ApiService.html":{},"interfaces/RawgAchievementApi.html":{},"interfaces/RawgAchievementsApiResponse.html":{},"interfaces/RawgApiResponse.html":{},"interfaces/RawgGame.html":{}}}],["oculta",{"_index":796,"title":{},"body":{"components/ConfirmationModalComponent.html":{},"components/GameDetailModalComponent.html":{}}}],["of(game",{"_index":1284,"title":{},"body":{"components/MyLibraryComponent.html":{}}}],["ofrece",{"_index":547,"title":{},"body":{"components/CategoryComponent.html":{},"interfaces/Game.html":{},"interfaces/GameAchievement.html":{},"injectables/GameService.html":{}}}],["olvidaste",{"_index":1164,"title":{},"body":{"components/LoginComponent.html":{}}}],["onachievementchange",{"_index":971,"title":{},"body":{"components/GameDetailModalComponent.html":{}}}],["onachievementchange(gameid",{"_index":984,"title":{},"body":{"components/GameDetailModalComponent.html":{}}}],["oncancel",{"_index":759,"title":{},"body":{"components/ConfirmationModalComponent.html":{}}}],["onconfirm",{"_index":760,"title":{},"body":{"components/ConfirmationModalComponent.html":{}}}],["ondeleteconfirmation",{"_index":1195,"title":{},"body":{"components/MyLibraryComponent.html":{}}}],["ondeleteconfirmation(confirmed",{"_index":1209,"title":{},"body":{"components/MyLibraryComponent.html":{}}}],["ondestroy",{"_index":553,"title":{},"body":{"components/CategoryComponent.html":{},"components/LoginComponent.html":{},"components/MyLibraryComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/RegisterComponent.html":{},"components/UserProfileComponent.html":{}}}],["oninit",{"_index":290,"title":{},"body":{"components/AppComponent.html":{},"components/CategoryComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/MyLibraryComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/RegisterComponent.html":{},"components/UserProfileComponent.html":{}}}],["onsubmit",{"_index":1131,"title":{},"body":{"components/LoginComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/RegisterComponent.html":{}}}],["opcional",{"_index":852,"title":{},"body":{"interfaces/Game.html":{},"interfaces/GameAchievement.html":{},"injectables/GameService.html":{}}}],["opciones",{"_index":661,"title":{},"body":{"components/CategoryComponent.html":{}}}],["opengamedetailmodal",{"_index":576,"title":{},"body":{"components/CategoryComponent.html":{},"components/MyLibraryComponent.html":{}}}],["opengamedetailmodal(game",{"_index":595,"title":{},"body":{"components/CategoryComponent.html":{},"components/MyLibraryComponent.html":{}}}],["operaciones",{"_index":831,"title":{},"body":{"interfaces/Game.html":{},"interfaces/GameAchievement.html":{},"injectables/GameService.html":{}}}],["optional",{"_index":30,"title":{},"body":{"injectables/ApiService.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/CategoryComponent.html":{},"components/GameDetailModalComponent.html":{},"injectables/GameService.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/MyLibraryComponent.html":{},"interfaces/RawgGame.html":{},"components/RecoverPasswordComponent.html":{},"components/RegisterComponent.html":{},"components/UserProfileComponent.html":{},"miscellaneous/functions.html":{}}}],["originalusername",{"_index":448,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/User.html":{}}}],["oscar",{"_index":480,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/User.html":{}}}],["oscar.sanzana.97@gmail.com",{"_index":482,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/User.html":{}}}],["out",{"_index":364,"title":{},"body":{"modules/AppModule.html":{},"index.html":{},"overview.html":{}}}],["outlet",{"_index":281,"title":{},"body":{"components/AppComponent.html":{}}}],["output",{"_index":784,"title":{},"body":{"components/ConfirmationModalComponent.html":{},"components/GameCardComponent.html":{},"components/GameDetailModalComponent.html":{}}}],["outputs",{"_index":764,"title":{},"body":{"components/ConfirmationModalComponent.html":{},"components/GameCardComponent.html":{},"components/GameDetailModalComponent.html":{}}}],["overview",{"_index":1560,"title":{"overview.html":{}},"body":{"index.html":{},"overview.html":{}}}],["p.platform.name).join",{"_index":237,"title":{},"body":{"injectables/ApiService.html":{},"interfaces/RawgAchievementApi.html":{},"interfaces/RawgAchievementsApiResponse.html":{},"interfaces/RawgApiResponse.html":{},"interfaces/RawgGame.html":{}}}],["p.trim()).foreach(p",{"_index":669,"title":{},"body":{"components/CategoryComponent.html":{}}}],["package",{"_index":1476,"title":{"dependencies.html":{},"properties.html":{}},"body":{"index.html":{}}}],["padre",{"_index":935,"title":{},"body":{"components/GameCardComponent.html":{}}}],["page",{"_index":1562,"title":{},"body":{"index.html":{}}}],["page_size",{"_index":75,"title":{},"body":{"injectables/ApiService.html":{},"interfaces/RawgAchievementApi.html":{},"interfaces/RawgAchievementsApiResponse.html":{},"interfaces/RawgApiResponse.html":{},"interfaces/RawgGame.html":{}}}],["page_size.tostring",{"_index":183,"title":{},"body":{"injectables/ApiService.html":{},"interfaces/RawgAchievementApi.html":{},"interfaces/RawgAchievementsApiResponse.html":{},"interfaces/RawgApiResponse.html":{},"interfaces/RawgGame.html":{}}}],["para",{"_index":40,"title":{},"body":{"injectables/ApiService.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthService.html":{},"components/CategoryComponent.html":{},"components/ConfirmationModalComponent.html":{},"components/FooterComponent.html":{},"interfaces/Game.html":{},"interfaces/GameAchievement.html":{},"components/GameCardComponent.html":{},"components/GameDetailModalComponent.html":{},"injectables/GameService.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/MyLibraryComponent.html":{},"interfaces/RawgAchievementApi.html":{},"interfaces/RawgAchievementsApiResponse.html":{},"interfaces/RawgApiResponse.html":{},"interfaces/RawgGame.html":{},"components/RecoverPasswordComponent.html":{},"components/RegisterComponent.html":{},"interfaces/User.html":{},"components/UserProfileComponent.html":{},"miscellaneous/variables.html":{}}}],["paralelo",{"_index":659,"title":{},"body":{"components/CategoryComponent.html":{}}}],["param",{"_index":178,"title":{},"body":{"injectables/ApiService.html":{},"components/GameDetailModalComponent.html":{},"interfaces/RawgAchievementApi.html":{},"interfaces/RawgAchievementsApiResponse.html":{},"interfaces/RawgApiResponse.html":{},"interfaces/RawgGame.html":{}}}],["parameters",{"_index":26,"title":{},"body":{"injectables/ApiService.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/CategoryComponent.html":{},"components/GameDetailModalComponent.html":{},"injectables/GameService.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/MyLibraryComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/RegisterComponent.html":{},"components/UserProfileComponent.html":{},"miscellaneous/functions.html":{}}}],["params",{"_index":179,"title":{},"body":{"injectables/ApiService.html":{},"interfaces/RawgAchievementApi.html":{},"interfaces/RawgAchievementsApiResponse.html":{},"interfaces/RawgApiResponse.html":{},"interfaces/RawgGame.html":{}}}],["params.get('categoryslug",{"_index":630,"title":{},"body":{"components/CategoryComponent.html":{}}}],["params.set('genres",{"_index":185,"title":{},"body":{"injectables/ApiService.html":{},"interfaces/RawgAchievementApi.html":{},"interfaces/RawgAchievementsApiResponse.html":{},"interfaces/RawgApiResponse.html":{},"interfaces/RawgGame.html":{}}}],["params.set('platforms",{"_index":186,"title":{},"body":{"injectables/ApiService.html":{},"interfaces/RawgAchievementApi.html":{},"interfaces/RawgAchievementsApiResponse.html":{},"interfaces/RawgApiResponse.html":{},"interfaces/RawgGame.html":{}}}],["params.set('search",{"_index":184,"title":{},"body":{"injectables/ApiService.html":{},"interfaces/RawgAchievementApi.html":{},"interfaces/RawgAchievementsApiResponse.html":{},"interfaces/RawgApiResponse.html":{},"interfaces/RawgGame.html":{}}}],["parsedhours",{"_index":1254,"title":{},"body":{"components/MyLibraryComponent.html":{}}}],["parsefloat(newhoursstr",{"_index":1255,"title":{},"body":{"components/MyLibraryComponent.html":{}}}],["partial",{"_index":882,"title":{},"body":{"interfaces/Game.html":{},"interfaces/GameAchievement.html":{},"injectables/GameService.html":{}}}],["pasa",{"_index":720,"title":{},"body":{"components/CategoryComponent.html":{}}}],["pasar",{"_index":211,"title":{},"body":{"injectables/ApiService.html":{},"components/MyLibraryComponent.html":{},"interfaces/RawgAchievementApi.html":{},"interfaces/RawgAchievementsApiResponse.html":{},"interfaces/RawgApiResponse.html":{},"interfaces/RawgGame.html":{}}}],["password",{"_index":415,"title":{},"body":{"modules/AppRoutingModule.html":{},"injectables/AuthService.html":{},"components/LoginComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/RegisterComponent.html":{},"interfaces/User.html":{},"components/UserProfileComponent.html":{}}}],["password'},{'name",{"_index":341,"title":{},"body":{"components/AppComponent.html":{},"components/CategoryComponent.html":{},"components/ConfirmationModalComponent.html":{},"components/FooterComponent.html":{},"components/GameCardComponent.html":{},"components/GameDetailModalComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/MyLibraryComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/RegisterComponent.html":{},"components/UserProfileComponent.html":{}}}],["password.component",{"_index":393,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["password.component.css",{"_index":1307,"title":{},"body":{"components/RecoverPasswordComponent.html":{}}}],["password.component.html",{"_index":1308,"title":{},"body":{"components/RecoverPasswordComponent.html":{}}}],["password.component.ts",{"_index":1298,"title":{},"body":{"components/RecoverPasswordComponent.html":{},"coverage.html":{}}}],["password.component.ts:26",{"_index":1315,"title":{},"body":{"components/RecoverPasswordComponent.html":{}}}],["password.component.ts:27",{"_index":1316,"title":{},"body":{"components/RecoverPasswordComponent.html":{}}}],["password.component.ts:28",{"_index":1311,"title":{},"body":{"components/RecoverPasswordComponent.html":{}}}],["password.component.ts:36",{"_index":1313,"title":{},"body":{"components/RecoverPasswordComponent.html":{}}}],["password.component.ts:54",{"_index":1314,"title":{},"body":{"components/RecoverPasswordComponent.html":{}}}],["password.component.ts:72",{"_index":1312,"title":{},"body":{"components/RecoverPasswordComponent.html":{}}}],["password/recover",{"_index":392,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/RecoverPasswordComponent.html":{},"coverage.html":{}}}],["passwordcontrolname",{"_index":1505,"title":{},"body":{"miscellaneous/functions.html":{}}}],["passwordsmatchvalidator",{"_index":1319,"title":{},"body":{"components/RecoverPasswordComponent.html":{},"components/RegisterComponent.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["passwordsmatchvalidator('newpassword",{"_index":1322,"title":{},"body":{"components/RecoverPasswordComponent.html":{}}}],["passwordsmatchvalidator('password",{"_index":1375,"title":{},"body":{"components/RegisterComponent.html":{}}}],["passwordsmatchvalidator(passwordcontrolname",{"_index":1503,"title":{},"body":{"miscellaneous/functions.html":{}}}],["passwordstrengthvalidator",{"_index":1318,"title":{},"body":{"components/RecoverPasswordComponent.html":{},"components/RegisterComponent.html":{},"components/UserProfileComponent.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["path",{"_index":406,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["pathmatch",{"_index":409,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["pend",{"_index":969,"title":{},"body":{"components/GameCardComponent.html":{}}}],["pendiente",{"_index":965,"title":{},"body":{"components/GameCardComponent.html":{},"components/MyLibraryComponent.html":{}}}],["percent",{"_index":172,"title":{},"body":{"injectables/ApiService.html":{},"interfaces/Game.html":{},"interfaces/GameAchievement.html":{},"injectables/GameService.html":{},"interfaces/RawgAchievementApi.html":{},"interfaces/RawgAchievementsApiResponse.html":{},"interfaces/RawgApiResponse.html":{},"interfaces/RawgGame.html":{}}}],["perfil",{"_index":529,"title":{},"body":{"injectables/AuthService.html":{},"components/HeaderComponent.html":{},"interfaces/User.html":{},"components/UserProfileComponent.html":{}}}],["permite",{"_index":545,"title":{},"body":{"components/CategoryComponent.html":{},"components/ConfirmationModalComponent.html":{},"components/GameDetailModalComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/MyLibraryComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/RegisterComponent.html":{},"components/UserProfileComponent.html":{}}}],["permitir",{"_index":1392,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["persistiendo",{"_index":855,"title":{},"body":{"interfaces/Game.html":{},"interfaces/GameAchievement.html":{},"injectables/GameService.html":{}}}],["personal",{"_index":931,"title":{},"body":{"components/GameCardComponent.html":{},"components/MyLibraryComponent.html":{}}}],["personales",{"_index":1348,"title":{},"body":{"components/RegisterComponent.html":{}}}],["personalizadas",{"_index":1372,"title":{},"body":{"components/RegisterComponent.html":{}}}],["personalizados",{"_index":1126,"title":{},"body":{"components/LoginComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/RegisterComponent.html":{}}}],["pertenece",{"_index":847,"title":{},"body":{"interfaces/Game.html":{},"interfaces/GameAchievement.html":{},"components/GameDetailModalComponent.html":{},"injectables/GameService.html":{}}}],["petición",{"_index":188,"title":{},"body":{"injectables/ApiService.html":{},"interfaces/RawgAchievementApi.html":{},"interfaces/RawgAchievementsApiResponse.html":{},"interfaces/RawgApiResponse.html":{},"interfaces/RawgGame.html":{}}}],["pie",{"_index":282,"title":{},"body":{"components/AppComponent.html":{},"components/FooterComponent.html":{}}}],["piece",{"_index":1108,"title":{},"body":{"components/HomeComponent.html":{}}}],["pipe",{"_index":194,"title":{},"body":{"injectables/ApiService.html":{},"interfaces/RawgAchievementApi.html":{},"interfaces/RawgAchievementsApiResponse.html":{},"interfaces/RawgApiResponse.html":{},"interfaces/RawgGame.html":{}}}],["plataforma",{"_index":663,"title":{},"body":{"components/CategoryComponent.html":{},"interfaces/Game.html":{},"interfaces/GameAchievement.html":{},"components/GameCardComponent.html":{},"components/GameDetailModalComponent.html":{},"injectables/GameService.html":{}}}],["plataformas",{"_index":91,"title":{},"body":{"injectables/ApiService.html":{},"components/CategoryComponent.html":{},"interfaces/Game.html":{},"interfaces/GameAchievement.html":{},"injectables/GameService.html":{},"interfaces/RawgAchievementApi.html":{},"interfaces/RawgAchievementsApiResponse.html":{},"interfaces/RawgApiResponse.html":{},"interfaces/RawgGame.html":{}}}],["platform",{"_index":166,"title":{},"body":{"injectables/ApiService.html":{},"components/CategoryComponent.html":{},"interfaces/Game.html":{},"interfaces/GameAchievement.html":{},"injectables/GameService.html":{},"interfaces/RawgAchievementApi.html":{},"interfaces/RawgAchievementsApiResponse.html":{},"interfaces/RawgApiResponse.html":{},"interfaces/RawgGame.html":{},"index.html":{}}}],["platform.name",{"_index":258,"title":{},"body":{"injectables/ApiService.html":{},"interfaces/RawgAchievementApi.html":{},"interfaces/RawgAchievementsApiResponse.html":{},"interfaces/RawgApiResponse.html":{},"interfaces/RawgGame.html":{}}}],["platforms",{"_index":74,"title":{},"body":{"injectables/ApiService.html":{},"components/CategoryComponent.html":{},"interfaces/RawgAchievementApi.html":{},"interfaces/RawgAchievementsApiResponse.html":{},"interfaces/RawgApiResponse.html":{},"interfaces/RawgGame.html":{}}}],["platforms.add(p",{"_index":670,"title":{},"body":{"components/CategoryComponent.html":{}}}],["played",{"_index":246,"title":{},"body":{"injectables/ApiService.html":{},"interfaces/Game.html":{},"interfaces/GameAchievement.html":{},"injectables/GameService.html":{},"interfaces/RawgAchievementApi.html":{},"interfaces/RawgAchievementsApiResponse.html":{},"interfaces/RawgApiResponse.html":{},"interfaces/RawgGame.html":{}}}],["por",{"_index":44,"title":{},"body":{"injectables/ApiService.html":{},"components/CategoryComponent.html":{},"interfaces/Game.html":{},"interfaces/GameAchievement.html":{},"injectables/GameService.html":{},"components/LoginComponent.html":{},"components/MyLibraryComponent.html":{},"interfaces/RawgAchievementApi.html":{},"interfaces/RawgAchievementsApiResponse.html":{},"interfaces/RawgApiResponse.html":{},"interfaces/RawgGame.html":{},"components/RecoverPasswordComponent.html":{},"components/RegisterComponent.html":{},"components/UserProfileComponent.html":{}}}],["portada",{"_index":845,"title":{},"body":{"interfaces/Game.html":{},"interfaces/GameAchievement.html":{},"injectables/GameService.html":{}}}],["positivo",{"_index":1260,"title":{},"body":{"components/MyLibraryComponent.html":{}}}],["predeterminadas",{"_index":1097,"title":{},"body":{"components/HomeComponent.html":{}}}],["predeterminados",{"_index":1065,"title":{},"body":{"components/HomeComponent.html":{}}}],["prepara",{"_index":1261,"title":{},"body":{"components/MyLibraryComponent.html":{}}}],["previous",{"_index":156,"title":{},"body":{"injectables/ApiService.html":{},"interfaces/RawgAchievementApi.html":{},"interfaces/RawgAchievementsApiResponse.html":{},"interfaces/RawgApiResponse.html":{},"interfaces/RawgGame.html":{}}}],["primer",{"_index":903,"title":{},"body":{"interfaces/Game.html":{},"interfaces/GameAchievement.html":{},"injectables/GameService.html":{}}}],["principal",{"_index":275,"title":{},"body":{"components/AppComponent.html":{},"miscellaneous/functions.html":{}}}],["private",{"_index":9,"title":{},"body":{"injectables/ApiService.html":{},"injectables/AuthService.html":{},"components/CategoryComponent.html":{},"components/ConfirmationModalComponent.html":{},"interfaces/Game.html":{},"interfaces/GameAchievement.html":{},"components/GameDetailModalComponent.html":{},"injectables/GameService.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/MyLibraryComponent.html":{},"interfaces/RawgAchievementApi.html":{},"interfaces/RawgAchievementsApiResponse.html":{},"interfaces/RawgApiResponse.html":{},"interfaces/RawgGame.html":{},"components/RecoverPasswordComponent.html":{},"components/RegisterComponent.html":{},"interfaces/User.html":{},"components/UserProfileComponent.html":{}}}],["procentaje",{"_index":838,"title":{},"body":{"interfaces/Game.html":{},"interfaces/GameAchievement.html":{},"injectables/GameService.html":{}}}],["profile",{"_index":345,"title":{},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/CategoryComponent.html":{},"components/ConfirmationModalComponent.html":{},"components/FooterComponent.html":{},"components/GameCardComponent.html":{},"components/GameDetailModalComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/MyLibraryComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/RegisterComponent.html":{},"components/UserProfileComponent.html":{}}}],["profile.component",{"_index":390,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["profile.component.css",{"_index":1395,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["profile.component.html",{"_index":1396,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["profile.component.ts",{"_index":1391,"title":{},"body":{"components/UserProfileComponent.html":{},"coverage.html":{}}}],["profile.component.ts:26",{"_index":1407,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["profile.component.ts:27",{"_index":1408,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["profile.component.ts:28",{"_index":1409,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["profile.component.ts:29",{"_index":1401,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["profile.component.ts:37",{"_index":1406,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["profile.component.ts:48",{"_index":1404,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["profile.component.ts:59",{"_index":1402,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["profile.component.ts:91",{"_index":1405,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["profile/user",{"_index":389,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/UserProfileComponent.html":{},"coverage.html":{}}}],["profileform",{"_index":1397,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["profilemessage",{"_index":1398,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["progreso",{"_index":1010,"title":{},"body":{"components/GameDetailModalComponent.html":{}}}],["project",{"_index":1511,"title":{},"body":{"index.html":{}}}],["prompt(`introduce",{"_index":1251,"title":{},"body":{"components/MyLibraryComponent.html":{}}}],["propaga",{"_index":218,"title":{},"body":{"injectables/ApiService.html":{},"interfaces/RawgAchievementApi.html":{},"interfaces/RawgAchievementsApiResponse.html":{},"interfaces/RawgApiResponse.html":{},"interfaces/RawgGame.html":{}}}],["properties",{"_index":8,"title":{"properties.html":{}},"body":{"injectables/ApiService.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/CategoryComponent.html":{},"components/ConfirmationModalComponent.html":{},"interfaces/Game.html":{},"interfaces/GameAchievement.html":{},"components/GameDetailModalComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/MyLibraryComponent.html":{},"interfaces/RawgAchievementApi.html":{},"interfaces/RawgAchievementsApiResponse.html":{},"interfaces/RawgApiResponse.html":{},"interfaces/RawgGame.html":{},"components/RecoverPasswordComponent.html":{},"components/RegisterComponent.html":{},"interfaces/User.html":{},"components/UserProfileComponent.html":{},"properties.html":{}}}],["property",{"_index":836,"title":{},"body":{"interfaces/Game.html":{},"interfaces/GameAchievement.html":{},"injectables/GameService.html":{}}}],["propia",{"_index":1294,"title":{},"body":{"components/MyLibraryComponent.html":{}}}],["propiedades",{"_index":1228,"title":{},"body":{"components/MyLibraryComponent.html":{}}}],["proporciona",{"_index":829,"title":{},"body":{"interfaces/Game.html":{},"interfaces/GameAchievement.html":{},"components/GameCardComponent.html":{},"injectables/GameService.html":{}}}],["proporcionando",{"_index":1300,"title":{},"body":{"components/RecoverPasswordComponent.html":{},"components/RegisterComponent.html":{}}}],["providedin",{"_index":173,"title":{},"body":{"injectables/ApiService.html":{},"injectables/AuthService.html":{},"interfaces/Game.html":{},"interfaces/GameAchievement.html":{},"injectables/GameService.html":{},"interfaces/RawgAchievementApi.html":{},"interfaces/RawgAchievementsApiResponse.html":{},"interfaces/RawgApiResponse.html":{},"interfaces/RawgGame.html":{},"interfaces/User.html":{}}}],["providers",{"_index":354,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["prueba",{"_index":476,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/User.html":{}}}],["public",{"_index":423,"title":{},"body":{"injectables/AuthService.html":{},"components/GameDetailModalComponent.html":{},"components/HeaderComponent.html":{},"interfaces/User.html":{}}}],["pudieron",{"_index":716,"title":{},"body":{"components/CategoryComponent.html":{}}}],["puede",{"_index":936,"title":{},"body":{"components/GameCardComponent.html":{},"components/MyLibraryComponent.html":{}}}],["pueden",{"_index":1588,"title":{},"body":{"miscellaneous/variables.html":{}}}],["puedes",{"_index":514,"title":{},"body":{"injectables/AuthService.html":{},"components/MyLibraryComponent.html":{},"interfaces/User.html":{}}}],["punto",{"_index":273,"title":{},"body":{"components/AppComponent.html":{}}}],["puzzle",{"_index":1107,"title":{},"body":{"components/HomeComponent.html":{}}}],["página",{"_index":95,"title":{},"body":{"injectables/ApiService.html":{},"components/AppComponent.html":{},"components/FooterComponent.html":{},"components/HomeComponent.html":{},"interfaces/RawgAchievementApi.html":{},"interfaces/RawgAchievementsApiResponse.html":{},"interfaces/RawgApiResponse.html":{},"interfaces/RawgGame.html":{},"miscellaneous/variables.html":{}}}],["páginas",{"_index":929,"title":{},"body":{"components/GameCardComponent.html":{}}}],["que",{"_index":127,"title":{},"body":{"injectables/ApiService.html":{},"components/ConfirmationModalComponent.html":{},"interfaces/Game.html":{},"interfaces/GameAchievement.html":{},"components/GameCardComponent.html":{},"components/GameDetailModalComponent.html":{},"injectables/GameService.html":{},"components/MyLibraryComponent.html":{},"interfaces/RawgAchievementApi.html":{},"interfaces/RawgAchievementsApiResponse.html":{},"interfaces/RawgApiResponse.html":{},"interfaces/RawgGame.html":{},"components/RecoverPasswordComponent.html":{},"components/RegisterComponent.html":{},"miscellaneous/functions.html":{}}}],["quieres",{"_index":1267,"title":{},"body":{"components/MyLibraryComponent.html":{}}}],["racing",{"_index":1109,"title":{},"body":{"components/HomeComponent.html":{}}}],["raised",{"_index":1088,"title":{},"body":{"components/HomeComponent.html":{}}}],["rawg",{"_index":52,"title":{},"body":{"injectables/ApiService.html":{},"components/CategoryComponent.html":{},"interfaces/Game.html":{},"interfaces/GameAchievement.html":{},"injectables/GameService.html":{},"components/HomeComponent.html":{},"components/MyLibraryComponent.html":{},"interfaces/RawgAchievementApi.html":{},"interfaces/RawgAchievementsApiResponse.html":{},"interfaces/RawgApiResponse.html":{},"interfaces/RawgGame.html":{}}}],["rawgachievement",{"_index":113,"title":{},"body":{"injectables/ApiService.html":{},"interfaces/RawgAchievementApi.html":{},"interfaces/RawgAchievementsApiResponse.html":{},"interfaces/RawgApiResponse.html":{},"interfaces/RawgGame.html":{}}}],["rawgachievement.description",{"_index":249,"title":{},"body":{"injectables/ApiService.html":{},"interfaces/RawgAchievementApi.html":{},"interfaces/RawgAchievementsApiResponse.html":{},"interfaces/RawgApiResponse.html":{},"interfaces/RawgGame.html":{}}}],["rawgachievement.id",{"_index":247,"title":{},"body":{"injectables/ApiService.html":{},"interfaces/RawgAchievementApi.html":{},"interfaces/RawgAchievementsApiResponse.html":{},"interfaces/RawgApiResponse.html":{},"interfaces/RawgGame.html":{}}}],["rawgachievement.image",{"_index":250,"title":{},"body":{"injectables/ApiService.html":{},"interfaces/RawgAchievementApi.html":{},"interfaces/RawgAchievementsApiResponse.html":{},"interfaces/RawgApiResponse.html":{},"interfaces/RawgGame.html":{}}}],["rawgachievement.name",{"_index":248,"title":{},"body":{"injectables/ApiService.html":{},"interfaces/RawgAchievementApi.html":{},"interfaces/RawgAchievementsApiResponse.html":{},"interfaces/RawgApiResponse.html":{},"interfaces/RawgGame.html":{}}}],["rawgachievement.percent",{"_index":252,"title":{},"body":{"injectables/ApiService.html":{},"interfaces/RawgAchievementApi.html":{},"interfaces/RawgAchievementsApiResponse.html":{},"interfaces/RawgApiResponse.html":{},"interfaces/RawgGame.html":{}}}],["rawgachievementapi",{"_index":107,"title":{"interfaces/RawgAchievementApi.html":{}},"body":{"injectables/ApiService.html":{},"interfaces/RawgAchievementApi.html":{},"interfaces/RawgAchievementsApiResponse.html":{},"interfaces/RawgApiResponse.html":{},"interfaces/RawgGame.html":{},"coverage.html":{}}}],["rawgachievementsapiresponse",{"_index":169,"title":{"interfaces/RawgAchievementsApiResponse.html":{}},"body":{"injectables/ApiService.html":{},"interfaces/RawgAchievementApi.html":{},"interfaces/RawgAchievementsApiResponse.html":{},"interfaces/RawgApiResponse.html":{},"interfaces/RawgGame.html":{},"coverage.html":{}}}],["rawgapiresponse",{"_index":152,"title":{"interfaces/RawgApiResponse.html":{}},"body":{"injectables/ApiService.html":{},"interfaces/RawgAchievementApi.html":{},"interfaces/RawgAchievementsApiResponse.html":{},"interfaces/RawgApiResponse.html":{},"interfaces/RawgGame.html":{},"coverage.html":{}}}],["rawgapiservice",{"_index":581,"title":{},"body":{"components/CategoryComponent.html":{},"components/HomeComponent.html":{},"components/MyLibraryComponent.html":{}}}],["rawggame",{"_index":98,"title":{"interfaces/RawgGame.html":{}},"body":{"injectables/ApiService.html":{},"interfaces/RawgAchievementApi.html":{},"interfaces/RawgAchievementsApiResponse.html":{},"interfaces/RawgApiResponse.html":{},"interfaces/RawgGame.html":{},"coverage.html":{}}}],["rawggame.background_image",{"_index":243,"title":{},"body":{"injectables/ApiService.html":{},"interfaces/RawgAchievementApi.html":{},"interfaces/RawgAchievementsApiResponse.html":{},"interfaces/RawgApiResponse.html":{},"interfaces/RawgGame.html":{}}}],["rawggame.description_raw",{"_index":229,"title":{},"body":{"injectables/ApiService.html":{},"interfaces/RawgAchievementApi.html":{},"interfaces/RawgAchievementsApiResponse.html":{},"interfaces/RawgApiResponse.html":{},"interfaces/RawgGame.html":{}}}],["rawggame.genres.map(g",{"_index":239,"title":{},"body":{"injectables/ApiService.html":{},"interfaces/RawgAchievementApi.html":{},"interfaces/RawgAchievementsApiResponse.html":{},"interfaces/RawgApiResponse.html":{},"interfaces/RawgGame.html":{}}}],["rawggame.id",{"_index":231,"title":{},"body":{"injectables/ApiService.html":{},"interfaces/RawgAchievementApi.html":{},"interfaces/RawgAchievementsApiResponse.html":{},"interfaces/RawgApiResponse.html":{},"interfaces/RawgGame.html":{}}}],["rawggame.name",{"_index":230,"title":{},"body":{"injectables/ApiService.html":{},"interfaces/RawgAchievementApi.html":{},"interfaces/RawgAchievementsApiResponse.html":{},"interfaces/RawgApiResponse.html":{},"interfaces/RawgGame.html":{}}}],["rawggame.platforms.map(p",{"_index":236,"title":{},"body":{"injectables/ApiService.html":{},"interfaces/RawgAchievementApi.html":{},"interfaces/RawgAchievementsApiResponse.html":{},"interfaces/RawgApiResponse.html":{},"interfaces/RawgGame.html":{}}}],["raíz",{"_index":268,"title":{},"body":{"components/AppComponent.html":{}}}],["reactiveformsmodule",{"_index":395,"title":{},"body":{"modules/AppModule.html":{}}}],["reactivo",{"_index":1147,"title":{},"body":{"components/LoginComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/RegisterComponent.html":{},"components/UserProfileComponent.html":{}}}],["reactivos",{"_index":1124,"title":{},"body":{"components/LoginComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/RegisterComponent.html":{}}}],["readonly",{"_index":10,"title":{},"body":{"injectables/ApiService.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/CategoryComponent.html":{},"components/GameDetailModalComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/MyLibraryComponent.html":{},"interfaces/RawgAchievementApi.html":{},"interfaces/RawgAchievementsApiResponse.html":{},"interfaces/RawgApiResponse.html":{},"interfaces/RawgGame.html":{},"components/RecoverPasswordComponent.html":{},"components/RegisterComponent.html":{},"interfaces/User.html":{},"components/UserProfileComponent.html":{}}}],["realiza",{"_index":187,"title":{},"body":{"injectables/ApiService.html":{},"interfaces/RawgAchievementApi.html":{},"interfaces/RawgAchievementsApiResponse.html":{},"interfaces/RawgApiResponse.html":{},"interfaces/RawgGame.html":{}}}],["recover",{"_index":340,"title":{},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/CategoryComponent.html":{},"components/ConfirmationModalComponent.html":{},"components/FooterComponent.html":{},"components/GameCardComponent.html":{},"components/GameDetailModalComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/MyLibraryComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/RegisterComponent.html":{},"components/UserProfileComponent.html":{}}}],["recoverpasswordcomponent",{"_index":339,"title":{"components/RecoverPasswordComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/CategoryComponent.html":{},"components/ConfirmationModalComponent.html":{},"components/FooterComponent.html":{},"components/GameCardComponent.html":{},"components/GameDetailModalComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/MyLibraryComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/RegisterComponent.html":{},"components/UserProfileComponent.html":{},"coverage.html":{},"overview.html":{}}}],["recoveryform",{"_index":1309,"title":{},"body":{"components/RecoverPasswordComponent.html":{}}}],["recoverymessage",{"_index":1310,"title":{},"body":{"components/RecoverPasswordComponent.html":{}}}],["recupera",{"_index":544,"title":{},"body":{"components/CategoryComponent.html":{}}}],["recuperación",{"_index":1299,"title":{},"body":{"components/RecoverPasswordComponent.html":{}}}],["recuperar",{"_index":1332,"title":{},"body":{"components/RecoverPasswordComponent.html":{}}}],["redirecciona",{"_index":420,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["redirectto",{"_index":407,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["redirige",{"_index":1324,"title":{},"body":{"components/RecoverPasswordComponent.html":{},"components/RegisterComponent.html":{},"components/UserProfileComponent.html":{}}}],["redirigiendo",{"_index":528,"title":{},"body":{"injectables/AuthService.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"interfaces/User.html":{}}}],["reference",{"_index":1561,"title":{},"body":{"index.html":{}}}],["referencia",{"_index":1000,"title":{},"body":{"components/GameDetailModalComponent.html":{}}}],["regames",{"_index":820,"title":{},"body":{"components/FooterComponent.html":{}}}],["regamescreative",{"_index":269,"title":{},"body":{"components/AppComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{}}}],["regamescreativeangular",{"_index":1510,"title":{},"body":{"index.html":{}}}],["register",{"_index":414,"title":{},"body":{"modules/AppRoutingModule.html":{},"injectables/AuthService.html":{},"components/RegisterComponent.html":{}}}],["register'},{'name",{"_index":343,"title":{},"body":{"components/AppComponent.html":{},"components/CategoryComponent.html":{},"components/ConfirmationModalComponent.html":{},"components/FooterComponent.html":{},"components/GameCardComponent.html":{},"components/GameDetailModalComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/MyLibraryComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/RegisterComponent.html":{},"components/UserProfileComponent.html":{}}}],["register(newuser",{"_index":438,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/User.html":{}}}],["register.component.css",{"_index":1351,"title":{},"body":{"components/RegisterComponent.html":{}}}],["register.component.html",{"_index":1352,"title":{},"body":{"components/RegisterComponent.html":{}}}],["registercomponent",{"_index":342,"title":{"components/RegisterComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/CategoryComponent.html":{},"components/ConfirmationModalComponent.html":{},"components/FooterComponent.html":{},"components/GameCardComponent.html":{},"components/GameDetailModalComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/MyLibraryComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/RegisterComponent.html":{},"components/UserProfileComponent.html":{},"coverage.html":{},"overview.html":{}}}],["registerform",{"_index":1353,"title":{},"body":{"components/RegisterComponent.html":{}}}],["registermessage",{"_index":1354,"title":{},"body":{"components/RegisterComponent.html":{}}}],["registrar",{"_index":505,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/User.html":{}}}],["registre",{"_index":1377,"title":{},"body":{"components/RegisterComponent.html":{}}}],["registro",{"_index":511,"title":{},"body":{"injectables/AuthService.html":{},"components/HeaderComponent.html":{},"components/RegisterComponent.html":{},"interfaces/User.html":{}}}],["regístrate",{"_index":1167,"title":{},"body":{"components/LoginComponent.html":{},"components/MyLibraryComponent.html":{}}}],["released",{"_index":167,"title":{},"body":{"injectables/ApiService.html":{},"interfaces/RawgAchievementApi.html":{},"interfaces/RawgAchievementsApiResponse.html":{},"interfaces/RawgApiResponse.html":{},"interfaces/RawgGame.html":{}}}],["reload",{"_index":1526,"title":{},"body":{"index.html":{}}}],["renderiza",{"_index":1234,"title":{},"body":{"components/MyLibraryComponent.html":{}}}],["renderizar",{"_index":1279,"title":{},"body":{"components/MyLibraryComponent.html":{}}}],["representa",{"_index":825,"title":{},"body":{"interfaces/Game.html":{},"interfaces/GameAchievement.html":{},"injectables/GameService.html":{}}}],["requerida",{"_index":1502,"title":{},"body":{"miscellaneous/functions.html":{}}}],["requerido",{"_index":1433,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["requisitos",{"_index":1305,"title":{},"body":{"components/RecoverPasswordComponent.html":{}}}],["reservados",{"_index":822,"title":{},"body":{"components/FooterComponent.html":{}}}],["reset",{"_index":363,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["resetfilters",{"_index":577,"title":{},"body":{"components/CategoryComponent.html":{}}}],["response.results.map((genre",{"_index":254,"title":{},"body":{"injectables/ApiService.html":{},"interfaces/RawgAchievementApi.html":{},"interfaces/RawgAchievementsApiResponse.html":{},"interfaces/RawgApiResponse.html":{},"interfaces/RawgGame.html":{}}}],["response.results.map((platform",{"_index":257,"title":{},"body":{"injectables/ApiService.html":{},"interfaces/RawgAchievementApi.html":{},"interfaces/RawgAchievementsApiResponse.html":{},"interfaces/RawgApiResponse.html":{},"interfaces/RawgGame.html":{}}}],["response.results.map(rawgachievement",{"_index":223,"title":{},"body":{"injectables/ApiService.html":{},"interfaces/RawgAchievementApi.html":{},"interfaces/RawgAchievementsApiResponse.html":{},"interfaces/RawgApiResponse.html":{},"interfaces/RawgGame.html":{}}}],["response.results.map(rawggame",{"_index":196,"title":{},"body":{"injectables/ApiService.html":{},"interfaces/RawgAchievementApi.html":{},"interfaces/RawgAchievementsApiResponse.html":{},"interfaces/RawgApiResponse.html":{},"interfaces/RawgGame.html":{}}}],["respuesta",{"_index":150,"title":{},"body":{"injectables/ApiService.html":{},"components/MyLibraryComponent.html":{},"interfaces/RawgAchievementApi.html":{},"interfaces/RawgAchievementsApiResponse.html":{},"interfaces/RawgApiResponse.html":{},"interfaces/RawgGame.html":{}}}],["restablece",{"_index":678,"title":{},"body":{"components/CategoryComponent.html":{}}}],["result",{"_index":712,"title":{},"body":{"components/CategoryComponent.html":{},"components/LoginComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/RegisterComponent.html":{},"components/UserProfileComponent.html":{}}}],["result.message",{"_index":1160,"title":{},"body":{"components/LoginComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/RegisterComponent.html":{},"components/UserProfileComponent.html":{}}}],["result.success",{"_index":1156,"title":{},"body":{"components/LoginComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/RegisterComponent.html":{},"components/UserProfileComponent.html":{}}}],["resultados",{"_index":94,"title":{},"body":{"injectables/ApiService.html":{},"interfaces/RawgAchievementApi.html":{},"interfaces/RawgAchievementsApiResponse.html":{},"interfaces/RawgApiResponse.html":{},"interfaces/RawgGame.html":{}}}],["results",{"_index":157,"title":{},"body":{"injectables/ApiService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthService.html":{},"components/CategoryComponent.html":{},"components/ConfirmationModalComponent.html":{},"components/FooterComponent.html":{},"interfaces/Game.html":{},"interfaces/GameAchievement.html":{},"components/GameCardComponent.html":{},"components/GameDetailModalComponent.html":{},"injectables/GameService.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/MyLibraryComponent.html":{},"interfaces/RawgAchievementApi.html":{},"interfaces/RawgAchievementsApiResponse.html":{},"interfaces/RawgApiResponse.html":{},"interfaces/RawgGame.html":{},"components/RecoverPasswordComponent.html":{},"components/RegisterComponent.html":{},"interfaces/User.html":{},"components/UserProfileComponent.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["retorna",{"_index":203,"title":{},"body":{"injectables/ApiService.html":{},"interfaces/RawgAchievementApi.html":{},"interfaces/RawgAchievementsApiResponse.html":{},"interfaces/RawgApiResponse.html":{},"interfaces/RawgGame.html":{}}}],["return",{"_index":192,"title":{},"body":{"injectables/ApiService.html":{},"injectables/AuthService.html":{},"components/CategoryComponent.html":{},"interfaces/Game.html":{},"interfaces/GameAchievement.html":{},"components/GameDetailModalComponent.html":{},"injectables/GameService.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/MyLibraryComponent.html":{},"interfaces/RawgAchievementApi.html":{},"interfaces/RawgAchievementsApiResponse.html":{},"interfaces/RawgApiResponse.html":{},"interfaces/RawgGame.html":{},"components/RecoverPasswordComponent.html":{},"components/RegisterComponent.html":{},"interfaces/User.html":{},"components/UserProfileComponent.html":{},"miscellaneous/variables.html":{}}}],["returns",{"_index":53,"title":{},"body":{"injectables/ApiService.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/CategoryComponent.html":{},"components/ConfirmationModalComponent.html":{},"components/GameDetailModalComponent.html":{},"injectables/GameService.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/MyLibraryComponent.html":{},"interfaces/RawgAchievementApi.html":{},"interfaces/RawgAchievementsApiResponse.html":{},"interfaces/RawgApiResponse.html":{},"interfaces/RawgGame.html":{},"components/RecoverPasswordComponent.html":{},"components/RegisterComponent.html":{},"components/UserProfileComponent.html":{},"miscellaneous/functions.html":{}}}],["reutilizable",{"_index":740,"title":{},"body":{"components/ConfirmationModalComponent.html":{}}}],["revisa",{"_index":648,"title":{},"body":{"components/CategoryComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/RegisterComponent.html":{},"components/UserProfileComponent.html":{}}}],["rol",{"_index":1056,"title":{},"body":{"components/HeaderComponent.html":{},"components/UserProfileComponent.html":{}}}],["role",{"_index":464,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/User.html":{},"components/UserProfileComponent.html":{}}}],["root",{"_index":174,"title":{},"body":{"injectables/ApiService.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"interfaces/Game.html":{},"interfaces/GameAchievement.html":{},"injectables/GameService.html":{},"interfaces/RawgAchievementApi.html":{},"interfaces/RawgAchievementsApiResponse.html":{},"interfaces/RawgApiResponse.html":{},"interfaces/RawgGame.html":{},"interfaces/User.html":{}}}],["root'},{'name",{"_index":319,"title":{},"body":{"components/AppComponent.html":{},"components/CategoryComponent.html":{},"components/ConfirmationModalComponent.html":{},"components/FooterComponent.html":{},"components/GameCardComponent.html":{},"components/GameDetailModalComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/MyLibraryComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/RegisterComponent.html":{},"components/UserProfileComponent.html":{}}}],["route",{"_index":583,"title":{},"body":{"components/CategoryComponent.html":{},"miscellaneous/variables.html":{}}}],["route.data",{"_index":1583,"title":{},"body":{"miscellaneous/variables.html":{}}}],["route.data['role",{"_index":1584,"title":{},"body":{"miscellaneous/variables.html":{}}}],["router",{"_index":280,"title":{},"body":{"components/AppComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/RegisterComponent.html":{},"components/UserProfileComponent.html":{},"miscellaneous/variables.html":{}}}],["router.createurltree(['/inicio",{"_index":1590,"title":{},"body":{"miscellaneous/variables.html":{}}}],["router.createurltree(['/login",{"_index":1591,"title":{},"body":{"miscellaneous/variables.html":{}}}],["routermodule",{"_index":401,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routermodule.forroot(routes",{"_index":421,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routes",{"_index":402,"title":{"routes.html":{}},"body":{"modules/AppRoutingModule.html":{},"overview.html":{},"routes.html":{}}}],["routesubscription",{"_index":565,"title":{},"body":{"components/CategoryComponent.html":{}}}],["routing.module",{"_index":372,"title":{},"body":{"modules/AppModule.html":{}}}],["routing.module.ts",{"_index":400,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["rpg",{"_index":1052,"title":{},"body":{"components/HeaderComponent.html":{},"components/HomeComponent.html":{}}}],["run",{"_index":1518,"title":{},"body":{"index.html":{}}}],["running",{"_index":1539,"title":{},"body":{"index.html":{}}}],["ruta",{"_index":417,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["rxjs",{"_index":143,"title":{},"body":{"injectables/ApiService.html":{},"injectables/AuthService.html":{},"components/CategoryComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/MyLibraryComponent.html":{},"interfaces/RawgAchievementApi.html":{},"interfaces/RawgAchievementsApiResponse.html":{},"interfaces/RawgApiResponse.html":{},"interfaces/RawgGame.html":{},"components/RecoverPasswordComponent.html":{},"components/RegisterComponent.html":{},"interfaces/User.html":{},"components/UserProfileComponent.html":{},"dependencies.html":{}}}],["rxjs/operators",{"_index":146,"title":{},"body":{"injectables/ApiService.html":{},"interfaces/RawgAchievementApi.html":{},"interfaces/RawgAchievementsApiResponse.html":{},"interfaces/RawgApiResponse.html":{},"interfaces/RawgGame.html":{}}}],["sanzana",{"_index":481,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/User.html":{}}}],["scaffolding",{"_index":1530,"title":{},"body":{"index.html":{}}}],["se",{"_index":128,"title":{},"body":{"injectables/ApiService.html":{},"components/CategoryComponent.html":{},"components/ConfirmationModalComponent.html":{},"components/GameCardComponent.html":{},"components/GameDetailModalComponent.html":{},"components/HomeComponent.html":{},"components/MyLibraryComponent.html":{},"interfaces/RawgAchievementApi.html":{},"interfaces/RawgAchievementsApiResponse.html":{},"interfaces/RawgApiResponse.html":{},"interfaces/RawgGame.html":{},"components/RegisterComponent.html":{},"miscellaneous/functions.html":{}}}],["searchquery",{"_index":82,"title":{},"body":{"injectables/ApiService.html":{},"interfaces/RawgAchievementApi.html":{},"interfaces/RawgAchievementsApiResponse.html":{},"interfaces/RawgApiResponse.html":{},"interfaces/RawgGame.html":{}}}],["searchterm",{"_index":566,"title":{},"body":{"components/CategoryComponent.html":{},"components/MyLibraryComponent.html":{}}}],["searchtermlower",{"_index":687,"title":{},"body":{"components/CategoryComponent.html":{},"components/MyLibraryComponent.html":{}}}],["segura",{"_index":1349,"title":{},"body":{"components/RegisterComponent.html":{}}}],["seguridad",{"_index":1306,"title":{},"body":{"components/RecoverPasswordComponent.html":{}}}],["seguro",{"_index":770,"title":{},"body":{"components/ConfirmationModalComponent.html":{},"components/MyLibraryComponent.html":{}}}],["según",{"_index":160,"title":{},"body":{"injectables/ApiService.html":{},"interfaces/RawgAchievementApi.html":{},"interfaces/RawgAchievementsApiResponse.html":{},"interfaces/RawgApiResponse.html":{},"interfaces/RawgGame.html":{}}}],["seleccionado",{"_index":721,"title":{},"body":{"components/CategoryComponent.html":{},"components/GameDetailModalComponent.html":{}}}],["selección",{"_index":686,"title":{},"body":{"components/CategoryComponent.html":{}}}],["selectedfavorite",{"_index":1187,"title":{},"body":{"components/MyLibraryComponent.html":{}}}],["selectedfavoritevalue",{"_index":1237,"title":{},"body":{"components/MyLibraryComponent.html":{}}}],["selectedgameformodal",{"_index":567,"title":{},"body":{"components/CategoryComponent.html":{},"components/MyLibraryComponent.html":{}}}],["selectedgenre",{"_index":568,"title":{},"body":{"components/CategoryComponent.html":{}}}],["selectedgenrelower",{"_index":691,"title":{},"body":{"components/CategoryComponent.html":{}}}],["selectedplatform",{"_index":569,"title":{},"body":{"components/CategoryComponent.html":{}}}],["selectedplatformlower",{"_index":689,"title":{},"body":{"components/CategoryComponent.html":{}}}],["selectedstatus",{"_index":1188,"title":{},"body":{"components/MyLibraryComponent.html":{}}}],["selectedstatusvalue",{"_index":1235,"title":{},"body":{"components/MyLibraryComponent.html":{}}}],["selector",{"_index":292,"title":{},"body":{"components/AppComponent.html":{},"components/CategoryComponent.html":{},"components/ConfirmationModalComponent.html":{},"components/FooterComponent.html":{},"components/GameCardComponent.html":{},"components/GameDetailModalComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/MyLibraryComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/RegisterComponent.html":{},"components/UserProfileComponent.html":{}}}],["separado",{"_index":131,"title":{},"body":{"injectables/ApiService.html":{},"interfaces/RawgAchievementApi.html":{},"interfaces/RawgAchievementsApiResponse.html":{},"interfaces/RawgApiResponse.html":{},"interfaces/RawgGame.html":{}}}],["separados",{"_index":89,"title":{},"body":{"injectables/ApiService.html":{},"interfaces/RawgAchievementApi.html":{},"interfaces/RawgAchievementsApiResponse.html":{},"interfaces/RawgApiResponse.html":{},"interfaces/RawgGame.html":{}}}],["serve",{"_index":1520,"title":{},"body":{"index.html":{}}}],["server",{"_index":1517,"title":{},"body":{"index.html":{}}}],["servicio",{"_index":827,"title":{},"body":{"interfaces/Game.html":{},"interfaces/GameAchievement.html":{},"components/GameDetailModalComponent.html":{},"injectables/GameService.html":{},"components/HomeComponent.html":{}}}],["servicios",{"_index":863,"title":{},"body":{"interfaces/Game.html":{},"interfaces/GameAchievement.html":{},"injectables/GameService.html":{}}}],["sesión",{"_index":491,"title":{},"body":{"injectables/AuthService.html":{},"components/CategoryComponent.html":{},"components/GameDetailModalComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/MyLibraryComponent.html":{},"components/RegisterComponent.html":{},"interfaces/User.html":{},"components/UserProfileComponent.html":{},"miscellaneous/variables.html":{}}}],["set",{"_index":666,"title":{},"body":{"components/CategoryComponent.html":{}}}],["settimeout",{"_index":1157,"title":{},"body":{"components/LoginComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/RegisterComponent.html":{},"components/UserProfileComponent.html":{}}}],["shared/confirmation",{"_index":397,"title":{},"body":{"modules/AppModule.html":{}}}],["shared/footer/footer.component",{"_index":375,"title":{},"body":{"modules/AppModule.html":{}}}],["shared/game",{"_index":376,"title":{},"body":{"modules/AppModule.html":{}}}],["shared/header/header.component",{"_index":374,"title":{},"body":{"modules/AppModule.html":{}}}],["shooter",{"_index":1105,"title":{},"body":{"components/HomeComponent.html":{}}}],["show",{"_index":761,"title":{},"body":{"components/ConfirmationModalComponent.html":{},"components/GameDetailModalComponent.html":{}}}],["showlibrarycontrols",{"_index":943,"title":{},"body":{"components/GameCardComponent.html":{}}}],["si",{"_index":68,"title":{},"body":{"injectables/ApiService.html":{},"injectables/AuthService.html":{},"interfaces/Game.html":{},"interfaces/GameAchievement.html":{},"components/GameCardComponent.html":{},"components/GameDetailModalComponent.html":{},"injectables/GameService.html":{},"components/MyLibraryComponent.html":{},"interfaces/RawgAchievementApi.html":{},"interfaces/RawgAchievementsApiResponse.html":{},"interfaces/RawgApiResponse.html":{},"interfaces/RawgGame.html":{},"components/RecoverPasswordComponent.html":{},"components/RegisterComponent.html":{},"interfaces/User.html":{}}}],["sido",{"_index":840,"title":{},"body":{"interfaces/Game.html":{},"interfaces/GameAchievement.html":{},"components/GameDetailModalComponent.html":{},"injectables/GameService.html":{}}}],["simplificada",{"_index":158,"title":{},"body":{"injectables/ApiService.html":{},"interfaces/RawgAchievementApi.html":{},"interfaces/RawgAchievementsApiResponse.html":{},"interfaces/RawgApiResponse.html":{},"interfaces/RawgGame.html":{}}}],["sin",{"_index":906,"title":{},"body":{"interfaces/Game.html":{},"interfaces/GameAchievement.html":{},"injectables/GameService.html":{}}}],["slug",{"_index":165,"title":{},"body":{"injectables/ApiService.html":{},"interfaces/RawgAchievementApi.html":{},"interfaces/RawgAchievementsApiResponse.html":{},"interfaces/RawgApiResponse.html":{},"interfaces/RawgGame.html":{}}}],["slugs",{"_index":87,"title":{},"body":{"injectables/ApiService.html":{},"interfaces/RawgAchievementApi.html":{},"interfaces/RawgAchievementsApiResponse.html":{},"interfaces/RawgApiResponse.html":{},"interfaces/RawgGame.html":{}}}],["sobre",{"_index":834,"title":{},"body":{"interfaces/Game.html":{},"interfaces/GameAchievement.html":{},"injectables/GameService.html":{}}}],["solo",{"_index":226,"title":{},"body":{"injectables/ApiService.html":{},"interfaces/RawgAchievementApi.html":{},"interfaces/RawgAchievementsApiResponse.html":{},"interfaces/RawgApiResponse.html":{},"interfaces/RawgGame.html":{},"miscellaneous/variables.html":{}}}],["source",{"_index":4,"title":{},"body":{"injectables/ApiService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthService.html":{},"components/CategoryComponent.html":{},"components/ConfirmationModalComponent.html":{},"components/FooterComponent.html":{},"interfaces/Game.html":{},"interfaces/GameAchievement.html":{},"components/GameCardComponent.html":{},"components/GameDetailModalComponent.html":{},"injectables/GameService.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/MyLibraryComponent.html":{},"interfaces/RawgAchievementApi.html":{},"interfaces/RawgAchievementsApiResponse.html":{},"interfaces/RawgApiResponse.html":{},"interfaces/RawgGame.html":{},"components/RecoverPasswordComponent.html":{},"components/RegisterComponent.html":{},"interfaces/User.html":{},"components/UserProfileComponent.html":{},"index.html":{}}}],["sports",{"_index":1111,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/.../auth.guard.ts",{"_index":1572,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../auth.service.ts",{"_index":1571,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../category.component.ts",{"_index":1573,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../confirmation",{"_index":1574,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../game",{"_index":1575,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../game.service.ts",{"_index":1576,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../validator.ts",{"_index":1495,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/app/app",{"_index":399,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["src/app/app.component.ts",{"_index":267,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.component.ts:21",{"_index":307,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:22",{"_index":302,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:26",{"_index":303,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.module.ts",{"_index":365,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app/core/api/api.service",{"_index":619,"title":{},"body":{"components/CategoryComponent.html":{},"components/HomeComponent.html":{},"components/MyLibraryComponent.html":{}}}],["src/app/core/api/api.service.ts",{"_index":6,"title":{},"body":{"injectables/ApiService.html":{},"interfaces/RawgAchievementApi.html":{},"interfaces/RawgAchievementsApiResponse.html":{},"interfaces/RawgApiResponse.html":{},"interfaces/RawgGame.html":{},"coverage.html":{}}}],["src/app/core/api/api.service.ts:103",{"_index":34,"title":{},"body":{"injectables/ApiService.html":{}}}],["src/app/core/api/api.service.ts:121",{"_index":123,"title":{},"body":{"injectables/ApiService.html":{}}}],["src/app/core/api/api.service.ts:143",{"_index":108,"title":{},"body":{"injectables/ApiService.html":{}}}],["src/app/core/api/api.service.ts:158",{"_index":99,"title":{},"body":{"injectables/ApiService.html":{}}}],["src/app/core/api/api.service.ts:173",{"_index":104,"title":{},"body":{"injectables/ApiService.html":{}}}],["src/app/core/api/api.service.ts:46",{"_index":138,"title":{},"body":{"injectables/ApiService.html":{}}}],["src/app/core/api/api.service.ts:47",{"_index":25,"title":{},"body":{"injectables/ApiService.html":{}}}],["src/app/core/api/api.service.ts:59",{"_index":76,"title":{},"body":{"injectables/ApiService.html":{}}}],["src/app/core/api/api.service.ts:87",{"_index":59,"title":{},"body":{"injectables/ApiService.html":{}}}],["src/app/core/auth/auth.service",{"_index":620,"title":{},"body":{"components/CategoryComponent.html":{},"components/GameDetailModalComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/MyLibraryComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/RegisterComponent.html":{},"components/UserProfileComponent.html":{}}}],["src/app/core/auth/auth.service.ts",{"_index":422,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/User.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/core/auth/auth.service.ts:101",{"_index":447,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/core/auth/auth.service.ts:125",{"_index":437,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/core/auth/auth.service.ts:22",{"_index":450,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/core/auth/auth.service.ts:23",{"_index":431,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/core/auth/auth.service.ts:35",{"_index":432,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/core/auth/auth.service.ts:51",{"_index":452,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/core/auth/auth.service.ts:56",{"_index":434,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/core/auth/auth.service.ts:69",{"_index":439,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/core/auth/auth.service.ts:81",{"_index":443,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/core/game/game.service",{"_index":621,"title":{},"body":{"components/CategoryComponent.html":{},"components/GameCardComponent.html":{},"components/GameDetailModalComponent.html":{},"components/MyLibraryComponent.html":{}}}],["src/app/core/game/game.service.ts",{"_index":824,"title":{},"body":{"interfaces/Game.html":{},"interfaces/GameAchievement.html":{},"injectables/GameService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/core/game/game.service.ts:138",{"_index":1036,"title":{},"body":{"injectables/GameService.html":{}}}],["src/app/core/game/game.service.ts:147",{"_index":1034,"title":{},"body":{"injectables/GameService.html":{}}}],["src/app/core/game/game.service.ts:79",{"_index":1031,"title":{},"body":{"injectables/GameService.html":{}}}],["src/app/core/game/game.service.ts:84",{"_index":1035,"title":{},"body":{"injectables/GameService.html":{}}}],["src/app/core/game/game.service.ts:90",{"_index":1032,"title":{},"body":{"injectables/GameService.html":{}}}],["src/app/core/game/game.service.ts:96",{"_index":1033,"title":{},"body":{"injectables/GameService.html":{}}}],["src/app/features/category/category.component.ts",{"_index":539,"title":{},"body":{"components/CategoryComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/features/category/category.component.ts:123",{"_index":587,"title":{},"body":{"components/CategoryComponent.html":{}}}],["src/app/features/category/category.component.ts:137",{"_index":597,"title":{},"body":{"components/CategoryComponent.html":{}}}],["src/app/features/category/category.component.ts:145",{"_index":588,"title":{},"body":{"components/CategoryComponent.html":{}}}],["src/app/features/category/category.component.ts:162",{"_index":590,"title":{},"body":{"components/CategoryComponent.html":{}}}],["src/app/features/category/category.component.ts:184",{"_index":596,"title":{},"body":{"components/CategoryComponent.html":{}}}],["src/app/features/category/category.component.ts:212",{"_index":593,"title":{},"body":{"components/CategoryComponent.html":{}}}],["src/app/features/category/category.component.ts:29",{"_index":610,"title":{},"body":{"components/CategoryComponent.html":{}}}],["src/app/features/category/category.component.ts:30",{"_index":606,"title":{},"body":{"components/CategoryComponent.html":{}}}],["src/app/features/category/category.component.ts:31",{"_index":603,"title":{},"body":{"components/CategoryComponent.html":{}}}],["src/app/features/category/category.component.ts:32",{"_index":604,"title":{},"body":{"components/CategoryComponent.html":{}}}],["src/app/features/category/category.component.ts:33",{"_index":598,"title":{},"body":{"components/CategoryComponent.html":{}}}],["src/app/features/category/category.component.ts:34",{"_index":607,"title":{},"body":{"components/CategoryComponent.html":{}}}],["src/app/features/category/category.component.ts:36",{"_index":612,"title":{},"body":{"components/CategoryComponent.html":{}}}],["src/app/features/category/category.component.ts:37",{"_index":615,"title":{},"body":{"components/CategoryComponent.html":{}}}],["src/app/features/category/category.component.ts:38",{"_index":614,"title":{},"body":{"components/CategoryComponent.html":{}}}],["src/app/features/category/category.component.ts:40",{"_index":602,"title":{},"body":{"components/CategoryComponent.html":{}}}],["src/app/features/category/category.component.ts:41",{"_index":601,"title":{},"body":{"components/CategoryComponent.html":{}}}],["src/app/features/category/category.component.ts:43",{"_index":613,"title":{},"body":{"components/CategoryComponent.html":{}}}],["src/app/features/category/category.component.ts:45",{"_index":611,"title":{},"body":{"components/CategoryComponent.html":{}}}],["src/app/features/category/category.component.ts:46",{"_index":600,"title":{},"body":{"components/CategoryComponent.html":{}}}],["src/app/features/category/category.component.ts:47",{"_index":605,"title":{},"body":{"components/CategoryComponent.html":{}}}],["src/app/features/category/category.component.ts:49",{"_index":582,"title":{},"body":{"components/CategoryComponent.html":{}}}],["src/app/features/category/category.component.ts:58",{"_index":594,"title":{},"body":{"components/CategoryComponent.html":{}}}],["src/app/features/category/category.component.ts:92",{"_index":585,"title":{},"body":{"components/CategoryComponent.html":{}}}],["src/app/features/category/category.component.ts:97",{"_index":592,"title":{},"body":{"components/CategoryComponent.html":{}}}],["src/app/features/home/home.component.ts",{"_index":1060,"title":{},"body":{"components/HomeComponent.html":{},"coverage.html":{}}}],["src/app/features/home/home.component.ts:24",{"_index":1077,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/features/home/home.component.ts:25",{"_index":1072,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/features/home/home.component.ts:32",{"_index":1076,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/features/home/home.component.ts:56",{"_index":1074,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/features/home/home.component.ts:82",{"_index":1075,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/features/login/login.component.ts",{"_index":1118,"title":{},"body":{"components/LoginComponent.html":{},"coverage.html":{}}}],["src/app/features/login/login.component.ts:25",{"_index":1142,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/features/login/login.component.ts:26",{"_index":1141,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/features/login/login.component.ts:28",{"_index":1139,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/features/login/login.component.ts:29",{"_index":1140,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/features/login/login.component.ts:30",{"_index":1134,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/features/login/login.component.ts:38",{"_index":1136,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/features/login/login.component.ts:47",{"_index":1137,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/features/login/login.component.ts:65",{"_index":1135,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/features/my",{"_index":1169,"title":{},"body":{"components/MyLibraryComponent.html":{},"coverage.html":{}}}],["src/app/features/recover",{"_index":1297,"title":{},"body":{"components/RecoverPasswordComponent.html":{},"coverage.html":{}}}],["src/app/features/register/register.component.ts",{"_index":1345,"title":{},"body":{"components/RegisterComponent.html":{},"coverage.html":{}}}],["src/app/features/register/register.component.ts:25",{"_index":1367,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/features/register/register.component.ts:26",{"_index":1366,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/features/register/register.component.ts:27",{"_index":1359,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/features/register/register.component.ts:29",{"_index":1363,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/features/register/register.component.ts:30",{"_index":1368,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/features/register/register.component.ts:31",{"_index":1362,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/features/register/register.component.ts:32",{"_index":1360,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/features/register/register.component.ts:33",{"_index":1365,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/features/register/register.component.ts:34",{"_index":1361,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/features/register/register.component.ts:35",{"_index":1364,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/features/register/register.component.ts:36",{"_index":1355,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/features/register/register.component.ts:44",{"_index":1357,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/features/register/register.component.ts:67",{"_index":1358,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/features/register/register.component.ts:86",{"_index":1356,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/features/user",{"_index":1390,"title":{},"body":{"components/UserProfileComponent.html":{},"coverage.html":{}}}],["src/app/guards/auth.guard.ts",{"_index":1464,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/shared/confirmation",{"_index":738,"title":{},"body":{"components/ConfirmationModalComponent.html":{},"components/MyLibraryComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/shared/footer/footer.component.ts",{"_index":811,"title":{},"body":{"components/FooterComponent.html":{},"coverage.html":{}}}],["src/app/shared/game",{"_index":622,"title":{},"body":{"components/CategoryComponent.html":{},"components/GameCardComponent.html":{},"components/GameDetailModalComponent.html":{},"components/MyLibraryComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/shared/header/header.component.ts",{"_index":1037,"title":{},"body":{"components/HeaderComponent.html":{},"coverage.html":{}}}],["src/app/shared/header/header.component.ts:21",{"_index":1046,"title":{},"body":{"components/HeaderComponent.html":{}}}],["src/app/shared/header/header.component.ts:22",{"_index":1048,"title":{},"body":{"components/HeaderComponent.html":{}}}],["src/app/shared/header/header.component.ts:25",{"_index":1047,"title":{},"body":{"components/HeaderComponent.html":{}}}],["src/app/utils/validator",{"_index":1145,"title":{},"body":{"components/LoginComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/UserProfileComponent.html":{}}}],["src/app/utils/validator.ts",{"_index":1472,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["started",{"_index":1509,"title":{"index.html":{}},"body":{}}],["state",{"_index":1578,"title":{},"body":{"miscellaneous/variables.html":{}}}],["statements",{"_index":1439,"title":{},"body":{"coverage.html":{}}}],["stored",{"_index":1536,"title":{},"body":{"index.html":{}}}],["storeduser",{"_index":468,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/User.html":{}}}],["str",{"_index":586,"title":{},"body":{"components/CategoryComponent.html":{}}}],["str.charat(0).touppercase",{"_index":652,"title":{},"body":{"components/CategoryComponent.html":{}}}],["str.slice(1",{"_index":653,"title":{},"body":{"components/CategoryComponent.html":{}}}],["strategy",{"_index":1104,"title":{},"body":{"components/HomeComponent.html":{}}}],["string",{"_index":72,"title":{},"body":{"injectables/ApiService.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/CategoryComponent.html":{},"components/ConfirmationModalComponent.html":{},"interfaces/Game.html":{},"interfaces/GameAchievement.html":{},"components/GameDetailModalComponent.html":{},"injectables/GameService.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/MyLibraryComponent.html":{},"interfaces/RawgAchievementApi.html":{},"interfaces/RawgAchievementsApiResponse.html":{},"interfaces/RawgApiResponse.html":{},"interfaces/RawgGame.html":{},"components/RecoverPasswordComponent.html":{},"components/RegisterComponent.html":{},"interfaces/User.html":{},"components/UserProfileComponent.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["string(gametoupdate.hoursplayed",{"_index":1253,"title":{},"body":{"components/MyLibraryComponent.html":{}}}],["strings",{"_index":101,"title":{},"body":{"injectables/ApiService.html":{},"interfaces/RawgAchievementApi.html":{},"interfaces/RawgAchievementsApiResponse.html":{},"interfaces/RawgApiResponse.html":{},"interfaces/RawgGame.html":{}}}],["styles",{"_index":264,"title":{},"body":{"components/AppComponent.html":{},"components/CategoryComponent.html":{},"components/ConfirmationModalComponent.html":{},"components/FooterComponent.html":{},"components/GameCardComponent.html":{},"components/GameDetailModalComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/MyLibraryComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/RegisterComponent.html":{},"components/UserProfileComponent.html":{}}}],["styleurls",{"_index":294,"title":{},"body":{"components/AppComponent.html":{},"components/CategoryComponent.html":{},"components/ConfirmationModalComponent.html":{},"components/FooterComponent.html":{},"components/GameCardComponent.html":{},"components/GameDetailModalComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/MyLibraryComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/RegisterComponent.html":{},"components/UserProfileComponent.html":{}}}],["su",{"_index":45,"title":{},"body":{"injectables/ApiService.html":{},"components/MyLibraryComponent.html":{},"interfaces/RawgAchievementApi.html":{},"interfaces/RawgAchievementsApiResponse.html":{},"interfaces/RawgApiResponse.html":{},"interfaces/RawgGame.html":{},"components/RecoverPasswordComponent.html":{},"components/UserProfileComponent.html":{}}}],["subscribe",{"_index":638,"title":{},"body":{"components/CategoryComponent.html":{}}}],["subscribe(fulldetailsgame",{"_index":1285,"title":{},"body":{"components/MyLibraryComponent.html":{}}}],["subscription",{"_index":599,"title":{},"body":{"components/CategoryComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/MyLibraryComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/RegisterComponent.html":{},"components/UserProfileComponent.html":{}}}],["success",{"_index":492,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Game.html":{},"interfaces/GameAchievement.html":{},"injectables/GameService.html":{},"interfaces/User.html":{}}}],["summary",{"_index":309,"title":{},"body":{"components/AppComponent.html":{},"components/CategoryComponent.html":{},"components/ConfirmationModalComponent.html":{},"components/FooterComponent.html":{},"interfaces/Game.html":{},"interfaces/GameAchievement.html":{},"components/GameCardComponent.html":{},"components/GameDetailModalComponent.html":{},"injectables/GameService.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/MyLibraryComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/RegisterComponent.html":{},"components/UserProfileComponent.html":{}}}],["support",{"_index":1563,"title":{},"body":{"modules.html":{}}}],["sus",{"_index":722,"title":{},"body":{"components/CategoryComponent.html":{},"components/GameDetailModalComponent.html":{},"components/LoginComponent.html":{},"components/MyLibraryComponent.html":{},"components/RegisterComponent.html":{}}}],["suscribe",{"_index":1229,"title":{},"body":{"components/MyLibraryComponent.html":{},"components/UserProfileComponent.html":{}}}],["suscripción",{"_index":284,"title":{},"body":{"components/AppComponent.html":{}}}],["svg",{"_index":1564,"title":{},"body":{"modules.html":{}}}],["switch",{"_index":1098,"title":{},"body":{"components/HomeComponent.html":{}}}],["switchmap",{"_index":618,"title":{},"body":{"components/CategoryComponent.html":{}}}],["switchmap(params",{"_index":628,"title":{},"body":{"components/CategoryComponent.html":{}}}],["table",{"_index":1475,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":1474,"title":{},"body":{"coverage.html":{}}}],["también",{"_index":1175,"title":{},"body":{"components/MyLibraryComponent.html":{}}}],["tarde",{"_index":651,"title":{},"body":{"components/CategoryComponent.html":{}}}],["tarjeta",{"_index":927,"title":{},"body":{"components/GameCardComponent.html":{}}}],["template",{"_index":263,"title":{},"body":{"components/AppComponent.html":{},"components/CategoryComponent.html":{},"components/ConfirmationModalComponent.html":{},"components/FooterComponent.html":{},"components/GameCardComponent.html":{},"components/GameDetailModalComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/MyLibraryComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/RegisterComponent.html":{},"components/UserProfileComponent.html":{}}}],["templateurl",{"_index":296,"title":{},"body":{"components/AppComponent.html":{},"components/CategoryComponent.html":{},"components/ConfirmationModalComponent.html":{},"components/FooterComponent.html":{},"components/GameCardComponent.html":{},"components/GameDetailModalComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/MyLibraryComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/RegisterComponent.html":{},"components/UserProfileComponent.html":{}}}],["tener",{"_index":1334,"title":{},"body":{"components/RecoverPasswordComponent.html":{},"components/RegisterComponent.html":{},"components/UserProfileComponent.html":{}}}],["test",{"_index":1542,"title":{},"body":{"index.html":{}}}],["testing",{"_index":1553,"title":{},"body":{"index.html":{}}}],["tests",{"_index":1541,"title":{},"body":{"index.html":{}}}],["texto",{"_index":746,"title":{},"body":{"components/ConfirmationModalComponent.html":{}}}],["this._saveusergames(username",{"_index":914,"title":{},"body":{"interfaces/Game.html":{},"interfaces/GameAchievement.html":{},"injectables/GameService.html":{}}}],["this.achievementupdated.emit",{"_index":1021,"title":{},"body":{"components/GameDetailModalComponent.html":{}}}],["this.allgames",{"_index":639,"title":{},"body":{"components/CategoryComponent.html":{}}}],["this.allgames.filter(game",{"_index":694,"title":{},"body":{"components/CategoryComponent.html":{}}}],["this.allgames.foreach(game",{"_index":667,"title":{},"body":{"components/CategoryComponent.html":{}}}],["this.allusergames",{"_index":1231,"title":{},"body":{"components/MyLibraryComponent.html":{}}}],["this.allusergames.filter(game",{"_index":1239,"title":{},"body":{"components/MyLibraryComponent.html":{}}}],["this.allusergames.find(game",{"_index":1245,"title":{},"body":{"components/MyLibraryComponent.html":{}}}],["this.api_key",{"_index":207,"title":{},"body":{"injectables/ApiService.html":{},"interfaces/RawgAchievementApi.html":{},"interfaces/RawgAchievementsApiResponse.html":{},"interfaces/RawgApiResponse.html":{},"interfaces/RawgGame.html":{}}}],["this.api_key).set('page_size",{"_index":182,"title":{},"body":{"injectables/ApiService.html":{},"interfaces/RawgAchievementApi.html":{},"interfaces/RawgAchievementsApiResponse.html":{},"interfaces/RawgApiResponse.html":{},"interfaces/RawgGame.html":{}}}],["this.authservice.currentuser.subscribe(user",{"_index":312,"title":{},"body":{"components/AppComponent.html":{},"components/CategoryComponent.html":{},"components/MyLibraryComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/RegisterComponent.html":{},"components/UserProfileComponent.html":{}}}],["this.authservice.getcurrentuser",{"_index":708,"title":{},"body":{"components/CategoryComponent.html":{},"components/GameDetailModalComponent.html":{}}}],["this.authservice.init",{"_index":624,"title":{},"body":{"components/CategoryComponent.html":{},"components/HomeComponent.html":{}}}],["this.authservice.login(username",{"_index":1155,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.authservice.logout",{"_index":1050,"title":{},"body":{"components/HeaderComponent.html":{}}}],["this.authservice.register(newuser",{"_index":1383,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.authservice.updatepassword(email",{"_index":1331,"title":{},"body":{"components/RecoverPasswordComponent.html":{}}}],["this.authservice.updateprofile(this.currentuser.username",{"_index":1428,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["this.authsubscription",{"_index":625,"title":{},"body":{"components/CategoryComponent.html":{},"components/LoginComponent.html":{},"components/MyLibraryComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/RegisterComponent.html":{},"components/UserProfileComponent.html":{}}}],["this.authsubscription.unsubscribe",{"_index":732,"title":{},"body":{"components/CategoryComponent.html":{},"components/LoginComponent.html":{},"components/MyLibraryComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/RegisterComponent.html":{},"components/UserProfileComponent.html":{}}}],["this.availablegenres",{"_index":640,"title":{},"body":{"components/CategoryComponent.html":{}}}],["this.availableplatforms",{"_index":641,"title":{},"body":{"components/CategoryComponent.html":{}}}],["this.bsmodal",{"_index":793,"title":{},"body":{"components/ConfirmationModalComponent.html":{},"components/GameDetailModalComponent.html":{}}}],["this.bsmodal.hide",{"_index":804,"title":{},"body":{"components/ConfirmationModalComponent.html":{},"components/GameDetailModalComponent.html":{}}}],["this.bsmodal.show",{"_index":803,"title":{},"body":{"components/ConfirmationModalComponent.html":{},"components/GameDetailModalComponent.html":{}}}],["this.capitalizefirstletter(this.categoryslug.replace",{"_index":632,"title":{},"body":{"components/CategoryComponent.html":{}}}],["this.categories",{"_index":1082,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.categoriessubscription",{"_index":1079,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.categoriessubscription.unsubscribe",{"_index":1114,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.categoryname",{"_index":631,"title":{},"body":{"components/CategoryComponent.html":{}}}],["this.categoryslug",{"_index":629,"title":{},"body":{"components/CategoryComponent.html":{}}}],["this.confirmationmodal.show",{"_index":1271,"title":{},"body":{"components/MyLibraryComponent.html":{}}}],["this.confirmationmodalconfirmtext",{"_index":1270,"title":{},"body":{"components/MyLibraryComponent.html":{}}}],["this.confirmationmodalmessage",{"_index":1266,"title":{},"body":{"components/MyLibraryComponent.html":{}}}],["this.confirmationmodaltitle",{"_index":1265,"title":{},"body":{"components/MyLibraryComponent.html":{}}}],["this.confirmed.emit(false",{"_index":810,"title":{},"body":{"components/ConfirmationModalComponent.html":{}}}],["this.confirmed.emit(true",{"_index":806,"title":{},"body":{"components/ConfirmationModalComponent.html":{}}}],["this.currentuser",{"_index":313,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/CategoryComponent.html":{},"components/MyLibraryComponent.html":{},"interfaces/User.html":{},"components/UserProfileComponent.html":{}}}],["this.currentuser.email",{"_index":1424,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["this.currentuser.role",{"_index":1427,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["this.currentusersubject",{"_index":470,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/User.html":{}}}],["this.currentusersubject.asobservable",{"_index":472,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/User.html":{}}}],["this.currentusersubject.next(null",{"_index":538,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/User.html":{}}}],["this.currentusersubject.next(user",{"_index":501,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/User.html":{}}}],["this.currentusersubject.value",{"_index":489,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/User.html":{}}}],["this.error",{"_index":1008,"title":{},"body":{"components/GameDetailModalComponent.html":{},"components/MyLibraryComponent.html":{}}}],["this.fb.group",{"_index":1149,"title":{},"body":{"components/LoginComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/RegisterComponent.html":{},"components/UserProfileComponent.html":{}}}],["this.filterandrendergames",{"_index":1233,"title":{},"body":{"components/MyLibraryComponent.html":{}}}],["this.filteredgames",{"_index":693,"title":{},"body":{"components/CategoryComponent.html":{},"components/MyLibraryComponent.html":{}}}],["this.filtergames",{"_index":642,"title":{},"body":{"components/CategoryComponent.html":{}}}],["this.game",{"_index":1007,"title":{},"body":{"components/GameDetailModalComponent.html":{}}}],["this.gamedetailmodal",{"_index":728,"title":{},"body":{"components/CategoryComponent.html":{},"components/MyLibraryComponent.html":{}}}],["this.gamedetailmodal.show",{"_index":729,"title":{},"body":{"components/CategoryComponent.html":{},"components/MyLibraryComponent.html":{}}}],["this.gameidtodelete",{"_index":1263,"title":{},"body":{"components/MyLibraryComponent.html":{}}}],["this.gameservice.addgame('nombreusuario",{"_index":869,"title":{},"body":{"interfaces/Game.html":{},"interfaces/GameAchievement.html":{},"injectables/GameService.html":{}}}],["this.gameservice.addgame(currentuser.username",{"_index":713,"title":{},"body":{"components/CategoryComponent.html":{}}}],["this.gameservice.deletegame(this.currentuser.username",{"_index":1277,"title":{},"body":{"components/MyLibraryComponent.html":{}}}],["this.gameservice.getusergames('nombreusuario",{"_index":868,"title":{},"body":{"interfaces/Game.html":{},"interfaces/GameAchievement.html":{},"injectables/GameService.html":{}}}],["this.gameservice.getusergames(currentuser.username",{"_index":1014,"title":{},"body":{"components/GameDetailModalComponent.html":{}}}],["this.gameservice.getusergames(this.currentuser.username",{"_index":1232,"title":{},"body":{"components/MyLibraryComponent.html":{}}}],["this.gameservice.updategame(currentuser.username",{"_index":1020,"title":{},"body":{"components/GameDetailModalComponent.html":{}}}],["this.gameservice.updategame(this.currentuser.username",{"_index":1247,"title":{},"body":{"components/MyLibraryComponent.html":{}}}],["this.getcategoryicon(name",{"_index":1084,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.getcurrentuser",{"_index":523,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/User.html":{}}}],["this.getusergames(username",{"_index":883,"title":{},"body":{"interfaces/Game.html":{},"interfaces/GameAchievement.html":{},"injectables/GameService.html":{}}}],["this.hide",{"_index":807,"title":{},"body":{"components/ConfirmationModalComponent.html":{}}}],["this.http.get(`${this.base_url}/games",{"_index":193,"title":{},"body":{"injectables/ApiService.html":{},"interfaces/RawgAchievementApi.html":{},"interfaces/RawgAchievementsApiResponse.html":{},"interfaces/RawgApiResponse.html":{},"interfaces/RawgGame.html":{}}}],["this.http.get(`${this.base_url}/games/${gameid}/achievements",{"_index":222,"title":{},"body":{"injectables/ApiService.html":{},"interfaces/RawgAchievementApi.html":{},"interfaces/RawgAchievementsApiResponse.html":{},"interfaces/RawgApiResponse.html":{},"interfaces/RawgGame.html":{}}}],["this.http.get(`${this.base_url}/games/${id",{"_index":208,"title":{},"body":{"injectables/ApiService.html":{},"interfaces/RawgAchievementApi.html":{},"interfaces/RawgAchievementsApiResponse.html":{},"interfaces/RawgApiResponse.html":{},"interfaces/RawgGame.html":{}}}],["this.http.get(`${this.base_url}/genres",{"_index":253,"title":{},"body":{"injectables/ApiService.html":{},"interfaces/RawgAchievementApi.html":{},"interfaces/RawgAchievementsApiResponse.html":{},"interfaces/RawgApiResponse.html":{},"interfaces/RawgGame.html":{}}}],["this.http.get(`${this.base_url}/platforms",{"_index":256,"title":{},"body":{"injectables/ApiService.html":{},"interfaces/RawgAchievementApi.html":{},"interfaces/RawgAchievementsApiResponse.html":{},"interfaces/RawgApiResponse.html":{},"interfaces/RawgGame.html":{}}}],["this.init",{"_index":467,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/User.html":{}}}],["this.initprofileform(user",{"_index":1411,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["this.loadusergames",{"_index":1230,"title":{},"body":{"components/MyLibraryComponent.html":{}}}],["this.loginform",{"_index":1148,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.loginform.invalid",{"_index":1151,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.loginform.markallastouched",{"_index":1152,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.loginform.value",{"_index":1154,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.loginmessage",{"_index":1153,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.maprawgachievementtogameachievement(rawgachievement",{"_index":224,"title":{},"body":{"injectables/ApiService.html":{},"interfaces/RawgAchievementApi.html":{},"interfaces/RawgAchievementsApiResponse.html":{},"interfaces/RawgApiResponse.html":{},"interfaces/RawgGame.html":{}}}],["this.maprawggametogame(rawggame",{"_index":197,"title":{},"body":{"injectables/ApiService.html":{},"interfaces/RawgAchievementApi.html":{},"interfaces/RawgAchievementsApiResponse.html":{},"interfaces/RawgApiResponse.html":{},"interfaces/RawgGame.html":{}}}],["this.modalelementref.nativeelement.addeventlistener('hidden.bs.modal",{"_index":798,"title":{},"body":{"components/ConfirmationModalComponent.html":{},"components/GameDetailModalComponent.html":{}}}],["this.modalelementref?.nativeelement",{"_index":792,"title":{},"body":{"components/ConfirmationModalComponent.html":{},"components/GameDetailModalComponent.html":{}}}],["this.profileform",{"_index":1412,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["this.profileform.get('birthday')?.value",{"_index":1425,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["this.profileform.get('fullname')?.value",{"_index":1422,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["this.profileform.get('password')?.value",{"_index":1426,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["this.profileform.get('username')?.value",{"_index":1423,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["this.profileform.invalid",{"_index":1418,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["this.profileform.markallastouched",{"_index":1419,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["this.profilemessage",{"_index":1420,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["this.rawgapiservice.getgameachievements(game.id).pipe",{"_index":724,"title":{},"body":{"components/CategoryComponent.html":{}}}],["this.rawgapiservice.getgameachievements(game.id).subscribe",{"_index":710,"title":{},"body":{"components/CategoryComponent.html":{}}}],["this.rawgapiservice.getgamedetails(game.id",{"_index":723,"title":{},"body":{"components/CategoryComponent.html":{}}}],["this.rawgapiservice.getgamedetails(game.id).pipe",{"_index":1283,"title":{},"body":{"components/MyLibraryComponent.html":{}}}],["this.rawgapiservice.getgames",{"_index":635,"title":{},"body":{"components/CategoryComponent.html":{}}}],["this.rawgapiservice.getgenres",{"_index":636,"title":{},"body":{"components/CategoryComponent.html":{}}}],["this.rawgapiservice.getgenres().subscribe",{"_index":1080,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.rawgapiservice.getplatforms",{"_index":637,"title":{},"body":{"components/CategoryComponent.html":{}}}],["this.recoveryform",{"_index":1320,"title":{},"body":{"components/RecoverPasswordComponent.html":{}}}],["this.recoveryform.invalid",{"_index":1326,"title":{},"body":{"components/RecoverPasswordComponent.html":{}}}],["this.recoveryform.markallastouched",{"_index":1327,"title":{},"body":{"components/RecoverPasswordComponent.html":{}}}],["this.recoveryform.value",{"_index":1330,"title":{},"body":{"components/RecoverPasswordComponent.html":{}}}],["this.recoverymessage",{"_index":1328,"title":{},"body":{"components/RecoverPasswordComponent.html":{}}}],["this.registerform",{"_index":1373,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.registerform.invalid",{"_index":1379,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.registerform.markallastouched",{"_index":1380,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.registerform.value",{"_index":1382,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.registermessage",{"_index":1381,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.resetfilters",{"_index":634,"title":{},"body":{"components/CategoryComponent.html":{}}}],["this.route.parammap.pipe",{"_index":627,"title":{},"body":{"components/CategoryComponent.html":{}}}],["this.router.navigate(['/inicio",{"_index":1325,"title":{},"body":{"components/RecoverPasswordComponent.html":{},"components/RegisterComponent.html":{},"components/UserProfileComponent.html":{}}}],["this.router.navigate(['/login",{"_index":1051,"title":{},"body":{"components/HeaderComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/RegisterComponent.html":{}}}],["this.router.navigate(['/mi",{"_index":1158,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.routesubscription",{"_index":626,"title":{},"body":{"components/CategoryComponent.html":{}}}],["this.routesubscription.unsubscribe",{"_index":731,"title":{},"body":{"components/CategoryComponent.html":{}}}],["this.searchterm",{"_index":680,"title":{},"body":{"components/CategoryComponent.html":{}}}],["this.searchterm.tolowercase",{"_index":688,"title":{},"body":{"components/CategoryComponent.html":{},"components/MyLibraryComponent.html":{}}}],["this.selectedfavorite",{"_index":1238,"title":{},"body":{"components/MyLibraryComponent.html":{}}}],["this.selectedgameformodal",{"_index":727,"title":{},"body":{"components/CategoryComponent.html":{},"components/MyLibraryComponent.html":{}}}],["this.selectedgenre",{"_index":682,"title":{},"body":{"components/CategoryComponent.html":{}}}],["this.selectedgenre.tolowercase",{"_index":692,"title":{},"body":{"components/CategoryComponent.html":{}}}],["this.selectedplatform",{"_index":681,"title":{},"body":{"components/CategoryComponent.html":{}}}],["this.selectedplatform.tolowercase",{"_index":690,"title":{},"body":{"components/CategoryComponent.html":{}}}],["this.selectedstatus",{"_index":1236,"title":{},"body":{"components/MyLibraryComponent.html":{}}}],["throw",{"_index":217,"title":{},"body":{"injectables/ApiService.html":{},"interfaces/RawgAchievementApi.html":{},"interfaces/RawgAchievementsApiResponse.html":{},"interfaces/RawgApiResponse.html":{},"interfaces/RawgGame.html":{}}}],["tienes",{"_index":1165,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["title",{"_index":232,"title":{},"body":{"injectables/ApiService.html":{},"components/AppComponent.html":{},"components/ConfirmationModalComponent.html":{},"interfaces/Game.html":{},"interfaces/GameAchievement.html":{},"injectables/GameService.html":{},"interfaces/RawgAchievementApi.html":{},"interfaces/RawgAchievementsApiResponse.html":{},"interfaces/RawgApiResponse.html":{},"interfaces/RawgGame.html":{}}}],["titlecase",{"_index":1058,"title":{},"body":{"components/HeaderComponent.html":{}}}],["todas",{"_index":733,"title":{},"body":{"components/CategoryComponent.html":{},"components/HeaderComponent.html":{}}}],["todos",{"_index":734,"title":{},"body":{"components/CategoryComponent.html":{},"components/FooterComponent.html":{},"interfaces/Game.html":{},"interfaces/GameAchievement.html":{},"injectables/GameService.html":{},"components/LoginComponent.html":{},"components/MyLibraryComponent.html":{}}}],["toggle",{"_index":1244,"title":{},"body":{"components/MyLibraryComponent.html":{}}}],["togglefavorite",{"_index":946,"title":{},"body":{"components/GameCardComponent.html":{}}}],["toggleplayed",{"_index":947,"title":{},"body":{"components/GameCardComponent.html":{}}}],["transformado",{"_index":96,"title":{},"body":{"injectables/ApiService.html":{},"interfaces/RawgAchievementApi.html":{},"interfaces/RawgAchievementsApiResponse.html":{},"interfaces/RawgApiResponse.html":{},"interfaces/RawgGame.html":{}}}],["tree",{"_index":266,"title":{},"body":{"components/AppComponent.html":{},"components/CategoryComponent.html":{},"components/ConfirmationModalComponent.html":{},"components/FooterComponent.html":{},"components/GameCardComponent.html":{},"components/GameDetailModalComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/MyLibraryComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/RegisterComponent.html":{},"components/UserProfileComponent.html":{}}}],["trofeos",{"_index":1023,"title":{},"body":{"components/GameDetailModalComponent.html":{}}}],["true",{"_index":210,"title":{},"body":{"injectables/ApiService.html":{},"injectables/AuthService.html":{},"interfaces/Game.html":{},"interfaces/GameAchievement.html":{},"injectables/GameService.html":{},"interfaces/RawgAchievementApi.html":{},"interfaces/RawgAchievementsApiResponse.html":{},"interfaces/RawgApiResponse.html":{},"interfaces/RawgGame.html":{},"interfaces/User.html":{},"components/UserProfileComponent.html":{},"miscellaneous/variables.html":{}}}],["tslib",{"_index":1489,"title":{},"body":{"dependencies.html":{}}}],["tu",{"_index":116,"title":{},"body":{"injectables/ApiService.html":{},"components/CategoryComponent.html":{},"interfaces/Game.html":{},"interfaces/GameAchievement.html":{},"injectables/GameService.html":{},"components/LoginComponent.html":{},"components/MyLibraryComponent.html":{},"interfaces/RawgAchievementApi.html":{},"interfaces/RawgAchievementsApiResponse.html":{},"interfaces/RawgApiResponse.html":{},"interfaces/RawgGame.html":{},"components/RegisterComponent.html":{},"components/UserProfileComponent.html":{}}}],["tus",{"_index":861,"title":{},"body":{"interfaces/Game.html":{},"interfaces/GameAchievement.html":{},"injectables/GameService.html":{},"components/MyLibraryComponent.html":{}}}],["tutorial",{"_index":900,"title":{},"body":{"interfaces/Game.html":{},"interfaces/GameAchievement.html":{},"injectables/GameService.html":{}}}],["type",{"_index":29,"title":{},"body":{"injectables/ApiService.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/CategoryComponent.html":{},"components/ConfirmationModalComponent.html":{},"interfaces/Game.html":{},"interfaces/GameAchievement.html":{},"components/GameCardComponent.html":{},"components/GameDetailModalComponent.html":{},"injectables/GameService.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/MyLibraryComponent.html":{},"interfaces/RawgAchievementApi.html":{},"interfaces/RawgAchievementsApiResponse.html":{},"interfaces/RawgApiResponse.html":{},"interfaces/RawgGame.html":{},"components/RecoverPasswordComponent.html":{},"components/RegisterComponent.html":{},"interfaces/User.html":{},"components/UserProfileComponent.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["typescript",{"_index":866,"title":{},"body":{"interfaces/Game.html":{},"interfaces/GameAchievement.html":{},"injectables/GameService.html":{}}}],["término",{"_index":83,"title":{},"body":{"injectables/ApiService.html":{},"interfaces/RawgAchievementApi.html":{},"interfaces/RawgAchievementsApiResponse.html":{},"interfaces/RawgApiResponse.html":{},"interfaces/RawgGame.html":{}}}],["título",{"_index":744,"title":{},"body":{"components/ConfirmationModalComponent.html":{},"interfaces/Game.html":{},"interfaces/GameAchievement.html":{},"components/GameDetailModalComponent.html":{},"injectables/GameService.html":{}}}],["u.email",{"_index":519,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/User.html":{}}}],["u.password",{"_index":498,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/User.html":{}}}],["u.username",{"_index":497,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/User.html":{}}}],["un",{"_index":41,"title":{},"body":{"injectables/ApiService.html":{},"injectables/AuthService.html":{},"components/CategoryComponent.html":{},"components/ConfirmationModalComponent.html":{},"interfaces/Game.html":{},"interfaces/GameAchievement.html":{},"components/GameDetailModalComponent.html":{},"injectables/GameService.html":{},"components/LoginComponent.html":{},"components/MyLibraryComponent.html":{},"interfaces/RawgAchievementApi.html":{},"interfaces/RawgAchievementsApiResponse.html":{},"interfaces/RawgApiResponse.html":{},"interfaces/RawgGame.html":{},"components/RegisterComponent.html":{},"interfaces/User.html":{},"components/UserProfileComponent.html":{},"miscellaneous/functions.html":{}}}],["una",{"_index":77,"title":{},"body":{"injectables/ApiService.html":{},"components/CategoryComponent.html":{},"components/GameCardComponent.html":{},"components/GameDetailModalComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"interfaces/RawgAchievementApi.html":{},"interfaces/RawgAchievementsApiResponse.html":{},"interfaces/RawgApiResponse.html":{},"interfaces/RawgGame.html":{},"components/RecoverPasswordComponent.html":{},"components/RegisterComponent.html":{},"miscellaneous/functions.html":{}}}],["unit",{"_index":1540,"title":{},"body":{"index.html":{}}}],["updateddata",{"_index":1421,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["updatedgame",{"_index":920,"title":{},"body":{"interfaces/Game.html":{},"interfaces/GameAchievement.html":{},"injectables/GameService.html":{}}}],["updatedgame.id",{"_index":922,"title":{},"body":{"interfaces/Game.html":{},"interfaces/GameAchievement.html":{},"injectables/GameService.html":{}}}],["updategame",{"_index":1030,"title":{},"body":{"injectables/GameService.html":{}}}],["updategame(username",{"_index":919,"title":{},"body":{"interfaces/Game.html":{},"interfaces/GameAchievement.html":{},"injectables/GameService.html":{}}}],["updatehours",{"_index":948,"title":{},"body":{"components/GameCardComponent.html":{}}}],["updatepassword",{"_index":427,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/User.html":{}}}],["updatepassword(useremail",{"_index":441,"title":{},"body":{"injectables/AuthService.html":{}}}],["updateprofile",{"_index":428,"title":{},"body":{"injectables/AuthService.html":{}}}],["updateprofile(originalusername",{"_index":445,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/User.html":{}}}],["url",{"_index":844,"title":{},"body":{"interfaces/Game.html":{},"interfaces/GameAchievement.html":{},"injectables/GameService.html":{}}}],["usa",{"_index":939,"title":{},"body":{"components/GameCardComponent.html":{},"components/HomeComponent.html":{}}}],["usagenotes",{"_index":310,"title":{},"body":{"components/AppComponent.html":{},"components/CategoryComponent.html":{},"components/ConfirmationModalComponent.html":{},"components/FooterComponent.html":{},"interfaces/Game.html":{},"interfaces/GameAchievement.html":{},"components/GameCardComponent.html":{},"components/GameDetailModalComponent.html":{},"injectables/GameService.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/MyLibraryComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/RegisterComponent.html":{},"components/UserProfileComponent.html":{}}}],["usar",{"_index":655,"title":{},"body":{"components/CategoryComponent.html":{},"components/MyLibraryComponent.html":{}}}],["use",{"_index":1532,"title":{},"body":{"index.html":{}}}],["user",{"_index":305,"title":{"interfaces/User.html":{}},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/CategoryComponent.html":{},"components/ConfirmationModalComponent.html":{},"components/FooterComponent.html":{},"components/GameCardComponent.html":{},"components/GameDetailModalComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/MyLibraryComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/RegisterComponent.html":{},"interfaces/User.html":{},"components/UserProfileComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["user.email",{"_index":1414,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["user.fullname",{"_index":1413,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["user.password",{"_index":1417,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["user.role",{"_index":1057,"title":{},"body":{"components/HeaderComponent.html":{},"miscellaneous/variables.html":{}}}],["user.username",{"_index":1055,"title":{},"body":{"components/HeaderComponent.html":{},"components/UserProfileComponent.html":{}}}],["user1",{"_index":1295,"title":{},"body":{"components/MyLibraryComponent.html":{}}}],["user123",{"_index":1296,"title":{},"body":{"components/MyLibraryComponent.html":{}}}],["user_games_key",{"_index":459,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Game.html":{},"interfaces/GameAchievement.html":{},"injectables/GameService.html":{},"interfaces/User.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["useremail",{"_index":444,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/User.html":{}}}],["usergames",{"_index":867,"title":{},"body":{"interfaces/Game.html":{},"interfaces/GameAchievement.html":{},"components/GameDetailModalComponent.html":{},"injectables/GameService.html":{}}}],["usergames.filter(game",{"_index":925,"title":{},"body":{"interfaces/Game.html":{},"interfaces/GameAchievement.html":{},"injectables/GameService.html":{}}}],["usergames.find(g",{"_index":1016,"title":{},"body":{"components/GameDetailModalComponent.html":{}}}],["usergames.map(game",{"_index":921,"title":{},"body":{"interfaces/Game.html":{},"interfaces/GameAchievement.html":{},"injectables/GameService.html":{}}}],["usergames.push(newgame",{"_index":913,"title":{},"body":{"interfaces/Game.html":{},"interfaces/GameAchievement.html":{},"injectables/GameService.html":{}}}],["usergames.some(game",{"_index":889,"title":{},"body":{"interfaces/Game.html":{},"interfaces/GameAchievement.html":{},"injectables/GameService.html":{}}}],["userindex",{"_index":517,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/User.html":{}}}],["username",{"_index":435,"title":{},"body":{"injectables/AuthService.html":{},"injectables/GameService.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"interfaces/User.html":{},"components/UserProfileComponent.html":{}}}],["userprofilecomponent",{"_index":344,"title":{"components/UserProfileComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/CategoryComponent.html":{},"components/ConfirmationModalComponent.html":{},"components/FooterComponent.html":{},"components/GameCardComponent.html":{},"components/GameDetailModalComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/MyLibraryComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/RegisterComponent.html":{},"components/UserProfileComponent.html":{},"coverage.html":{},"overview.html":{}}}],["users",{"_index":494,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/User.html":{}}}],["users.find(u",{"_index":496,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/User.html":{}}}],["users.findindex((u",{"_index":518,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/User.html":{}}}],["users.push(newuser",{"_index":509,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/User.html":{}}}],["users.some((u",{"_index":506,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/User.html":{}}}],["users[userindex",{"_index":534,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/User.html":{}}}],["users[userindex].password",{"_index":522,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/User.html":{}}}],["uso",{"_index":533,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/User.html":{}}}],["usuario",{"_index":287,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/CategoryComponent.html":{},"components/ConfirmationModalComponent.html":{},"interfaces/Game.html":{},"interfaces/GameAchievement.html":{},"components/GameDetailModalComponent.html":{},"injectables/GameService.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/MyLibraryComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/RegisterComponent.html":{},"interfaces/User.html":{},"components/UserProfileComponent.html":{}}}],["usuarios",{"_index":475,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Game.html":{},"interfaces/GameAchievement.html":{},"injectables/GameService.html":{},"components/LoginComponent.html":{},"components/MyLibraryComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/RegisterComponent.html":{},"interfaces/User.html":{}}}],["utiliza",{"_index":1122,"title":{},"body":{"components/LoginComponent.html":{},"components/RecoverPasswordComponent.html":{}}}],["utilizado",{"_index":928,"title":{},"body":{"components/GameCardComponent.html":{}}}],["utilizando",{"_index":1281,"title":{},"body":{"components/MyLibraryComponent.html":{}}}],["utils/validator",{"_index":1370,"title":{},"body":{"components/RegisterComponent.html":{}}}],["vacío",{"_index":204,"title":{},"body":{"injectables/ApiService.html":{},"interfaces/RawgAchievementApi.html":{},"interfaces/RawgAchievementsApiResponse.html":{},"interfaces/RawgApiResponse.html":{},"interfaces/RawgGame.html":{}}}],["validaciones",{"_index":1371,"title":{},"body":{"components/RegisterComponent.html":{},"components/UserProfileComponent.html":{}}}],["validación",{"_index":1350,"title":{},"body":{"components/RegisterComponent.html":{}}}],["validadora",{"_index":1497,"title":{},"body":{"miscellaneous/functions.html":{}}}],["validadores",{"_index":1125,"title":{},"body":{"components/LoginComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/RegisterComponent.html":{}}}],["validatorfn",{"_index":1496,"title":{},"body":{"miscellaneous/functions.html":{}}}],["validators",{"_index":1143,"title":{},"body":{"components/LoginComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/RegisterComponent.html":{},"components/UserProfileComponent.html":{}}}],["validators.required",{"_index":1150,"title":{},"body":{"components/LoginComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/RegisterComponent.html":{},"components/UserProfileComponent.html":{}}}],["valores",{"_index":1064,"title":{},"body":{"components/HomeComponent.html":{}}}],["value",{"_index":81,"title":{},"body":{"injectables/ApiService.html":{},"components/AppComponent.html":{},"components/CategoryComponent.html":{},"components/ConfirmationModalComponent.html":{},"components/GameCardComponent.html":{},"components/GameDetailModalComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/MyLibraryComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/RegisterComponent.html":{},"components/UserProfileComponent.html":{},"miscellaneous/variables.html":{}}}],["van",{"_index":999,"title":{},"body":{"components/GameDetailModalComponent.html":{}}}],["var",{"_index":317,"title":{},"body":{"components/AppComponent.html":{},"components/CategoryComponent.html":{},"components/ConfirmationModalComponent.html":{},"components/FooterComponent.html":{},"components/GameCardComponent.html":{},"components/GameDetailModalComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/MyLibraryComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/RegisterComponent.html":{},"components/UserProfileComponent.html":{}}}],["variable",{"_index":1449,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":1570,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["varios",{"_index":910,"title":{},"body":{"interfaces/Game.html":{},"interfaces/GameAchievement.html":{},"injectables/GameService.html":{}}}],["ver",{"_index":551,"title":{},"body":{"components/CategoryComponent.html":{},"components/GameCardComponent.html":{},"components/HeaderComponent.html":{},"components/MyLibraryComponent.html":{},"components/UserProfileComponent.html":{}}}],["verifica",{"_index":887,"title":{},"body":{"interfaces/Game.html":{},"interfaces/GameAchievement.html":{},"injectables/GameService.html":{}}}],["verificar",{"_index":975,"title":{},"body":{"components/GameDetailModalComponent.html":{}}}],["version",{"_index":1514,"title":{},"body":{"index.html":{},"properties.html":{}}}],["via",{"_index":1544,"title":{},"body":{"index.html":{}}}],["videojuego",{"_index":730,"title":{},"body":{"components/CategoryComponent.html":{},"interfaces/Game.html":{},"interfaces/GameAchievement.html":{},"components/GameDetailModalComponent.html":{},"injectables/GameService.html":{}}}],["videojuegos",{"_index":541,"title":{},"body":{"components/CategoryComponent.html":{},"components/HomeComponent.html":{},"components/MyLibraryComponent.html":{}}}],["viene",{"_index":227,"title":{},"body":{"injectables/ApiService.html":{},"interfaces/RawgAchievementApi.html":{},"interfaces/RawgAchievementsApiResponse.html":{},"interfaces/RawgApiResponse.html":{},"interfaces/RawgGame.html":{}}}],["viewchild",{"_index":616,"title":{},"body":{"components/CategoryComponent.html":{},"components/ConfirmationModalComponent.html":{},"components/GameDetailModalComponent.html":{},"components/MyLibraryComponent.html":{}}}],["viewchild('confirmationmodalelement",{"_index":781,"title":{},"body":{"components/ConfirmationModalComponent.html":{}}}],["viewchild('gamedetailmodalelement",{"_index":996,"title":{},"body":{"components/GameDetailModalComponent.html":{}}}],["viewchild(confirmationmodalcomponent",{"_index":1214,"title":{},"body":{"components/MyLibraryComponent.html":{}}}],["viewchild(gamedetailmodalcomponent",{"_index":609,"title":{},"body":{"components/CategoryComponent.html":{},"components/MyLibraryComponent.html":{}}}],["viewdetails",{"_index":949,"title":{},"body":{"components/GameCardComponent.html":{}}}],["vista",{"_index":789,"title":{},"body":{"components/ConfirmationModalComponent.html":{},"components/GameDetailModalComponent.html":{},"components/MyLibraryComponent.html":{}}}],["visualización",{"_index":1040,"title":{},"body":{"components/HeaderComponent.html":{}}}],["void",{"_index":304,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/CategoryComponent.html":{},"components/ConfirmationModalComponent.html":{},"interfaces/Game.html":{},"interfaces/GameAchievement.html":{},"components/GameDetailModalComponent.html":{},"injectables/GameService.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/MyLibraryComponent.html":{},"components/RecoverPasswordComponent.html":{},"components/RegisterComponent.html":{},"interfaces/User.html":{},"components/UserProfileComponent.html":{}}}],["volver",{"_index":1344,"title":{},"body":{"components/RecoverPasswordComponent.html":{}}}],["vs",{"_index":1042,"title":{},"body":{"components/HeaderComponent.html":{}}}],["vuelve",{"_index":1278,"title":{},"body":{"components/MyLibraryComponent.html":{}}}],["válida",{"_index":1258,"title":{},"body":{"components/MyLibraryComponent.html":{}}}],["wizard",{"_index":1090,"title":{},"body":{"components/HomeComponent.html":{}}}],["y",{"_index":189,"title":{},"body":{"injectables/ApiService.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/CategoryComponent.html":{},"components/ConfirmationModalComponent.html":{},"interfaces/Game.html":{},"interfaces/GameAchievement.html":{},"components/GameCardComponent.html":{},"components/GameDetailModalComponent.html":{},"injectables/GameService.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/MyLibraryComponent.html":{},"interfaces/RawgAchievementApi.html":{},"interfaces/RawgAchievementsApiResponse.html":{},"interfaces/RawgApiResponse.html":{},"interfaces/RawgGame.html":{},"components/RecoverPasswordComponent.html":{},"components/RegisterComponent.html":{},"interfaces/User.html":{},"components/UserProfileComponent.html":{}}}],["ya",{"_index":126,"title":{},"body":{"injectables/ApiService.html":{},"injectables/AuthService.html":{},"interfaces/Game.html":{},"interfaces/GameAchievement.html":{},"injectables/GameService.html":{},"interfaces/RawgAchievementApi.html":{},"interfaces/RawgAchievementsApiResponse.html":{},"interfaces/RawgApiResponse.html":{},"interfaces/RawgGame.html":{},"components/RecoverPasswordComponent.html":{},"components/RegisterComponent.html":{},"interfaces/User.html":{}}}],["zone.js",{"_index":1491,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":362,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"injectables/ApiService.html":{"url":"injectables/ApiService.html","title":"injectable - ApiService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ApiService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/api/api.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                API_KEY\n                            \n                            \n                                    Private\n                                    Readonly\n                                BASE_URL\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getGameAchievements\n                            \n                            \n                                getGameDetails\n                            \n                            \n                                getGames\n                            \n                            \n                                getGenres\n                            \n                            \n                                getPlatforms\n                            \n                            \n                                    Private\n                                mapRawgAchievementToGameAchievement\n                            \n                            \n                                    Private\n                                mapRawgGameToGame\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/api/api.service.ts:47\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getGameAchievements\n                        \n                    \n                \n            \n            \n                \ngetGameAchievements(gameId: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/api/api.service.ts:103\n                        \n                    \n\n\n            \n                \n                        Obtiene la lista de logros para un juego específico por su ID.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                gameId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    El ID del juego en RAWG.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                Un Observable de un array de objetos GameAchievement.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getGameDetails\n                        \n                    \n                \n            \n            \n                \ngetGameDetails(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/api/api.service.ts:87\n                        \n                    \n\n\n            \n                \n                        Obtiene los detalles completos de un juego específico por su ID.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    El ID del juego en RAWG.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                Un Observable de un objeto Game. Incluye la descripción completa si está disponible.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getGames\n                        \n                    \n                \n            \n            \n                \ngetGames(searchQuery: string, genres: string, platforms: string, page_size: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/api/api.service.ts:59\n                        \n                    \n\n\n            \n                \n                        Obtiene una lista de juegos de la API de RAWG.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                searchQuery\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    ''\n                                            \n\n                                            \n                                                    Término de búsqueda para juegos.\n\n                                            \n                                        \n                                        \n                                                genres\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    ''\n                                            \n\n                                            \n                                                    IDs o slugs de géneros (separados por coma).\n\n                                            \n                                        \n                                        \n                                                platforms\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    ''\n                                            \n\n                                            \n                                                    IDs o slugs de plataformas (separados por coma).\n\n                                            \n                                        \n                                        \n                                                page_size\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    20\n                                            \n\n                                            \n                                                    Número de resultados por página.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                Un Observable de un array de objetos Game (transformado desde RawgGame).\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getGenres\n                        \n                    \n                \n            \n            \n                \ngetGenres()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/api/api.service.ts:158\n                        \n                    \n\n\n            \n                \n                        Obtiene la lista de géneros disponibles de la API de RAWG.\n\n\n                        \n                            Returns :     Observable\n\n                        \n                            \n                                Un Observable de un array de strings con los nombres de los géneros.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getPlatforms\n                        \n                    \n                \n            \n            \n                \ngetPlatforms()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/api/api.service.ts:173\n                        \n                    \n\n\n            \n                \n                        Obtiene la lista de plataformas disponibles de la API de RAWG.\n\n\n                        \n                            Returns :     Observable\n\n                        \n                            \n                                Un Observable de un array de strings con los nombres de las plataformas.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        mapRawgAchievementToGameAchievement\n                        \n                    \n                \n            \n            \n                \n                        \n                    mapRawgAchievementToGameAchievement(rawgAchievement: RawgAchievementApi)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/api/api.service.ts:143\n                        \n                    \n\n\n            \n                \n                        Mapea un objeto RawgAchievementApi a la interfaz GameAchievement de nuestra aplicación.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                rawgAchievement\n                                            \n                                                            RawgAchievementApi\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    El objeto de logro de la API.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         GameAchievement\n\n                        \n                            \n                                Un objeto GameAchievement compatible con tu aplicación (con 'completed' en false por defecto).\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        mapRawgGameToGame\n                        \n                    \n                \n            \n            \n                \n                        \n                    mapRawgGameToGame(rawgGame: RawgGame, includeFullDescription: boolean)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/api/api.service.ts:121\n                        \n                    \n\n\n            \n                \n                        Mapea un objeto RawgGame a la interfaz Game de nuestra aplicación.\nEsta función NO mapea los logros, ya que se obtienen de un endpoint separado.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                rawgGame\n                                            \n                                                            RawgGame\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                            \n                                                    El objeto RawgGame de la API.\n\n                                            \n                                        \n                                        \n                                                includeFullDescription\n                                            \n                                                            boolean\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    false\n                                            \n\n                                            \n                                                    Indica si se debe incluir la descripción completa (description_raw).\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Game\n\n                        \n                            \n                                Un objeto Game compatible con tu aplicación.\n\n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        API_KEY\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'e8efc69ecead49639193319812de4f90'\n                    \n                \n                    \n                        \n                                Defined in src/app/core/api/api.service.ts:47\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        BASE_URL\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'https://api.rawg.io/api'\n                    \n                \n                    \n                        \n                                Defined in src/app/core/api/api.service.ts:46\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient, HttpParams } from '@angular/common/http';\nimport { Observable, of } from 'rxjs';\nimport { map, catchError } from 'rxjs/operators';\nimport { Game, GameAchievement } from '../game/game.service';\n\n// Define la estructura de una respuesta de la API de RAWG para la lista de juegos\ninterface RawgApiResponse {\n  count: number;\n  next: string | null;\n  previous: string | null;\n  results: RawgGame[];\n}\n\n// Define la estructura simplificada de un juego de RAWG (ajusta según necesites más campos)\ninterface RawgGame {\n  id: number;\n  name: string;\n  background_image: string;\n  genres: { id: number; name: string; slug: string }[];\n  platforms: { platform: { id: number; name: string; slug: string } }[];\n  released: string;\n  description_raw?: string;\n  achievements_count?: number;\n}\n\n// Interfaz para la respuesta de la API de logros de RAWG\ninterface RawgAchievementsApiResponse {\n  count: number;\n  results: RawgAchievementApi[];\n}\n\n// Interfaz para la estructura de un logro individual de la API de RAWG\ninterface RawgAchievementApi {\n  id: number;\n  name: string;\n  description: string;\n  image: string;\n  percent: string;\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ApiService {\n  private readonly BASE_URL = 'https://api.rawg.io/api';\n  private readonly API_KEY = 'e8efc69ecead49639193319812de4f90';\n\n  constructor(private readonly http: HttpClient) { }\n\n  /**\n   * Obtiene una lista de juegos de la API de RAWG.\n   * @param searchQuery Término de búsqueda para juegos.\n   * @param genres IDs o slugs de géneros (separados por coma).\n   * @param platforms IDs o slugs de plataformas (separados por coma).\n   * @param page_size Número de resultados por página.\n   * @returns Un Observable de un array de objetos Game (transformado desde RawgGame).\n   */\n  getGames(searchQuery: string = '', genres: string = '', platforms: string = '', page_size: number = 20): Observable {\n    let params = new HttpParams().set('key', this.API_KEY).set('page_size', page_size.toString());\n\n    if (searchQuery) {\n      params = params.set('search', searchQuery);\n    }\n    if (genres) {\n      params = params.set('genres', genres);\n    }\n    if (platforms) {\n      params = params.set('platforms', platforms);\n    }\n\n    // Realiza la petición HTTP y mapea la respuesta al formato Game[]\n    return this.http.get(`${this.BASE_URL}/games`, { params }).pipe(\n      map(response => response.results.map(rawgGame => this.mapRawgGameToGame(rawgGame))),\n      catchError(error => {\n        console.error('Error fetching games from RAWG API:', error);\n        return of([]); // Retorna un observable de array vacío en caso de error\n      })\n    );\n  }\n\n  /**\n   * Obtiene los detalles completos de un juego específico por su ID.\n   * @param id El ID del juego en RAWG.\n   * @returns Un Observable de un objeto Game. Incluye la descripción completa si está disponible.\n   */\n  getGameDetails(id: number): Observable {\n    const params = new HttpParams().set('key', this.API_KEY);\n    return this.http.get(`${this.BASE_URL}/games/${id}`, { params }).pipe(\n      map(rawgGame => this.mapRawgGameToGame(rawgGame, true)), // Pasar true para indicar que es un detalle\n      catchError(error => {\n        console.error(`Error fetching details for game ID ${id} from RAWG API:`, error);\n        throw error; // Propaga el error para que el componente lo maneje\n      })\n    );\n  }\n\n  /**\n   * Obtiene la lista de logros para un juego específico por su ID.\n   * @param gameId El ID del juego en RAWG.\n   * @returns Un Observable de un array de objetos GameAchievement.\n   */\n  getGameAchievements(gameId: number): Observable {\n    const params = new HttpParams().set('key', this.API_KEY);\n    return this.http.get(`${this.BASE_URL}/games/${gameId}/achievements`, { params }).pipe(\n      map(response => response.results.map(rawgAchievement => this.mapRawgAchievementToGameAchievement(rawgAchievement))),\n      catchError(error => {\n        console.error(`Error fetching achievements for game ID ${gameId} from RAWG API:`, error);\n        return of([]); // Retorna un observable de array vacío en caso de error\n      })\n    );\n  }\n\n  /**\n   * Mapea un objeto RawgGame a la interfaz Game de nuestra aplicación.\n   * Esta función NO mapea los logros, ya que se obtienen de un endpoint separado.\n   * @param rawgGame El objeto RawgGame de la API.\n   * @param includeFullDescription Indica si se debe incluir la descripción completa (description_raw).\n   * @returns Un objeto Game compatible con tu aplicación.\n   */\n  private mapRawgGameToGame(rawgGame: RawgGame, includeFullDescription: boolean = false): Game {\n    // description_raw solo viene en la respuesta del endpoint de detalle de un juego (/games/{id})\n    const description = rawgGame.description_raw || rawgGame.name;\n    return {\n      id: rawgGame.id,\n      title: rawgGame.name,\n      description: includeFullDescription ? description : description.substring(0, 150) + (description.length > 150 ? '...' : ''),\n      platform: rawgGame.platforms.map(p => p.platform.name).join(', '),\n      genre: rawgGame.genres.map(g => g.name).join(', '),\n      hoursPlayed: 0,\n      image: rawgGame.background_image || 'https://placehold.co/400x250/374151/D1D5DB?text=No+Image',\n      isFavorite: false,\n      played: false,\n      achievements: [] \n    };\n  }\n\n  /**\n   * Mapea un objeto RawgAchievementApi a la interfaz GameAchievement de nuestra aplicación.\n   * @param rawgAchievement El objeto de logro de la API.\n   * @returns Un objeto GameAchievement compatible con tu aplicación (con 'completed' en false por defecto).\n   */\n  private mapRawgAchievementToGameAchievement(rawgAchievement: RawgAchievementApi): GameAchievement {\n    return {\n      id: rawgAchievement.id,\n      name: rawgAchievement.name,\n      description: rawgAchievement.description,\n      image: rawgAchievement.image || 'https://placehold.co/100x100/374151/D1D5DB?text=Ach',\n      percent: rawgAchievement.percent,\n      completed: false\n    };\n  }\n\n  /**\n   * Obtiene la lista de géneros disponibles de la API de RAWG.\n   * @returns Un Observable de un array de strings con los nombres de los géneros.\n   */\n  getGenres(): Observable {\n    const params = new HttpParams().set('key', this.API_KEY);\n    return this.http.get(`${this.BASE_URL}/genres`, { params }).pipe(\n      map(response => response.results.map((genre: any) => genre.name)),\n      catchError(error => {\n        console.error('Error fetching genres from RAWG API:', error);\n        return of([]);\n      })\n    );\n  }\n\n  /**\n   * Obtiene la lista de plataformas disponibles de la API de RAWG.\n   * @returns Un Observable de un array de strings con los nombres de las plataformas.\n   */\n  getPlatforms(): Observable {\n    const params = new HttpParams().set('key', this.API_KEY);\n    return this.http.get(`${this.BASE_URL}/platforms`, { params }).pipe(\n      map(response => response.results.map((platform: any) => platform.name)),\n      catchError(error => {\n        console.error('Error fetching platforms from RAWG API:', error);\n        return of([]);\n      })\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n    \n        Description\n    \n    \n        Componente raíz de la aplicación ReGamesCreative.\nEste componente actúa como el punto de entrada principal, configurando la estructura base (encabezado, contenido principal con router-outlet y pie de página)\ny gestionando la suscripción al estado de autenticación del usuario.\nExample :\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n\n\n            \n                styleUrls\n                ./app.component.css\n            \n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                currentUser\n                            \n                            \n                                title\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService)\n                    \n                \n                        \n                            \n                                Defined in src/app/app.component.ts:22\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/app.component.ts:26\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        currentUser\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'ReGamesCreative-Angular'\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:21\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { AuthService, User } from './core/auth/auth.service';\n\n/**\n * @description \n * Componente raíz de la aplicación ReGamesCreative.\n * @summary\n * Este componente actúa como el punto de entrada principal, configurando la estructura base (encabezado, contenido principal con router-outlet y pie de página)\n * y gestionando la suscripción al estado de autenticación del usuario.\n * @usageNotes\n * ```html\n * \n * ```\n */\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements OnInit{\n  title = 'ReGamesCreative-Angular';\n  currentUser: User | null = null;\n\n  constructor(private readonly authService: AuthService) {}\n\n  ngOnInit(): void {\n    this.authService.currentUser.subscribe(user => {\n      this.currentUser = user;\n    });\n  }\n}\n\n    \n\n    \n        \n\n\n    \n\n\n\n    \n\n    \n                \n                    ./app.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CategoryComponent', 'selector': 'app-category'},{'name': 'ConfirmationModalComponent', 'selector': 'app-confirmation-modal'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'GameCardComponent', 'selector': 'app-game-card'},{'name': 'GameDetailModalComponent', 'selector': 'app-game-detail-modal'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MyLibraryComponent', 'selector': 'app-my-library'},{'name': 'RecoverPasswordComponent', 'selector': 'app-recover-password'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'UserProfileComponent', 'selector': 'app-user-profile'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AppModule_declarations\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nCategoryComponent\n\nCategoryComponent\n\nAppModule -->\n\nCategoryComponent->AppModule\n\n\n\n\n\nConfirmationModalComponent\n\nConfirmationModalComponent\n\nAppModule -->\n\nConfirmationModalComponent->AppModule\n\n\n\n\n\nFooterComponent\n\nFooterComponent\n\nAppModule -->\n\nFooterComponent->AppModule\n\n\n\n\n\nGameCardComponent\n\nGameCardComponent\n\nAppModule -->\n\nGameCardComponent->AppModule\n\n\n\n\n\nGameDetailModalComponent\n\nGameDetailModalComponent\n\nAppModule -->\n\nGameDetailModalComponent->AppModule\n\n\n\n\n\nHeaderComponent\n\nHeaderComponent\n\nAppModule -->\n\nHeaderComponent->AppModule\n\n\n\n\n\nHomeComponent\n\nHomeComponent\n\nAppModule -->\n\nHomeComponent->AppModule\n\n\n\n\n\nLoginComponent\n\nLoginComponent\n\nAppModule -->\n\nLoginComponent->AppModule\n\n\n\n\n\nMyLibraryComponent\n\nMyLibraryComponent\n\nAppModule -->\n\nMyLibraryComponent->AppModule\n\n\n\n\n\nRecoverPasswordComponent\n\nRecoverPasswordComponent\n\nAppModule -->\n\nRecoverPasswordComponent->AppModule\n\n\n\n\n\nRegisterComponent\n\nRegisterComponent\n\nAppModule -->\n\nRegisterComponent->AppModule\n\n\n\n\n\nUserProfileComponent\n\nUserProfileComponent\n\nAppModule -->\n\nUserProfileComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nAuthService\n\nAuthService\n\nAppModule -->\n\nAuthService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AppComponent\n                        \n                        \n                            CategoryComponent\n                        \n                        \n                            ConfirmationModalComponent\n                        \n                        \n                            FooterComponent\n                        \n                        \n                            GameCardComponent\n                        \n                        \n                            GameDetailModalComponent\n                        \n                        \n                            HeaderComponent\n                        \n                        \n                            HomeComponent\n                        \n                        \n                            LoginComponent\n                        \n                        \n                            MyLibraryComponent\n                        \n                        \n                            RecoverPasswordComponent\n                        \n                        \n                            RegisterComponent\n                        \n                        \n                            UserProfileComponent\n                        \n                    \n                \n                \n                    Providers\n                    \n                        \n                            AuthService\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AppRoutingModule\n                        \n                    \n                \n                \n                    Bootstrap\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { HttpClientModule } from '@angular/common/http';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { HeaderComponent } from './shared/header/header.component';\nimport { FooterComponent } from './shared/footer/footer.component';\nimport { GameCardComponent } from './shared/game-card/game-card.component';\nimport { GameDetailModalComponent } from './shared/game-detail-modal/game-detail-modal.component';\nimport { HomeComponent } from './features/home/home.component';\nimport { CategoryComponent } from './features/category/category.component';\nimport { MyLibraryComponent } from './features/my-library/my-library.component';\nimport { LoginComponent } from './features/login/login.component';\nimport { RegisterComponent } from './features/register/register.component';\nimport { UserProfileComponent } from './features/user-profile/user-profile.component';\nimport { RecoverPasswordComponent } from './features/recover-password/recover-password.component';\nimport { AuthService } from './core/auth/auth.service';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { ConfirmationModalComponent } from './shared/confirmation-modal/confirmation-modal.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    HeaderComponent,\n    FooterComponent,\n    GameCardComponent,\n    GameDetailModalComponent,\n    HomeComponent,\n    CategoryComponent,\n    MyLibraryComponent,\n    LoginComponent,\n    RegisterComponent,\n    UserProfileComponent,\n    RecoverPasswordComponent,\n    ConfirmationModalComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    FormsModule,\n    ReactiveFormsModule,\n    HttpClientModule\n  ],\n  providers: [AuthService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppRoutingModule.html":{"url":"modules/AppRoutingModule.html","title":"module - AppRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    AppRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app-routing.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { CategoryComponent } from './features/category/category.component';\nimport { HomeComponent } from './features/home/home.component';\nimport { LoginComponent } from './features/login/login.component';\nimport { MyLibraryComponent } from './features/my-library/my-library.component';\nimport { RecoverPasswordComponent } from './features/recover-password/recover-password.component';\nimport { RegisterComponent } from './features/register/register.component';\nimport { UserProfileComponent } from './features/user-profile/user-profile.component';\nimport { authGuard } from './guards/auth.guard';\n\nconst routes: Routes = [\n\t{ path: '', redirectTo: '/inicio', pathMatch: 'full' },\n\t{ path: 'inicio', component: HomeComponent },\n\t{ path: 'my-librery', component: MyLibraryComponent, canActivate: [authGuard] },\n\t{ path: 'login', component: LoginComponent },\n\t{ path: 'register', component: RegisterComponent },\n\t{ path: 'profile', component: UserProfileComponent, canActivate: [authGuard] },\n\t{ path: 'recover-password', component: RecoverPasswordComponent },\n\t{ path: 'categorias/:categorySlug', component: CategoryComponent },\n\t// Ruta comodín para 404 (redirecciona al inicio)\n\t{ path: '**', redirectTo: '/inicio' }\n];\n\n@NgModule({\n\timports: [RouterModule.forRoot(routes)],\n\texports: [RouterModule]\n})\nexport class AppRoutingModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/auth/auth.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                currentUser\n                            \n                            \n                                    Private\n                                    Readonly\n                                currentUserSubject\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                init\n                            \n                            \n                                login\n                            \n                            \n                                logout\n                            \n                            \n                                register\n                            \n                            \n                                updatePassword\n                            \n                            \n                                updateProfile\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    getCurrentUser\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/core/auth/auth.service.ts:23\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        init\n                        \n                    \n                \n            \n            \n                \n                        \n                    init()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/auth/auth.service.ts:35\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        login\n                        \n                    \n                \n            \n            \n                \nlogin(username: string, password: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/auth/auth.service.ts:56\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                username\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                password\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     literal type\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        logout\n                        \n                    \n                \n            \n            \n                \nlogout()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/auth/auth.service.ts:125\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        register\n                        \n                    \n                \n            \n            \n                \nregister(newUser: User)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/auth/auth.service.ts:69\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                newUser\n                                            \n                                                            User\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     literal type\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updatePassword\n                        \n                    \n                \n            \n            \n                \nupdatePassword(userEmail: string, newPassword: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/auth/auth.service.ts:81\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                userEmail\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                newPassword\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     literal type\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateProfile\n                        \n                    \n                \n            \n            \n                \nupdateProfile(originalUsername: string, newUserData: User)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/auth/auth.service.ts:101\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                originalUsername\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                newUserData\n                                            \n                                                            User\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     literal type\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        currentUser\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Observable\n\n                    \n                \n                    \n                        \n                                Defined in src/app/core/auth/auth.service.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        currentUserSubject\n                        \n                    \n                \n            \n                \n                    \n                        Type :         BehaviorSubject\n\n                    \n                \n                    \n                        \n                                Defined in src/app/core/auth/auth.service.ts:22\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        getCurrentUser\n                    \n                \n\n                \n                    \n                        getgetCurrentUser()\n                    \n                \n                            \n                                \n                                    Defined in src/app/core/auth/auth.service.ts:51\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { BehaviorSubject, Observable } from 'rxjs';\n\n// Claves de almacenamiento\nconst AUTH_STORAGE_KEY = 'my_game_library_users';\nconst CURRENT_USER_KEY = 'my_game_library_currentUser';\nconst USER_GAMES_KEY = 'my_game_library_userGames';\n\nexport interface User {\n\tfullName: string;\n\tusername: string;\n\temail: string;\n\tbirthDay: string;\n\tpassword: string;\n\trole: 'admin' | 'normal';\n}\n\n@Injectable({\n\tprovidedIn: 'root'\n})\nexport class AuthService {\n\tprivate readonly currentUserSubject: BehaviorSubject;\n  \tpublic currentUser: Observable;\n\n\tconstructor() {\n\t\tthis.init();\n\t\tconst storedUser = localStorage.getItem(CURRENT_USER_KEY);\n\t\tthis.currentUserSubject = new BehaviorSubject(\n\t\t\tstoredUser ? JSON.parse(storedUser) : null\n\t\t);\n\t\tthis.currentUser = this.currentUserSubject.asObservable();\n\t}\n\n\t// Inicializa algunos usuarios de prueba\n\tpublic init(): void {\n\t\tif (!localStorage.getItem(AUTH_STORAGE_KEY)) {\n\t\t\tlocalStorage.setItem(AUTH_STORAGE_KEY, JSON.stringify([\n\t\t\t\t{\n\t\t\t\t\tfullName: \"Oscar Sanzana\",\n\t\t\t\t\tusername: 'admin',\n\t\t\t\t\temail: \"oscar.sanzana.97@gmail.com\",\n\t\t\t\t\tbirthDay: \"1997-11-17\",\n\t\t\t\t\tpassword: 'Admin123!',\n\t\t\t\t\trole: 'admin'\n\t\t\t\t}\n\t\t\t]));\n\t\t}\n\t}\n\n\t// Obtener usuario actual\n\tpublic get getCurrentUser(): User | null {\n\t\treturn this.currentUserSubject.value;\n\t}\n\n\t// Iniciar sesión\n  \tlogin(username: string, password: string): { success: boolean; message?: string } {\n\t\tconst users: User[] = JSON.parse(localStorage.getItem(AUTH_STORAGE_KEY) ?? '[]');\n\t\tconst user = users.find(u => u.username === username && u.password === password);\n\t\tif (user) {\n            localStorage.setItem(CURRENT_USER_KEY, JSON.stringify(user));\n\t\t\tthis.currentUserSubject.next(user);\n            return { success: true };\n        }\n\n\t\treturn { success: false, message: 'Nombre de usuario o contraseña incorrectos.' };\n\t}\n\n\t// Registrar usuario\n\tregister(newUser: User): { success: boolean; message?: string } {\n        const users = JSON.parse(localStorage.getItem(AUTH_STORAGE_KEY) ?? '[]');\n        if (users.some((u: { username: string; }) => u.username === newUser.username)) {\n            return { success: false, message: 'El nombre de usuario ya existe.' };\n        }\n        users.push(newUser);\n        localStorage.setItem(AUTH_STORAGE_KEY, JSON.stringify(users));\n\n        return { success: true, message: 'Registro exitoso. ¡Ahora puedes iniciar sesión!' };\n    }\n\n\t// Función para actualizar la contrasena de un usuario\n\tupdatePassword (userEmail: string, newPassword: string): { success: boolean; message?: string } {\n        let users = JSON.parse(localStorage.getItem(AUTH_STORAGE_KEY) ?? '[]');\n        const userIndex = users.findIndex((u: { email: string; }) => u.email === userEmail);\n\n        if (userIndex === -1) {\n            return { success: false, message: 'Usuario no encontrado.' };\n        }\n\n        users[userIndex].password = newPassword;\n        localStorage.setItem(AUTH_STORAGE_KEY, JSON.stringify(users));\n\n\t\tconst currentUser = this.getCurrentUser;\n        if (currentUser && currentUser.email === userEmail) {\n            localStorage.setItem(CURRENT_USER_KEY, JSON.stringify(users[userIndex]));\n        }\n\n        return { success: true, message: 'Contraseña actualizada correctamente. Redirigiendo a Login...' };\n    }\n\n\t// Función para actualizar el perfil de un usuario\n\tupdateProfile(originalUsername: string, newUserData: User): { success: boolean; message?: string } {\n\t\tlet users = JSON.parse(localStorage.getItem(AUTH_STORAGE_KEY) ?? '[]');\n        const userIndex = users.findIndex((u: { username: string; }) => u.username === originalUsername);\n\n\t\tif (userIndex === -1) {\n            return { success: false, message: 'Usuario no encontrado.' };\n        }\n\n\t\t// Si el nuevo nombre de usuario es diferente y ya existe\n        if (newUserData.username && newUserData.username !== originalUsername && users.some((u: { username: string; }) => u.username === newUserData.username)) {\n            return { success: false, message: 'El nuevo nombre de usuario ya está en uso.' };\n        }\n\n\t\tusers[userIndex] = { ...users[userIndex], ...newUserData };\n        localStorage.setItem(AUTH_STORAGE_KEY, JSON.stringify(users));\n\t\t\n\t\tconst currentUser = this.getCurrentUser;\n        if (currentUser && currentUser.username === originalUsername) {\n            localStorage.setItem(CURRENT_USER_KEY, JSON.stringify(users[userIndex]));\n        }\n\n\t\treturn { success: true, message: 'Perfil actualizado correctamente.' };\n\t}\n\n\tlogout(): void {\n        localStorage.removeItem(CURRENT_USER_KEY);\n\t\tthis.currentUserSubject.next(null);\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CategoryComponent.html":{"url":"components/CategoryComponent.html","title":"component - CategoryComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  CategoryComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/features/category/category.component.ts\n\n\n\n    \n        Description\n    \n    \n        Componente para mostrar una lista de videojuegos filtrados por categoría.\nEste componente recupera juegos, géneros y plataformas de la API de RAWG,\npermite la búsqueda y el filtrado, y ofrece funcionalidad para añadir juegos a la\nbiblioteca del usuario y ver detalles en un modal.\nExample :\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n                OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-category\n            \n\n\n\n            \n                styleUrls\n                ./category.component.css\n            \n\n\n\n            \n                templateUrl\n                ./category.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                allGames\n                            \n                            \n                                    Private\n                                authSubscription\n                            \n                            \n                                availableGenres\n                            \n                            \n                                availablePlatforms\n                            \n                            \n                                categoryName\n                            \n                            \n                                categorySlug\n                            \n                            \n                                currentUser\n                            \n                            \n                                error\n                            \n                            \n                                filteredGames\n                            \n                            \n                                    \n                                gameDetailModal\n                            \n                            \n                                message\n                            \n                            \n                                    Private\n                                routeSubscription\n                            \n                            \n                                searchTerm\n                            \n                            \n                                selectedGameForModal\n                            \n                            \n                                selectedGenre\n                            \n                            \n                                selectedPlatform\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                capitalizeFirstLetter\n                            \n                            \n                                extractFilterOptions\n                            \n                            \n                                filterGames\n                            \n                            \n                                handleAddToLibrary\n                            \n                            \n                                loadGamesAndFiltersFromRawg\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                openGameDetailModal\n                            \n                            \n                                resetFilters\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(route: ActivatedRoute, authService: AuthService, gameService: GameService, rawgApiService: ApiService)\n                    \n                \n                        \n                            \n                                Defined in src/app/features/category/category.component.ts:49\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                    ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        gameService\n                                                  \n                                                        \n                                                                        GameService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        rawgApiService\n                                                  \n                                                        \n                                                                        ApiService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        capitalizeFirstLetter\n                        \n                    \n                \n            \n            \n                \n                        \n                    capitalizeFirstLetter(str: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/category/category.component.ts:92\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                str\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        extractFilterOptions\n                        \n                    \n                \n            \n            \n                \nextractFilterOptions()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/category/category.component.ts:123\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        filterGames\n                        \n                    \n                \n            \n            \n                \nfilterGames()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/category/category.component.ts:145\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        handleAddToLibrary\n                        \n                    \n                \n            \n            \n                \nhandleAddToLibrary(game: Game)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/category/category.component.ts:162\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                game\n                                            \n                                                            Game\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loadGamesAndFiltersFromRawg\n                        \n                    \n                \n            \n            \n                \nloadGamesAndFiltersFromRawg(category: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/category/category.component.ts:97\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                category\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/category/category.component.ts:212\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/category/category.component.ts:58\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        openGameDetailModal\n                        \n                    \n                \n            \n            \n                \nopenGameDetailModal(game: Game)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/category/category.component.ts:184\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                game\n                                            \n                                                            Game\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        resetFilters\n                        \n                    \n                \n            \n            \n                \nresetFilters()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/category/category.component.ts:137\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        allGames\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Game[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/features/category/category.component.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        authSubscription\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription\n\n                    \n                \n                    \n                        \n                                Defined in src/app/features/category/category.component.ts:46\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        availableGenres\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/features/category/category.component.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        availablePlatforms\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/features/category/category.component.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        categoryName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/features/category/category.component.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        categorySlug\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/features/category/category.component.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        currentUser\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/features/category/category.component.ts:47\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        error\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/features/category/category.component.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        filteredGames\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Game[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/features/category/category.component.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        gameDetailModal\n                        \n                    \n                \n            \n                \n                    \n                        Type :         GameDetailModalComponent\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild(GameDetailModalComponent)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/features/category/category.component.ts:49\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        message\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/features/category/category.component.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        routeSubscription\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription\n\n                    \n                \n                    \n                        \n                                Defined in src/app/features/category/category.component.ts:45\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        searchTerm\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/features/category/category.component.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectedGameForModal\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Game | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/features/category/category.component.ts:43\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectedGenre\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/features/category/category.component.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectedPlatform\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/features/category/category.component.ts:37\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnDestroy, OnInit, ViewChild } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { catchError, forkJoin, of, Subscription, switchMap } from 'rxjs';\nimport { ApiService } from 'src/app/core/api/api.service';\nimport { User, AuthService } from 'src/app/core/auth/auth.service';\nimport { Game, GameService } from 'src/app/core/game/game.service';\nimport { GameDetailModalComponent } from 'src/app/shared/game-detail-modal/game-detail-modal.component';\n\ndeclare let bootstrap: any;\n\n/**\n * @description \n * Componente para mostrar una lista de videojuegos filtrados por categoría.\n * @summary \n * Este componente recupera juegos, géneros y plataformas de la API de RAWG,\n * permite la búsqueda y el filtrado, y ofrece funcionalidad para añadir juegos a la\n * biblioteca del usuario y ver detalles en un modal.\n * @usageNotes\n * ```html\n * \n * ```\n */\n@Component({\n\tselector: 'app-category',\n\ttemplateUrl: './category.component.html',\n\tstyleUrls: ['./category.component.css']\n})\nexport class CategoryComponent implements OnInit, OnDestroy {\n\tmessage = '';\n\terror = '';\n\tcategoryName: string = '';\n\tcategorySlug: string = '';\n\tallGames: Game[] = [];\n\tfilteredGames: Game[] = [];\n\n\tsearchTerm: string = '';\n\tselectedPlatform: string = '';\n\tselectedGenre: string = '';\n\n\tavailablePlatforms: string[] = [];\n\tavailableGenres: string[] = [];\n\n\tselectedGameForModal: Game | null = null;\n\n\tprivate routeSubscription!: Subscription;\n\tprivate authSubscription!: Subscription;\n\tcurrentUser: User | null = null;\n\n\t@ViewChild(GameDetailModalComponent) gameDetailModal!: GameDetailModalComponent;\n\n\tconstructor(\n\t\tprivate readonly route: ActivatedRoute,\n\t\tprivate readonly authService: AuthService,\n\t\tprivate readonly gameService: GameService,\n\t\tprivate readonly rawgApiService: ApiService\n\t) { }\n\n\tngOnInit(): void {\n\t\tthis.authService.init();\n\t\tthis.authSubscription = this.authService.currentUser.subscribe(user => {\n\t\t\tthis.currentUser = user;\n\t\t});\n\n\t\tthis.routeSubscription = this.route.paramMap.pipe(\n\t\t\tswitchMap(params => {\n\t\t\t\tthis.categorySlug = params.get('categorySlug') ?? '';\n\t\t\t\tthis.categoryName = this.capitalizeFirstLetter(this.categorySlug.replace(/-/g, ' '));\n\t\t\t\tthis.resetFilters();\n\t\t\t\treturn forkJoin({\n\t\t\t\t\tgames: this.rawgApiService.getGames('', this.categorySlug),\n\t\t\t\t\tgenres: this.rawgApiService.getGenres(),\n\t\t\t\t\tplatforms: this.rawgApiService.getPlatforms()\n\t\t\t\t});\n\t\t\t})\n\t\t).subscribe({\n\t\t\tnext: ({ games, genres, platforms }) => {\n\t\t\t\tthis.allGames = games;\n\t\t\t\tthis.availableGenres = genres;\n\t\t\t\tthis.availablePlatforms = platforms;\n\t\t\t\tthis.filterGames();\n\t\t\t},\n\t\t\terror: (err) => {\n\t\t\t\tconsole.error('Error al cargar datos de RAWG API para la categoría:', this.categorySlug, err);\n\t\t\t\tthis.allGames = [];\n\t\t\t\tthis.availableGenres = [];\n\t\t\t\tthis.availablePlatforms = [];\n\t\t\t\talert('Error al cargar videojuegos para esta categoría. Por favor, revisa tu clave API o inténtalo más tarde.');\n\t\t\t}\n\t\t});\n\t}\n\n\tprivate capitalizeFirstLetter(str: string): string {\n\t\tif (!str) return '';\n\t\treturn str.charAt(0).toUpperCase() + str.slice(1);\n\t}\n\n\tloadGamesAndFiltersFromRawg(category: string): void {\n\t\tconst categorySlug = category.toLowerCase().replace(/\\s/g, '-');\n\n\t\t// Usar forkJoin para hacer múltiples llamadas API en paralelo\n\t\tforkJoin({\n\t\t\tgames: this.rawgApiService.getGames('', categorySlug),\n\t\t\tgenres: this.rawgApiService.getGenres(),\n\t\t\tplatforms: this.rawgApiService.getPlatforms()\n\t\t}).subscribe({\n\t\t\tnext: ({ games, genres, platforms }) => {\n\t\t\t\tthis.allGames = games;\n\t\t\t\tthis.availableGenres = genres;\n\t\t\t\tthis.availablePlatforms = platforms;\n\t\t\t\tthis.filterGames();\n\t\t\t},\n\t\t\terror: (err) => {\n\t\t\t\tconsole.error('Error al cargar datos de RAWG API:', err);\n\t\t\t\tthis.allGames = [];\n\t\t\t\tthis.availableGenres = [];\n\t\t\t\tthis.availablePlatforms = [];\n\t\t\t\talert('Error al cargar videojuegos. Por favor, revisa tu clave API o inténtalo más tarde.');\n\t\t\t}\n\t\t});\n\t}\n\n\t// Extrae las opciones únicas de plataforma y género de los juegos cargados\n\textractFilterOptions(): void {\n\t\tconst platforms = new Set();\n\t\tconst genres = new Set();\n\n\t\tthis.allGames.forEach(game => {\n\t\t\tgame.platform.split(',').map(p => p.trim()).forEach(p => platforms.add(p));\n\t\t\tgame.genre.split(',').map(g => g.trim()).forEach(g => genres.add(g));\n\t\t});\n\n\t\tthis.availablePlatforms = Array.from(platforms).sort((a, b) => a.localeCompare(b));\n\t\tthis.availableGenres = Array.from(genres).sort((a, b) => a.localeCompare(b));\n\t}\n\n\t// Restablece los filtros de búsqueda\n\tresetFilters(): void {\n\t\tthis.searchTerm = '';\n\t\tthis.selectedPlatform = '';\n\t\tthis.selectedGenre = '';\n\t\tthis.filterGames();\n\t}\n\n\t// Filtra los juegos basándose en los criterios de búsqueda y selección\n\tfilterGames(): void {\n\t\tconst searchTermLower = this.searchTerm.toLowerCase();\n\t\tconst selectedPlatformLower = this.selectedPlatform.toLowerCase();\n\t\tconst selectedGenreLower = this.selectedGenre.toLowerCase();\n\n\t\tthis.filteredGames = this.allGames.filter(game => {\n\t\t\tconst matchesSearch = game.title.toLowerCase().includes(searchTermLower) ||\n\t\t\t\tgame.description.toLowerCase().includes(searchTermLower);\n\n\t\t\tconst matchesPlatform = selectedPlatformLower === '' || game.platform.toLowerCase().includes(selectedPlatformLower);\n\t\t\tconst matchesGenre = selectedGenreLower === '' || game.genre.toLowerCase().includes(selectedGenreLower);\n\n\t\t\treturn matchesSearch && matchesPlatform && matchesGenre;\n\t\t});\n\t}\n\n\t// Maneja el evento cuando se hace clic en \"Añadir a Mi Biblioteca\"\n\thandleAddToLibrary(game: Game): void {\n\t\tconst currentUser = this.authService.getCurrentUser;\n\t\tif (!currentUser) {\n\t\t\talert('Debes iniciar sesión para añadir juegos a tu biblioteca.');\n\t\t\treturn;\n\t\t}\n\n\t\tthis.rawgApiService.getGameAchievements(game.id).subscribe({\n\t\t\tnext: (achievements) => {\n\t\t\t\tconst gameWithAchievements: Game = { ...game, achievements: achievements };\n\t\t\t\tconst result = this.gameService.addGame(currentUser.username, gameWithAchievements);\n\t\t\t\talert(result.message);\n\t\t\t},\n\t\t\terror: (err) => {\n\t\t\t\tconsole.warn('No se pudieron cargar los logros para el juego:', game.title, err);\n\t\t\t\tconst result = this.gameService.addGame(currentUser.username, game);\n\t\t\t\talert(result.message + ' (Logros no cargados debido a un error de API)');\n\t\t\t}\n\t\t});\n\t}\n\n\t// Abre el modal de detalles del juego y pasa el juego seleccionado\n\topenGameDetailModal(game: Game): void {\n\t\t// Usar forkJoin para obtener los detalles completos del juego Y sus logros en paralelo\n\t\tforkJoin({\n\t\t\tdetails: this.rawgApiService.getGameDetails(game.id),\n\t\t\tachievements: this.rawgApiService.getGameAchievements(game.id).pipe(\n\t\t\t\tcatchError(err => {\n\t\t\t\t\tconsole.error('Error al obtener logros para el juego', game.id, err);\n\t\t\t\t\treturn of([]);\n\t\t\t\t})\n\t\t\t)\n\t\t}).subscribe({\n\t\t\tnext: ({ details, achievements }) => {\n\t\t\t\tthis.selectedGameForModal = { ...details, achievements: achievements };\n\t\t\t\tif (this.gameDetailModal) {\n\t\t\t\t\tthis.gameDetailModal.show();\n\t\t\t\t}\n\t\t\t},\n\t\t\terror: (err) => {\n\t\t\t\tconsole.error('Error al cargar detalles o logros del juego de RAWG API:', err);\n\t\t\t\tthis.selectedGameForModal = game;\n\t\t\t\tif (this.gameDetailModal) {\n\t\t\t\t\tthis.gameDetailModal.show();\n\t\t\t\t}\n\t\t\t\talert('Error al cargar los detalles completos del videojuego o sus logros.');\n\t\t\t}\n\t\t});\n\t}\n\n\tngOnDestroy(): void {\n\t\tif (this.routeSubscription) {\n\t\t\tthis.routeSubscription.unsubscribe();\n\t\t}\n\t\tif (this.authSubscription) {\n\t\t\tthis.authSubscription.unsubscribe();\n\t\t}\n\t}\n}\n\n    \n\n    \n        \n    {{ message }}\n\t{{ error }}\n    Juegos de {{ categoryName }}\n\n    \n        \n            \n        \n        \n            \n                Todas las plataformas\n                {{ platform }}\n            \n        \n        \n            \n                Todos los géneros\n                {{ genre }}\n            \n        \n    \n\n    \n         0; else noGamesFound\">\n            \n                \n            \n        \n        \n            \n                No se encontraron juegos para esta categoría con los filtros aplicados.\n            \n        \n    \n\n\n\n    \n\n    \n                \n                    ./category.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    {{ message }}\t{{ error }}    Juegos de {{ categoryName }}                                                                    Todas las plataformas                {{ platform }}                                                        Todos los géneros                {{ genre }}                                     0; else noGamesFound\">                                                                                    No se encontraron juegos para esta categoría con los filtros aplicados.                        '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CategoryComponent', 'selector': 'app-category'},{'name': 'ConfirmationModalComponent', 'selector': 'app-confirmation-modal'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'GameCardComponent', 'selector': 'app-game-card'},{'name': 'GameDetailModalComponent', 'selector': 'app-game-detail-modal'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MyLibraryComponent', 'selector': 'app-my-library'},{'name': 'RecoverPasswordComponent', 'selector': 'app-recover-password'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'UserProfileComponent', 'selector': 'app-user-profile'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'CategoryComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ConfirmationModalComponent.html":{"url":"components/ConfirmationModalComponent.html","title":"component - ConfirmationModalComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ConfirmationModalComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/confirmation-modal/confirmation-modal.component.ts\n\n\n\n    \n        Description\n    \n    \n        Componente reutilizable para mostrar un modal de confirmación genérico.\nPermite configurar el título, el mensaje y el texto del botón de confirmación.\nEmite un evento cuando el usuario confirma o cancela la acción.\nExample :\n\n    \n\n\n    \n        Implements\n    \n    \n                AfterViewInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-confirmation-modal\n            \n\n\n\n            \n                styleUrls\n                ./confirmation-modal.component.css\n            \n\n\n\n            \n                templateUrl\n                ./confirmation-modal.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                bsModal\n                            \n                            \n                                    \n                                modalElementRef\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                hide\n                            \n                            \n                                ngAfterViewInit\n                            \n                            \n                                onCancel\n                            \n                            \n                                onConfirm\n                            \n                            \n                                show\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                confirmButtonText\n                            \n                            \n                                message\n                            \n                            \n                                title\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                confirmed\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/confirmation-modal/confirmation-modal.component.ts:35\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        confirmButtonText\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'Confirmar'\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/confirmation-modal/confirmation-modal.component.ts:30\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        message\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '¿Estás seguro de esta acción?'\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/confirmation-modal/confirmation-modal.component.ts:29\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        title\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'Confirmación'\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/confirmation-modal/confirmation-modal.component.ts:28\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        confirmed\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/confirmation-modal/confirmation-modal.component.ts:32\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        hide\n                        \n                    \n                \n            \n            \n                \nhide()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/confirmation-modal/confirmation-modal.component.ts:62\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngAfterViewInit\n                        \n                    \n                \n            \n            \n                \nngAfterViewInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/confirmation-modal/confirmation-modal.component.ts:39\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onCancel\n                        \n                    \n                \n            \n            \n                \nonCancel()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/confirmation-modal/confirmation-modal.component.ts:75\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onConfirm\n                        \n                    \n                \n            \n            \n                \nonConfirm()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/confirmation-modal/confirmation-modal.component.ts:69\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        show\n                        \n                    \n                \n            \n            \n                \nshow()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/confirmation-modal/confirmation-modal.component.ts:55\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        bsModal\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/confirmation-modal/confirmation-modal.component.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        modalElementRef\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ElementRef\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild('confirmationModalElement')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/shared/confirmation-modal/confirmation-modal.component.ts:34\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { AfterViewInit, Component, ElementRef, EventEmitter, Input, Output, ViewChild } from '@angular/core';\n\n// Importa la función Modal de Bootstrap\ndeclare let bootstrap: any;\n\n/**\n * @description \n * Componente reutilizable para mostrar un modal de confirmación genérico.\n * @summary \n * Permite configurar el título, el mensaje y el texto del botón de confirmación.\n * Emite un evento cuando el usuario confirma o cancela la acción.\n * @usageNotes\n * ```html\n * \n * \n * ```\n */\n@Component({\n\tselector: 'app-confirmation-modal',\n\ttemplateUrl: './confirmation-modal.component.html',\n\tstyleUrls: ['./confirmation-modal.component.css']\n})\nexport class ConfirmationModalComponent implements AfterViewInit {\n\t@Input() title: string = 'Confirmación';\n\t@Input() message: string = '¿Estás seguro de esta acción?';\n\t@Input() confirmButtonText: string = 'Confirmar';\n\n\t@Output() confirmed = new EventEmitter();\n\n\t@ViewChild('confirmationModalElement') modalElementRef!: ElementRef;\n\tprivate bsModal: any;\n\n\tconstructor() { }\n\n\tngAfterViewInit(): void {\n\t\t// Inicializar la instancia del modal de Bootstrap después de que la vista se haya inicializado\n\t\tif (this.modalElementRef?.nativeElement) {\n\t\t\tthis.bsModal = new bootstrap.Modal(this.modalElementRef.nativeElement);\n\n\t\t\t// Listener para cuando el modal se oculta (se cierra)\n\t\t\tthis.modalElementRef.nativeElement.addEventListener('hidden.bs.modal', () => {\n\t\t\t\tconst backdrop = document.querySelector('.modal-backdrop');\n\t\t\t\tif (backdrop) {\n\t\t\t\t   backdrop.remove();\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t}\n\n\t// Muestra el modal\n\tshow(): void {\n\t\tif (this.bsModal) {\n\t\t\tthis.bsModal.show();\n\t\t}\n\t}\n\n\t// Oculta el modal\n\thide(): void {\n\t\tif (this.bsModal) {\n\t\t\tthis.bsModal.hide();\n\t\t}\n\t}\n\n\t// Se llama cuando el usuario hace clic en el botón de confirmar\n\tonConfirm(): void {\n\t\tthis.confirmed.emit(true);\n\t\tthis.hide();\n\t}\n\n\t// Se llama cuando el usuario hace clic en el botón de cancelar o en el botón de cerrar\n\tonCancel(): void {\n\t\tthis.confirmed.emit(false);\n\t\tthis.hide();\n\t}\n\n}\n\n    \n\n    \n        \n    \n        \n            \n                {{ title }}\n                \n            \n            \n                {{ message }}\n            \n            \n                Cancelar\n                {{ confirmButtonText }}\n            \n        \n    \n\n    \n\n    \n                \n                    ./confirmation-modal.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                        {{ title }}                                                        {{ message }}                                        Cancelar                {{ confirmButtonText }}                        '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CategoryComponent', 'selector': 'app-category'},{'name': 'ConfirmationModalComponent', 'selector': 'app-confirmation-modal'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'GameCardComponent', 'selector': 'app-game-card'},{'name': 'GameDetailModalComponent', 'selector': 'app-game-detail-modal'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MyLibraryComponent', 'selector': 'app-my-library'},{'name': 'RecoverPasswordComponent', 'selector': 'app-recover-password'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'UserProfileComponent', 'selector': 'app-user-profile'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ConfirmationModalComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/FooterComponent.html":{"url":"components/FooterComponent.html","title":"component - FooterComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  FooterComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/footer/footer.component.ts\n\n\n\n    \n        Description\n    \n    \n        Componente para el pie de página de la aplicación.\nContiene información de copyright.\nExample :\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-footer\n            \n\n\n\n            \n                styleUrls\n                ./footer.component.css\n            \n\n\n\n            \n                templateUrl\n                ./footer.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n/**\n * @description \n * Componente para el pie de página de la aplicación.\n * @summary \n * Contiene información de copyright.\n * @usageNotes\n * ```html\n * \n * ```\n */\n@Component({\n  selector: 'app-footer',\n  templateUrl: './footer.component.html',\n  styleUrls: ['./footer.component.css']\n})\nexport class FooterComponent {\n\n}\n\n    \n\n    \n        \n    \n        &copy; 2025 ReGames. Todos los derechos reservados.\n    \n\n\n    \n\n    \n                \n                    ./footer.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            © 2025 ReGames. Todos los derechos reservados.    '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CategoryComponent', 'selector': 'app-category'},{'name': 'ConfirmationModalComponent', 'selector': 'app-confirmation-modal'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'GameCardComponent', 'selector': 'app-game-card'},{'name': 'GameDetailModalComponent', 'selector': 'app-game-detail-modal'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MyLibraryComponent', 'selector': 'app-my-library'},{'name': 'RecoverPasswordComponent', 'selector': 'app-recover-password'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'UserProfileComponent', 'selector': 'app-user-profile'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'FooterComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Game.html":{"url":"interfaces/Game.html","title":"interface - Game","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Game\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/game/game.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Representa un videojuego en la aplicación, incluyendo detalles y logros.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            achievements\n                                        \n                                \n                                \n                                        \n                                            description\n                                        \n                                \n                                \n                                        \n                                            genre\n                                        \n                                \n                                \n                                        \n                                            hoursPlayed\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            image\n                                        \n                                \n                                \n                                        \n                                            isFavorite\n                                        \n                                \n                                \n                                        \n                                            platform\n                                        \n                                \n                                \n                                        \n                                            played\n                                        \n                                \n                                \n                                        \n                                            title\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        achievements\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        achievements:     GameAchievement[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     GameAchievement[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        description:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        genre\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        genre:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        hoursPlayed\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        hoursPlayed:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        image\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        image:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        isFavorite\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        isFavorite:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        platform\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        platform:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        played\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        played:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        title:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@angular/core';\nconst USER_GAMES_KEY = 'my_game_library_userGames';\n/**\n * @description \n * Define la estructura de datos para un videojuego y el servicio para gestionar la biblioteca de juegos del usuario.\n * @summary \n * Proporciona interfaces para `Achievement` y `Game`, y el `GameService` para operaciones CRUD\n * (añadir, obtener, actualizar, eliminar) sobre los juegos en la biblioteca local del usuario.\n */\n\n/**\n * @interface GameAchievement\n * @description \n * Representa un logro individual de un videojuego.\n * @property {number} id El ID del logro.\n * @property {string} name El nombre del logro.\n * @property {string} description La descripción del logro.\n * @property {string} image La imagen del logro.\n * @property {string} percent El procentaje del logro\n * @property {boolean} completed Indica si el logro ha sido completado por el usuario.\n */\nexport interface GameAchievement {\n\tid: number;\n\tname: string;\n\tdescription: string;\n\timage: string;\n\tpercent: string;\n\tcompleted: boolean;\n}\n\n/**\n * @interface Game\n * @description \n * Representa un videojuego en la aplicación, incluyendo detalles y logros.\n * @property {number} id El identificador único del juego (ID de RAWG).\n * @property {string} title El título del videojuego.\n * @property {string} image La URL de la imagen de portada del juego.\n * @property {string} description La descripción detallada del juego.\n * @property {string} platform Las plataformas en las que está disponible el juego.\n * @property {string} genre Los géneros a los que pertenece el juego.\n * @property {number} hoursPlayed El número de horas que el usuario ha jugado a este juego.\n * @property {boolean} played Indica si el usuario ha marcado el juego como \"jugado\".\n * @property {boolean} isFavorite Indica si el usuario ha marcado el juego como favorito.\n * @property {GameAchievement[]} [achievements] Un array opcional de logros asociados al juego.\n */\nexport interface Game {\n\tid: number;\n\ttitle: string;\n\tdescription: string;\n\tplatform: string;\n\tgenre: string;\n\thoursPlayed: number;\n\timage: string;\n\tisFavorite: boolean;\n\tplayed: boolean;\n\tachievements: GameAchievement[];\n}\n\n/**\n * @class GameService\n * @description\n * Servicio que gestiona las operaciones de la biblioteca de juegos de los usuarios,\n * persistiendo los datos en el almacenamiento local (localStorage).\n * @summary Ofrece métodos para añadir, obtener, actualizar y eliminar juegos de la biblioteca\n * de un usuario específico, manteniendo la integridad de los datos de la biblioteca.\n * @usageNotes\n * Inyecta este servicio en tus componentes o servicios que necesiten interactuar con la biblioteca de juegos:\n * ```typescript\n * constructor(private gameService: GameService) { }\n * // Para obtener juegos:\n * const userGames = this.gameService.getUserGames('nombreUsuario');\n * // Para añadir un juego:\n * this.gameService.addGame('nombreUsuario', newGame);\n * ```\n */\n@Injectable({\n\tprovidedIn: 'root'\n})\nexport class GameService {\n\n\tconstructor() { }\n\n\t// Obtiene todos los juegos para un usuario específico\n\tgetUserGames(username: string): Game[] {\n\t\tconst allUserGames: { [key: string]: Game[] } = JSON.parse(localStorage.getItem(USER_GAMES_KEY) ?? '{}');\n\t\treturn allUserGames[username] ?? [];\n\t}\n\n\t// Guardar todos los juegos para un usuario específico\n\tprivate _saveUserGames(username: string, games: Game[]): void {\n\t\tconst allUserGames: { [key: string]: Game[] } = JSON.parse(localStorage.getItem(USER_GAMES_KEY) ?? '{}');\n\t\tallUserGames[username] = games;\n\t\tlocalStorage.setItem(USER_GAMES_KEY, JSON.stringify(allUserGames));\n\t}\n\t// Añadir un nuevo juego a la biblioteca de un usuario\n\taddGame(username: string, gameData: Partial): { success: boolean, message: string, game?: Game } {\n\t\tconst userGames = this.getUserGames(username);\n\t\tconst newGameId = gameData.id ?? Date.now();\n\n\t\t// Verifica si el juego ya existe en la biblioteca del usuario (por título y plataforma)\n\t\tconst alreadyExists = userGames.some(game =>\n\t\t\tgame.title === gameData.title && game.platform === gameData.platform\n\t\t);\n\n\t\tif (alreadyExists) {\n\t\t\treturn { success: false, message: 'El juego ya está en tu biblioteca.' };\n\t\t}\n\n\t\tlet initialAchievements: GameAchievement[] = [];\n\t\tif (gameData.achievements && gameData.achievements.length > 0) {\n\t\t\tinitialAchievements = gameData.achievements.map(ach => ({ ...ach, completed: false }));\n\t\t} else {\n\t\t\tinitialAchievements = [\n\t\t\t\t{ id: 101, name: \"Completar Tutorial\", description: \"Completa el tutorial del juego.\", image: \"\", percent: \"0%\", completed: false },\n\t\t\t\t{ id: 102, name: \"Derrotar Primer Jefe\", description: \"Derrota al primer jefe del juego.\", image: \"\", percent: \"0%\", completed: false }\n\t\t\t];\n\t\t}\n\n\t\tconst newGame: Game = {\n\t\t\tid: newGameId,\n\t\t\ttitle: gameData.title ?? 'Juego sin título',\n\t\t\tdescription: gameData.description ?? '',\n\t\t\tplatform: gameData.platform ?? 'Desconocida',\n\t\t\tgenre: gameData.genre ?? 'Varios',\n\t\t\thoursPlayed: gameData.hoursPlayed ?? 0,\n\t\t\timage: gameData.image ?? 'https://placehold.co/400x250/374151/D1D5DB?text=No+Image',\n\t\t\tisFavorite: false,\n\t\t\tplayed: false,\n\t\t\tachievements: initialAchievements\n\t\t};\n\n\t\tuserGames.push(newGame);\n\t\tthis._saveUserGames(username, userGames);\n\t\treturn { success: true, message: `\"${newGame.title}\" añadido correctamente.`, game: newGame };\n\t}\n\n\t// Actualiza un juego existente en la biblioteca de un usuario\n\tupdateGame(username: string, updatedGame: Game): void {\n\t\tlet userGames = this.getUserGames(username);\n\t\tuserGames = userGames.map(game =>\n\t\t\tgame.id === updatedGame.id ? { ...game, ...updatedGame } : game\n\t\t);\n\t\tthis._saveUserGames(username, userGames);\n\t}\n\n\t// Elimina un juego de la biblioteca de un usuario\n\tdeleteGame(username: string, gameId: number): void {\n\t\tlet userGames = this.getUserGames(username);\n\t\tuserGames = userGames.filter(game => game.id !== gameId);\n\t\tthis._saveUserGames(username, userGames);\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/GameAchievement.html":{"url":"interfaces/GameAchievement.html","title":"interface - GameAchievement","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  GameAchievement\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/game/game.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Representa un logro individual de un videojuego.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            completed\n                                        \n                                \n                                \n                                        \n                                            description\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            image\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            percent\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        completed\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        completed:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        description:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        image\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        image:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        percent\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        percent:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@angular/core';\nconst USER_GAMES_KEY = 'my_game_library_userGames';\n/**\n * @description \n * Define la estructura de datos para un videojuego y el servicio para gestionar la biblioteca de juegos del usuario.\n * @summary \n * Proporciona interfaces para `Achievement` y `Game`, y el `GameService` para operaciones CRUD\n * (añadir, obtener, actualizar, eliminar) sobre los juegos en la biblioteca local del usuario.\n */\n\n/**\n * @interface GameAchievement\n * @description \n * Representa un logro individual de un videojuego.\n * @property {number} id El ID del logro.\n * @property {string} name El nombre del logro.\n * @property {string} description La descripción del logro.\n * @property {string} image La imagen del logro.\n * @property {string} percent El procentaje del logro\n * @property {boolean} completed Indica si el logro ha sido completado por el usuario.\n */\nexport interface GameAchievement {\n\tid: number;\n\tname: string;\n\tdescription: string;\n\timage: string;\n\tpercent: string;\n\tcompleted: boolean;\n}\n\n/**\n * @interface Game\n * @description \n * Representa un videojuego en la aplicación, incluyendo detalles y logros.\n * @property {number} id El identificador único del juego (ID de RAWG).\n * @property {string} title El título del videojuego.\n * @property {string} image La URL de la imagen de portada del juego.\n * @property {string} description La descripción detallada del juego.\n * @property {string} platform Las plataformas en las que está disponible el juego.\n * @property {string} genre Los géneros a los que pertenece el juego.\n * @property {number} hoursPlayed El número de horas que el usuario ha jugado a este juego.\n * @property {boolean} played Indica si el usuario ha marcado el juego como \"jugado\".\n * @property {boolean} isFavorite Indica si el usuario ha marcado el juego como favorito.\n * @property {GameAchievement[]} [achievements] Un array opcional de logros asociados al juego.\n */\nexport interface Game {\n\tid: number;\n\ttitle: string;\n\tdescription: string;\n\tplatform: string;\n\tgenre: string;\n\thoursPlayed: number;\n\timage: string;\n\tisFavorite: boolean;\n\tplayed: boolean;\n\tachievements: GameAchievement[];\n}\n\n/**\n * @class GameService\n * @description\n * Servicio que gestiona las operaciones de la biblioteca de juegos de los usuarios,\n * persistiendo los datos en el almacenamiento local (localStorage).\n * @summary Ofrece métodos para añadir, obtener, actualizar y eliminar juegos de la biblioteca\n * de un usuario específico, manteniendo la integridad de los datos de la biblioteca.\n * @usageNotes\n * Inyecta este servicio en tus componentes o servicios que necesiten interactuar con la biblioteca de juegos:\n * ```typescript\n * constructor(private gameService: GameService) { }\n * // Para obtener juegos:\n * const userGames = this.gameService.getUserGames('nombreUsuario');\n * // Para añadir un juego:\n * this.gameService.addGame('nombreUsuario', newGame);\n * ```\n */\n@Injectable({\n\tprovidedIn: 'root'\n})\nexport class GameService {\n\n\tconstructor() { }\n\n\t// Obtiene todos los juegos para un usuario específico\n\tgetUserGames(username: string): Game[] {\n\t\tconst allUserGames: { [key: string]: Game[] } = JSON.parse(localStorage.getItem(USER_GAMES_KEY) ?? '{}');\n\t\treturn allUserGames[username] ?? [];\n\t}\n\n\t// Guardar todos los juegos para un usuario específico\n\tprivate _saveUserGames(username: string, games: Game[]): void {\n\t\tconst allUserGames: { [key: string]: Game[] } = JSON.parse(localStorage.getItem(USER_GAMES_KEY) ?? '{}');\n\t\tallUserGames[username] = games;\n\t\tlocalStorage.setItem(USER_GAMES_KEY, JSON.stringify(allUserGames));\n\t}\n\t// Añadir un nuevo juego a la biblioteca de un usuario\n\taddGame(username: string, gameData: Partial): { success: boolean, message: string, game?: Game } {\n\t\tconst userGames = this.getUserGames(username);\n\t\tconst newGameId = gameData.id ?? Date.now();\n\n\t\t// Verifica si el juego ya existe en la biblioteca del usuario (por título y plataforma)\n\t\tconst alreadyExists = userGames.some(game =>\n\t\t\tgame.title === gameData.title && game.platform === gameData.platform\n\t\t);\n\n\t\tif (alreadyExists) {\n\t\t\treturn { success: false, message: 'El juego ya está en tu biblioteca.' };\n\t\t}\n\n\t\tlet initialAchievements: GameAchievement[] = [];\n\t\tif (gameData.achievements && gameData.achievements.length > 0) {\n\t\t\tinitialAchievements = gameData.achievements.map(ach => ({ ...ach, completed: false }));\n\t\t} else {\n\t\t\tinitialAchievements = [\n\t\t\t\t{ id: 101, name: \"Completar Tutorial\", description: \"Completa el tutorial del juego.\", image: \"\", percent: \"0%\", completed: false },\n\t\t\t\t{ id: 102, name: \"Derrotar Primer Jefe\", description: \"Derrota al primer jefe del juego.\", image: \"\", percent: \"0%\", completed: false }\n\t\t\t];\n\t\t}\n\n\t\tconst newGame: Game = {\n\t\t\tid: newGameId,\n\t\t\ttitle: gameData.title ?? 'Juego sin título',\n\t\t\tdescription: gameData.description ?? '',\n\t\t\tplatform: gameData.platform ?? 'Desconocida',\n\t\t\tgenre: gameData.genre ?? 'Varios',\n\t\t\thoursPlayed: gameData.hoursPlayed ?? 0,\n\t\t\timage: gameData.image ?? 'https://placehold.co/400x250/374151/D1D5DB?text=No+Image',\n\t\t\tisFavorite: false,\n\t\t\tplayed: false,\n\t\t\tachievements: initialAchievements\n\t\t};\n\n\t\tuserGames.push(newGame);\n\t\tthis._saveUserGames(username, userGames);\n\t\treturn { success: true, message: `\"${newGame.title}\" añadido correctamente.`, game: newGame };\n\t}\n\n\t// Actualiza un juego existente en la biblioteca de un usuario\n\tupdateGame(username: string, updatedGame: Game): void {\n\t\tlet userGames = this.getUserGames(username);\n\t\tuserGames = userGames.map(game =>\n\t\t\tgame.id === updatedGame.id ? { ...game, ...updatedGame } : game\n\t\t);\n\t\tthis._saveUserGames(username, userGames);\n\t}\n\n\t// Elimina un juego de la biblioteca de un usuario\n\tdeleteGame(username: string, gameId: number): void {\n\t\tlet userGames = this.getUserGames(username);\n\t\tuserGames = userGames.filter(game => game.id !== gameId);\n\t\tthis._saveUserGames(username, userGames);\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/GameCardComponent.html":{"url":"components/GameCardComponent.html","title":"component - GameCardComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  GameCardComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/game-card/game-card.component.ts\n\n\n\n    \n        Description\n    \n    \n        Componente para mostrar una tarjeta de juego individual.\nUtilizado en las páginas de categorías y en la biblioteca personal,\nmuestra información del juego y proporciona botones de acción que emiten eventos al componente padre.\nPuede mostrar controles adicionales si se usa en la biblioteca personal.\nExample :\n\n\n\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-game-card\n            \n\n\n\n            \n                styleUrls\n                ./game-card.component.css\n            \n\n\n\n            \n                templateUrl\n                ./game-card.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                game\n                            \n                            \n                                showLibraryControls\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                addGameToLibrary\n                            \n                            \n                                deleteGame\n                            \n                            \n                                toggleFavorite\n                            \n                            \n                                togglePlayed\n                            \n                            \n                                updateHours\n                            \n                            \n                                viewDetails\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/game-card/game-card.component.ts:34\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        game\n                    \n                \n                \n                    \n                        Type :         Game\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/game-card/game-card.component.ts:26\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        showLibraryControls\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/game-card/game-card.component.ts:27\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        addGameToLibrary\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/game-card/game-card.component.ts:29\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        deleteGame\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/game-card/game-card.component.ts:34\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        toggleFavorite\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/game-card/game-card.component.ts:31\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        togglePlayed\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/game-card/game-card.component.ts:32\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        updateHours\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/game-card/game-card.component.ts:33\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        viewDetails\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/game-card/game-card.component.ts:30\n                            \n                        \n            \n        \n\n\n\n\n\n\n\n\n    \n        import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { Game } from 'src/app/core/game/game.service';\n\n/**\n * @description \n * Componente para mostrar una tarjeta de juego individual.\n * @summary \n * Utilizado en las páginas de categorías y en la biblioteca personal,\n * muestra información del juego y proporciona botones de acción que emiten eventos al componente padre.\n * Puede mostrar controles adicionales si se usa en la biblioteca personal.\n * @usageNotes\n * ```html\n * \n * \n *\n * \n * \n * ```\n */\n@Component({\n\tselector: 'app-game-card',\n\ttemplateUrl: './game-card.component.html',\n\tstyleUrls: ['./game-card.component.css']\n})\nexport class GameCardComponent {\n\t@Input() game!: Game;\n\t@Input() showLibraryControls: boolean = false;\n\n\t@Output() addGameToLibrary = new EventEmitter();\n\t@Output() viewDetails = new EventEmitter();\n\t@Output() toggleFavorite = new EventEmitter();\n\t@Output() togglePlayed = new EventEmitter();\n\t@Output() updateHours = new EventEmitter();\n\t@Output() deleteGame = new EventEmitter();\n\n\tconstructor() { }\n\n}\n\n    \n\n    \n        \n    \n    \n        {{ game.title }}\n        Plataforma: {{ game.platform }} | Género: {{ game.genre }}\n        {{ game.description.substring(0, 100) }}{{ game.description.length > 100 ? '...' : '' }}\n        Horas de juego: {{ game.hoursPlayed }}h\n\n        \n            {{ game.played ? 'Jugado' : 'Pendiente' }}\n            \n                 {{ game.isFavorite ? 'Favorito' : 'Añadir a Fav.' }}\n            \n        \n        \n            Ver Detalles\n            {{ game.played ? 'Marcar Pend.' : 'Marcar Jugado' }}\n             Horas\n            \n        \n        \n            Ver Detalles\n            \n                 Añadir a Mi Biblioteca\n            \n        \n        \n    \n\n    \n\n    \n                \n                    ./game-card.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                {{ game.title }}        Plataforma: {{ game.platform }} | Género: {{ game.genre }}        {{ game.description.substring(0, 100) }}{{ game.description.length > 100 ? \\'...\\' : \\'\\' }}        Horas de juego: {{ game.hoursPlayed }}h                    {{ game.played ? \\'Jugado\\' : \\'Pendiente\\' }}                             {{ game.isFavorite ? \\'Favorito\\' : \\'Añadir a Fav.\\' }}                                        Ver Detalles            {{ game.played ? \\'Marcar Pend.\\' : \\'Marcar Jugado\\' }}             Horas                                        Ver Detalles                             Añadir a Mi Biblioteca                                '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CategoryComponent', 'selector': 'app-category'},{'name': 'ConfirmationModalComponent', 'selector': 'app-confirmation-modal'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'GameCardComponent', 'selector': 'app-game-card'},{'name': 'GameDetailModalComponent', 'selector': 'app-game-detail-modal'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MyLibraryComponent', 'selector': 'app-my-library'},{'name': 'RecoverPasswordComponent', 'selector': 'app-recover-password'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'UserProfileComponent', 'selector': 'app-user-profile'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'GameCardComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/GameDetailModalComponent.html":{"url":"components/GameDetailModalComponent.html","title":"component - GameDetailModalComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  GameDetailModalComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/game-detail-modal/game-detail-modal.component.ts\n\n\n\n    \n        Description\n    \n    \n        Componente para mostrar un modal con los detalles completos de un videojuego.\nMuestra el título, descripción, plataforma, género, horas de juego y una lista de logros.\nPermite interactuar con el estado de los logros (marcar/desmarcar).\nExample :\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-game-detail-modal\n            \n\n\n\n            \n                styleUrls\n                ./game-detail-modal.component.css\n            \n\n\n\n            \n                templateUrl\n                ./game-detail-modal.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                bsModal\n                            \n                            \n                                error\n                            \n                            \n                                message\n                            \n                            \n                                    \n                                modalElementRef\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                hide\n                            \n                            \n                                ngAfterViewInit\n                            \n                            \n                                onAchievementChange\n                            \n                            \n                                show\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                game\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                achievementUpdated\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(gameService: GameService, authService: AuthService)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/game-detail-modal/game-detail-modal.component.ts:46\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        gameService\n                                                  \n                                                        \n                                                                        GameService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Servicio para gestionar los juegos y sus logros en la biblioteca del usuario.\n\n                                                        \n                                                \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Servicio de autenticación para verificar el usuario actual antes de guardar cambios.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        game\n                    \n                \n                \n                    \n                        Type :         Game | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/game-detail-modal/game-detail-modal.component.ts:31\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        achievementUpdated\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/game-detail-modal/game-detail-modal.component.ts:38\n                            \n                        \n                \n                    \n                        cuando se actualiza un logro.\n\n                    \n                \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        hide\n                        \n                    \n                \n            \n            \n                \nhide()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/game-detail-modal/game-detail-modal.component.ts:95\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngAfterViewInit\n                        \n                    \n                \n            \n            \n                \nngAfterViewInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/game-detail-modal/game-detail-modal.component.ts:64\n                        \n                    \n\n\n            \n                \n                        Inicializa la instancia del modal de Bootstrap y añade un listener para limpiar el estado del\njuego seleccionado y el backdrop cuando el modal se oculta.\n\n\n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onAchievementChange\n                        \n                    \n                \n            \n            \n                \nonAchievementChange(gameId: number, achievementIndex: number, event: Event)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/game-detail-modal/game-detail-modal.component.ts:110\n                        \n                    \n\n\n            \n                \n                        Actualiza el estado del logro en el GameService si el usuario está autenticado.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                gameId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    El ID del juego al que pertenece el logro.\n\n                                            \n                                        \n                                        \n                                                achievementIndex\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    El índice del logro dentro del array de logros del juego.\n\n                                            \n                                        \n                                        \n                                                event\n                                            \n                                                        Event\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    El evento de cambio del checkbox.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        show\n                        \n                    \n                \n            \n            \n                \nshow()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/game-detail-modal/game-detail-modal.component.ts:84\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        bsModal\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/game-detail-modal/game-detail-modal.component.ts:46\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        error\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/game-detail-modal/game-detail-modal.component.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        message\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/game-detail-modal/game-detail-modal.component.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        modalElementRef\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ElementRef\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild('gameDetailModalElement')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/shared/game-detail-modal/game-detail-modal.component.ts:44\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, ElementRef, EventEmitter, Input, Output, ViewChild } from '@angular/core';\nimport { AuthService } from 'src/app/core/auth/auth.service';\nimport { Game, GameService } from 'src/app/core/game/game.service';\n\ndeclare let bootstrap: any;\n\n/**\n * @description \n * Componente para mostrar un modal con los detalles completos de un videojuego.\n * @summary \n * Muestra el título, descripción, plataforma, género, horas de juego y una lista de logros.\n * Permite interactuar con el estado de los logros (marcar/desmarcar).\n * @usageNotes\n * ```html\n * \n * ```\n */\n@Component({\n\tselector: 'app-game-detail-modal',\n\ttemplateUrl: './game-detail-modal.component.html',\n\tstyleUrls: ['./game-detail-modal.component.css']\n})\nexport class GameDetailModalComponent {\n\tmessage = '';\n\terror = '';\n\n\t/**\n\t * @public\n\t * @description El objeto Game cuyos detalles se van a mostrar en el modal.\n\t */\n\t@Input() game: Game | null = null;\n\n\t/**\n\t * @public\n\t * @description Emite un objeto con el ID del juego, el índice del logro y el nuevo estado de completado\n\t * cuando se actualiza un logro.\n\t */\n\t@Output() achievementUpdated = new EventEmitter();\n\n\t/**\n\t * @public\n\t * @description Referencia al elemento nativo del modal en el DOM.\n\t */\n\t@ViewChild('gameDetailModalElement') modalElementRef!: ElementRef;\n\t\n\tprivate bsModal: any;\n\n\t/**\n\t * @param gameService Servicio para gestionar los juegos y sus logros en la biblioteca del usuario.\n\t * @param authService Servicio de autenticación para verificar el usuario actual antes de guardar cambios.\n\t */\n\tconstructor(\n\t\tprivate readonly gameService: GameService,\n\t\tprivate readonly authService: AuthService\n\t) { }\n\n\t/**\n\t * @lifecycle\n\t * @description Hook que se ejecuta después de que la vista del componente ha sido inicializada.\n\t * Inicializa la instancia del modal de Bootstrap y añade un listener para limpiar el estado del\n\t * juego seleccionado y el backdrop cuando el modal se oculta.\n\t * @returns {void}\n\t */\n\tngAfterViewInit(): void {\n\t\tif (this.modalElementRef?.nativeElement) {\n\t\t\tthis.bsModal = new bootstrap.Modal(this.modalElementRef.nativeElement);\n\n\t\t\tthis.modalElementRef.nativeElement.addEventListener('hidden.bs.modal', () => {\n\t\t\t\tthis.game = null;\n\n\t\t\t\tconst backdrop = document.querySelector('.modal-backdrop');\n\t\t\t\tif (backdrop) {\n\t\t\t\t\tbackdrop.remove();\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t}\n\n\t/**\n\t * @public\n\t * @description Muestra el modal de detalles del juego.\n\t * @returns {void}\n\t */\n\tshow(): void {\n\t\tif (this.bsModal) {\n\t\t\tthis.bsModal.show();\n\t\t}\n\t}\n\n\t/**\n\t * @public\n\t * @description Oculta el modal de detalles del juego.\n\t * @returns {void}\n\t */\n\thide(): void {\n\t\tif (this.bsModal) {\n\t\t\tthis.bsModal.hide();\n\t\t}\n\t}\n\n\t/**\n\t * @public\n\t * @description Maneja el evento de cambio en el estado de un logro (checkbox).\n\t * Actualiza el estado del logro en el `GameService` si el usuario está autenticado.\n\t * @param {number} gameId El ID del juego al que pertenece el logro.\n\t * @param {number} achievementIndex El índice del logro dentro del array de logros del juego.\n\t * @param {Event} event El evento de cambio del checkbox.\n\t * @returns {void}\n\t */\n\tonAchievementChange(gameId: number, achievementIndex: number, event: Event): void {\n\t\tconst currentUser = this.authService.getCurrentUser;\n\t\tif (!currentUser) {\n\t\t\tthis.error = 'Debes iniciar sesión para guardar el progreso de logros.';\n\t\t\t(event.target as HTMLInputElement).checked = !(event.target as HTMLInputElement).checked;\n\t\t\treturn;\n\t\t}\n\t\tconst isCompleted = (event.target as HTMLInputElement).checked;\n\n\t\t// Obtiene los juegos del usuario desde el servicio\n\t\tconst userGames = this.gameService.getUserGames(currentUser.username);\n\t\tconst gameToUpdate = userGames.find(g => g.id === gameId);\n\n\t\tif (gameToUpdate?.achievements) {\n\t\t\tgameToUpdate.achievements[achievementIndex].completed = isCompleted;\n\t\t\tthis.gameService.updateGame(currentUser.username, gameToUpdate);\n\t\t\tthis.achievementUpdated.emit({ gameId, achievementIndex, completed: isCompleted });\n\t\t}\n\t}\n}\n\n    \n\n    \n        \n    \n        \n            \n                Detalles del Videojuego\n                {{ message }}\n\t\t        {{ error }}\n                \n            \n            \n                \n                    \n                        \n                    \n                    \n                        {{ game.title }}\n                        Plataforma: {{ game.platform }} | Género: {{ game.genre }}\n                        {{ game.description }}\n                        Horas de juego: {{ game.hoursPlayed }}h\n                    \n                \n                \n                    Logros / Trofeos\n                    \n                         0; else noAchievements\">\n                            \n                                \n                                \n                                    {{ achievement.name }}\n                                \n                            \n                        \n                        \n                            No hay logros disponibles para este juego.\n                        \n                    \n                \n            \n            \n                Cerrar\n            \n        \n    \n\n    \n\n    \n                \n                    ./game-detail-modal.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                        Detalles del Videojuego                {{ message }}\t\t        {{ error }}                                                                                                                                                                    {{ game.title }}                        Plataforma: {{ game.platform }} | Género: {{ game.genre }}                        {{ game.description }}                        Horas de juego: {{ game.hoursPlayed }}h                                                                        Logros / Trofeos                                             0; else noAchievements\">                                                                                                                                {{ achievement.name }}                                                                                                                                        No hay logros disponibles para este juego.                                                                                                    Cerrar                        '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CategoryComponent', 'selector': 'app-category'},{'name': 'ConfirmationModalComponent', 'selector': 'app-confirmation-modal'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'GameCardComponent', 'selector': 'app-game-card'},{'name': 'GameDetailModalComponent', 'selector': 'app-game-detail-modal'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MyLibraryComponent', 'selector': 'app-my-library'},{'name': 'RecoverPasswordComponent', 'selector': 'app-recover-password'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'UserProfileComponent', 'selector': 'app-user-profile'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'GameDetailModalComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/GameService.html":{"url":"injectables/GameService.html","title":"injectable - GameService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  GameService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/game/game.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Servicio que gestiona las operaciones de la biblioteca de juegos de los usuarios,\npersistiendo los datos en el almacenamiento local (localStorage).\nde un usuario específico, manteniendo la integridad de los datos de la biblioteca.\nInyecta este servicio en tus componentes o servicios que necesiten interactuar con la biblioteca de juegos:\nExample :constructor(private gameService: GameService) { }\n// Para obtener juegos:\nconst userGames = this.gameService.getUserGames('nombreUsuario');\n// Para añadir un juego:\nthis.gameService.addGame('nombreUsuario', newGame);\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _saveUserGames\n                            \n                            \n                                addGame\n                            \n                            \n                                deleteGame\n                            \n                            \n                                getUserGames\n                            \n                            \n                                updateGame\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/core/game/game.service.ts:79\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _saveUserGames\n                        \n                    \n                \n            \n            \n                \n                        \n                    _saveUserGames(username: string, games: Game[])\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/game/game.service.ts:90\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                username\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                games\n                                            \n                                                            Game[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        addGame\n                        \n                    \n                \n            \n            \n                \naddGame(username: string, gameData: Partial)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/game/game.service.ts:96\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                username\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                gameData\n                                            \n                                                            Partial\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     literal type\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deleteGame\n                        \n                    \n                \n            \n            \n                \ndeleteGame(username: string, gameId: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/game/game.service.ts:147\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                username\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                gameId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getUserGames\n                        \n                    \n                \n            \n            \n                \ngetUserGames(username: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/game/game.service.ts:84\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                username\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Game[]\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateGame\n                        \n                    \n                \n            \n            \n                \nupdateGame(username: string, updatedGame: Game)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/game/game.service.ts:138\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                username\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updatedGame\n                                            \n                                                            Game\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nconst USER_GAMES_KEY = 'my_game_library_userGames';\n/**\n * @description \n * Define la estructura de datos para un videojuego y el servicio para gestionar la biblioteca de juegos del usuario.\n * @summary \n * Proporciona interfaces para `Achievement` y `Game`, y el `GameService` para operaciones CRUD\n * (añadir, obtener, actualizar, eliminar) sobre los juegos en la biblioteca local del usuario.\n */\n\n/**\n * @interface GameAchievement\n * @description \n * Representa un logro individual de un videojuego.\n * @property {number} id El ID del logro.\n * @property {string} name El nombre del logro.\n * @property {string} description La descripción del logro.\n * @property {string} image La imagen del logro.\n * @property {string} percent El procentaje del logro\n * @property {boolean} completed Indica si el logro ha sido completado por el usuario.\n */\nexport interface GameAchievement {\n\tid: number;\n\tname: string;\n\tdescription: string;\n\timage: string;\n\tpercent: string;\n\tcompleted: boolean;\n}\n\n/**\n * @interface Game\n * @description \n * Representa un videojuego en la aplicación, incluyendo detalles y logros.\n * @property {number} id El identificador único del juego (ID de RAWG).\n * @property {string} title El título del videojuego.\n * @property {string} image La URL de la imagen de portada del juego.\n * @property {string} description La descripción detallada del juego.\n * @property {string} platform Las plataformas en las que está disponible el juego.\n * @property {string} genre Los géneros a los que pertenece el juego.\n * @property {number} hoursPlayed El número de horas que el usuario ha jugado a este juego.\n * @property {boolean} played Indica si el usuario ha marcado el juego como \"jugado\".\n * @property {boolean} isFavorite Indica si el usuario ha marcado el juego como favorito.\n * @property {GameAchievement[]} [achievements] Un array opcional de logros asociados al juego.\n */\nexport interface Game {\n\tid: number;\n\ttitle: string;\n\tdescription: string;\n\tplatform: string;\n\tgenre: string;\n\thoursPlayed: number;\n\timage: string;\n\tisFavorite: boolean;\n\tplayed: boolean;\n\tachievements: GameAchievement[];\n}\n\n/**\n * @class GameService\n * @description\n * Servicio que gestiona las operaciones de la biblioteca de juegos de los usuarios,\n * persistiendo los datos en el almacenamiento local (localStorage).\n * @summary Ofrece métodos para añadir, obtener, actualizar y eliminar juegos de la biblioteca\n * de un usuario específico, manteniendo la integridad de los datos de la biblioteca.\n * @usageNotes\n * Inyecta este servicio en tus componentes o servicios que necesiten interactuar con la biblioteca de juegos:\n * ```typescript\n * constructor(private gameService: GameService) { }\n * // Para obtener juegos:\n * const userGames = this.gameService.getUserGames('nombreUsuario');\n * // Para añadir un juego:\n * this.gameService.addGame('nombreUsuario', newGame);\n * ```\n */\n@Injectable({\n\tprovidedIn: 'root'\n})\nexport class GameService {\n\n\tconstructor() { }\n\n\t// Obtiene todos los juegos para un usuario específico\n\tgetUserGames(username: string): Game[] {\n\t\tconst allUserGames: { [key: string]: Game[] } = JSON.parse(localStorage.getItem(USER_GAMES_KEY) ?? '{}');\n\t\treturn allUserGames[username] ?? [];\n\t}\n\n\t// Guardar todos los juegos para un usuario específico\n\tprivate _saveUserGames(username: string, games: Game[]): void {\n\t\tconst allUserGames: { [key: string]: Game[] } = JSON.parse(localStorage.getItem(USER_GAMES_KEY) ?? '{}');\n\t\tallUserGames[username] = games;\n\t\tlocalStorage.setItem(USER_GAMES_KEY, JSON.stringify(allUserGames));\n\t}\n\t// Añadir un nuevo juego a la biblioteca de un usuario\n\taddGame(username: string, gameData: Partial): { success: boolean, message: string, game?: Game } {\n\t\tconst userGames = this.getUserGames(username);\n\t\tconst newGameId = gameData.id ?? Date.now();\n\n\t\t// Verifica si el juego ya existe en la biblioteca del usuario (por título y plataforma)\n\t\tconst alreadyExists = userGames.some(game =>\n\t\t\tgame.title === gameData.title && game.platform === gameData.platform\n\t\t);\n\n\t\tif (alreadyExists) {\n\t\t\treturn { success: false, message: 'El juego ya está en tu biblioteca.' };\n\t\t}\n\n\t\tlet initialAchievements: GameAchievement[] = [];\n\t\tif (gameData.achievements && gameData.achievements.length > 0) {\n\t\t\tinitialAchievements = gameData.achievements.map(ach => ({ ...ach, completed: false }));\n\t\t} else {\n\t\t\tinitialAchievements = [\n\t\t\t\t{ id: 101, name: \"Completar Tutorial\", description: \"Completa el tutorial del juego.\", image: \"\", percent: \"0%\", completed: false },\n\t\t\t\t{ id: 102, name: \"Derrotar Primer Jefe\", description: \"Derrota al primer jefe del juego.\", image: \"\", percent: \"0%\", completed: false }\n\t\t\t];\n\t\t}\n\n\t\tconst newGame: Game = {\n\t\t\tid: newGameId,\n\t\t\ttitle: gameData.title ?? 'Juego sin título',\n\t\t\tdescription: gameData.description ?? '',\n\t\t\tplatform: gameData.platform ?? 'Desconocida',\n\t\t\tgenre: gameData.genre ?? 'Varios',\n\t\t\thoursPlayed: gameData.hoursPlayed ?? 0,\n\t\t\timage: gameData.image ?? 'https://placehold.co/400x250/374151/D1D5DB?text=No+Image',\n\t\t\tisFavorite: false,\n\t\t\tplayed: false,\n\t\t\tachievements: initialAchievements\n\t\t};\n\n\t\tuserGames.push(newGame);\n\t\tthis._saveUserGames(username, userGames);\n\t\treturn { success: true, message: `\"${newGame.title}\" añadido correctamente.`, game: newGame };\n\t}\n\n\t// Actualiza un juego existente en la biblioteca de un usuario\n\tupdateGame(username: string, updatedGame: Game): void {\n\t\tlet userGames = this.getUserGames(username);\n\t\tuserGames = userGames.map(game =>\n\t\t\tgame.id === updatedGame.id ? { ...game, ...updatedGame } : game\n\t\t);\n\t\tthis._saveUserGames(username, userGames);\n\t}\n\n\t// Elimina un juego de la biblioteca de un usuario\n\tdeleteGame(username: string, gameId: number): void {\n\t\tlet userGames = this.getUserGames(username);\n\t\tuserGames = userGames.filter(game => game.id !== gameId);\n\t\tthis._saveUserGames(username, userGames);\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/HeaderComponent.html":{"url":"components/HeaderComponent.html","title":"component - HeaderComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  HeaderComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/header/header.component.ts\n\n\n\n    \n        Description\n    \n    \n        Componente para el encabezado de la aplicación.\nMuestra el nombre de la aplicación, enlaces de navegación,\ny gestiona la visualización del estado de autenticación del usuario (login/registro vs. perfil de usuario).\nExample :\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-header\n            \n\n\n\n            \n                styleUrls\n                ./header.component.css\n            \n\n\n\n            \n                templateUrl\n                ./header.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                authService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                logout\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/header/header.component.ts:21\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        logout\n                        \n                    \n                \n            \n            \n                \nlogout()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/header/header.component.ts:25\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        authService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         AuthService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/header/header.component.ts:22\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { AuthService } from 'src/app/core/auth/auth.service';\n\n/**\n * @description \n * Componente para el encabezado de la aplicación.\n * @summary \n * Muestra el nombre de la aplicación, enlaces de navegación,\n * y gestiona la visualización del estado de autenticación del usuario (login/registro vs. perfil de usuario).\n * @usageNotes\n * ```html\n * \n * ```\n */\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.css']\n})\nexport class HeaderComponent {\n  constructor(public authService: AuthService, private readonly router: Router) {\n  }\n\n  logout(): void {\n    this.authService.logout();\n    this.router.navigate(['/login']);\n  }\n}\n\n    \n\n    \n        \n\t\n\t\t\n\t\t\t ReGamesCreative\n\t\t\n\t\t\n\t\t\t\n\t\t\n\t\t\n\t\t\t\n\t\t\t\t\n\t\t\t\t\tInicio\n\t\t\t\t\n\t\t\t\t\n\t\t\t\t\tCategorías\n\t\t\t\t\t\n\t\t\t\t\t\tAcción\n\t\t\t\t\t\tRPG\n\t\t\t\t\t\tAventura\n\t\t\t\t\t\tEstrategia\n\t\t\t\t\t\t\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\n\t\t\t\t\t\tVer Todas\n\t\t\t\t\t\n\t\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\t\n\t\t\t\t\tLogin\n\t\t\t\t\n\t\t\t\t\n\t\t\t\t\tRegistro\n\t\t\t\t\n\t\t\t\t\n\t\t\t\t\t{{ user.username }}\n\t\t\t\t\t\n\t\t\t\t\t\t\n\t\t\t\t\t\t\tRol: {{ user.role | titlecase }}\n\t\t\t\t\t\t\n\t\t\t\t\t\t\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\n\t\t\t\t\t\tMi Perfil\n\t\t\t\t\t\tMi Biblioteca\n\t\t\t\t\t\tFavoritos\n\t\t\t\t\t\tCerrar Sesión\n\t\t\t\t\t\n\t\t\t\t\n\t\t\t\n\t\t\n\t\n\n    \n\n    \n                \n                    ./header.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '\t\t\t\t\t\t ReGamesCreative\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tInicio\t\t\t\t\t\t\t\t\t\t\t\t\tCategorías\t\t\t\t\t\t\t\t\t\t\tAcción\t\t\t\t\t\tRPG\t\t\t\t\t\tAventura\t\t\t\t\t\tEstrategia\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tVer Todas\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tLogin\t\t\t\t\t\t\t\t\t\t\t\t\tRegistro\t\t\t\t\t\t\t\t\t\t\t\t\t{{ user.username }}\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tRol: {{ user.role | titlecase }}\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tMi Perfil\t\t\t\t\t\tMi Biblioteca\t\t\t\t\t\tFavoritos\t\t\t\t\t\tCerrar Sesión\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CategoryComponent', 'selector': 'app-category'},{'name': 'ConfirmationModalComponent', 'selector': 'app-confirmation-modal'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'GameCardComponent', 'selector': 'app-game-card'},{'name': 'GameDetailModalComponent', 'selector': 'app-game-detail-modal'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MyLibraryComponent', 'selector': 'app-my-library'},{'name': 'RecoverPasswordComponent', 'selector': 'app-recover-password'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'UserProfileComponent', 'selector': 'app-user-profile'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'HeaderComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/HomeComponent.html":{"url":"components/HomeComponent.html","title":"component - HomeComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  HomeComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/features/home/home.component.ts\n\n\n\n    \n        Description\n    \n    \n        Componente de la página de inicio de la aplicación.\nMuestra una lista de categorías de videojuegos y permite al usuario navegar\na la página de juegos de cada categoría. Carga las categorías desde la API de RAWG\no usa valores predeterminados en caso de error.\nExample :\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-home\n            \n\n\n\n            \n                styleUrls\n                ./home.component.css\n            \n\n\n\n            \n                templateUrl\n                ./home.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                categories\n                            \n                            \n                                    Private\n                                categoriesSubscription\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                getCategoryIcon\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService, rawgApiService: ApiService)\n                    \n                \n                        \n                            \n                                Defined in src/app/features/home/home.component.ts:25\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        rawgApiService\n                                                  \n                                                        \n                                                                        ApiService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        getCategoryIcon\n                        \n                    \n                \n            \n            \n                \n                        \n                    getCategoryIcon(categoryName: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/home/home.component.ts:56\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                categoryName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/home/home.component.ts:82\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/home/home.component.ts:32\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        categories\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/features/home/home.component.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        categoriesSubscription\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription\n\n                    \n                \n                    \n                        \n                                Defined in src/app/features/home/home.component.ts:25\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { Subscription } from 'rxjs';\nimport { ApiService } from 'src/app/core/api/api.service';\nimport { AuthService } from 'src/app/core/auth/auth.service';\n\n/**\n * @description \n * Componente de la página de inicio de la aplicación.\n * @summary \n * Muestra una lista de categorías de videojuegos y permite al usuario navegar\n * a la página de juegos de cada categoría. Carga las categorías desde la API de RAWG\n * o usa valores predeterminados en caso de error.\n * @usageNotes\n * ```html\n * \n * ```\n */\n@Component({\n\tselector: 'app-home',\n\ttemplateUrl: './home.component.html',\n\tstyleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n\tcategories: { name: string, iconClass: string }[] = [];\n\tprivate categoriesSubscription!: Subscription;\n\n\tconstructor(\n\t\tprivate readonly authService: AuthService,\n\t\tprivate readonly rawgApiService: ApiService\n\t) { }\n\n\tngOnInit(): void {\n\t\tthis.authService.init();\n\n\t\t// Cargar las categorías del servicio RawgApiService\n\t\tthis.categoriesSubscription = this.rawgApiService.getGenres().subscribe({\n\t\t\tnext: (categoryNames: string[]) => {\n\t\t\t\tthis.categories = categoryNames.map(name => ({\n\t\t\t\t\tname: name,\n\t\t\t\t\ticonClass: this.getCategoryIcon(name)\n\t\t\t\t}));\n\t\t\t},\n\t\t\terror: (err) => {\n\t\t\t\tconsole.error('Error al cargar las categorías desde RAWG API:', err);\n\t\t\t\tthis.categories = [\n\t\t\t\t\t{ name: 'Acción', iconClass: 'fas fa-fist-raised' },\n\t\t\t\t\t{ name: 'RPG', iconClass: 'fas fa-hat-wizard' },\n\t\t\t\t\t{ name: 'Aventura', iconClass: 'fas fa-map-marked-alt' },\n\t\t\t\t\t{ name: 'Estrategia', iconClass: 'fas fa-chess-knight' }\n\t\t\t\t];\n\t\t\t\talert('Error al cargar categorías de la API. Se están mostrando categorías predeterminadas.');\n\t\t\t}\n\t\t});\n\t}\n\n\tprivate getCategoryIcon(categoryName: string): string {\n\t\tswitch (categoryName.toLowerCase()) {\n\t\t\tcase 'action':\n\t\t\tcase 'accion':\n\t\t\t\treturn 'fas fa-fist-raised';\n\t\t\tcase 'rpg':\n\t\t\t\treturn 'fas fa-hat-wizard';\n\t\t\tcase 'adventure':\n\t\t\tcase 'aventura':\n\t\t\t\treturn 'fas fa-map-marked-alt';\n\t\t\tcase 'strategy':\n\t\t\tcase 'estrategia':\n\t\t\t\treturn 'fas fa-chess-knight';\n\t\t\tcase 'shooter':\n\t\t\t\treturn 'fas fa-crosshairs';\n\t\t\tcase 'puzzle':\n\t\t\t\treturn 'fas fa-puzzle-piece';\n\t\t\tcase 'racing':\n\t\t\t\treturn 'fas fa-car';\n\t\t\tcase 'sports':\n\t\t\t\treturn 'fas fa-futbol';\n\t\t\tdefault:\n\t\t\t\treturn 'fas fa-gamepad';\n\t\t}\n\t}\n\n\tngOnDestroy(): void {\n\t\tif (this.categoriesSubscription) {\n\t\t\tthis.categoriesSubscription.unsubscribe();\n\t\t}\n\t}\n}\n\n    \n\n    \n        \n    ReGamesCreative\n\n    \n        \n            \n                \n                    \n                        {{ category.name }}\n                        Explora los juegos de {{ category.name | lowercase }}.\n                        \n                    \n                \n            \n        \n    \n\n    \n\n    \n                \n                    ./home.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    ReGamesCreative                                                                                    {{ category.name }}                        Explora los juegos de {{ category.name | lowercase }}.                                                                                    '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CategoryComponent', 'selector': 'app-category'},{'name': 'ConfirmationModalComponent', 'selector': 'app-confirmation-modal'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'GameCardComponent', 'selector': 'app-game-card'},{'name': 'GameDetailModalComponent', 'selector': 'app-game-detail-modal'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MyLibraryComponent', 'selector': 'app-my-library'},{'name': 'RecoverPasswordComponent', 'selector': 'app-recover-password'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'UserProfileComponent', 'selector': 'app-user-profile'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'HomeComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LoginComponent.html":{"url":"components/LoginComponent.html","title":"component - LoginComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  LoginComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/features/login/login.component.ts\n\n\n\n    \n        Description\n    \n    \n        Componente para el inicio de sesión de usuarios.\nPermite a los usuarios ingresar sus credenciales (nombre de usuario y contraseña)\npara autenticarse en la aplicación. Utiliza formularios reactivos y validadores personalizados.\nExample :\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n                OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-login\n            \n\n\n\n            \n                styleUrls\n                ./login.component.css\n            \n\n\n\n            \n                templateUrl\n                ./login.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                authSubscription\n                            \n                            \n                                loginForm\n                            \n                            \n                                loginMessage\n                            \n                            \n                                password\n                            \n                            \n                                username\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onSubmit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService, router: Router, fb: FormBuilder)\n                    \n                \n                        \n                            \n                                Defined in src/app/features/login/login.component.ts:30\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        fb\n                                                  \n                                                        \n                                                                    FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/login/login.component.ts:65\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/login/login.component.ts:38\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onSubmit\n                        \n                    \n                \n            \n            \n                \nonSubmit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/login/login.component.ts:47\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        authSubscription\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription\n\n                    \n                \n                    \n                        \n                                Defined in src/app/features/login/login.component.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loginForm\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FormGroup\n\n                    \n                \n                    \n                        \n                                Defined in src/app/features/login/login.component.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loginMessage\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/features/login/login.component.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/features/login/login.component.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        username\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/features/login/login.component.ts:25\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { Subscription } from 'rxjs';\nimport { AuthService } from 'src/app/core/auth/auth.service';\nimport { emptyStringValidator } from 'src/app/utils/validator';\n\n/**\n * @description \n * Componente para el inicio de sesión de usuarios.\n * @summary \n * Permite a los usuarios ingresar sus credenciales (nombre de usuario y contraseña)\n * para autenticarse en la aplicación. Utiliza formularios reactivos y validadores personalizados.\n * @usageNotes\n * ```html\n * \n * ```\n */\n@Component({\n\tselector: 'app-login',\n\ttemplateUrl: './login.component.html',\n\tstyleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit, OnDestroy {\n\tusername = '';\n\tpassword = '';\n\n\tloginForm!: FormGroup;\n\tloginMessage: string = '';\n\tprivate readonly authSubscription!: Subscription;\n\n\tconstructor(\n\t\tprivate readonly authService: AuthService,\n\t\tprivate readonly router: Router,\n\t\tprivate readonly fb: FormBuilder\n\t) { }\n\n\tngOnInit(): void {\n\t\t// Inicializa el formulario reactivo para el login\n\t\tthis.loginForm = this.fb.group({\n\t\t\tusername: ['', [Validators.required, emptyStringValidator()]],\n\t\t\tpassword: ['', [Validators.required, emptyStringValidator()]]\n\t\t});\n\n\t}\n\n\tonSubmit(): void {\n\t\tif (this.loginForm.invalid) {\n\t\t\tthis.loginForm.markAllAsTouched();\n\t\t\tthis.loginMessage = 'Por favor, completa todos los campos correctamente.';\n\t\t\treturn;\n\t\t}\n\n\t\tconst { username, password } = this.loginForm.value;\n\t\tconst result = this.authService.login(username, password);\n\n\t\tif (result.success) {\n\t\t\tthis.loginMessage = 'Inicio de sesión exitoso. Redirigiendo...';\n\t\t\tsetTimeout(() => { this.router.navigate(['/mi-biblioteca']); }, 1000);\n\t\t} else {\n\t\t\tthis.loginMessage = `${result.message}`;\n\t\t}\n\t}\n\n\tngOnDestroy(): void {\n\t\tif (this.authSubscription) {\n\t\t\tthis.authSubscription.unsubscribe();\n\t\t}\n\t}\n\n}\n\n    \n\n    \n        \n\t\n\t\tIniciar Sesión\n\t\t\n\t\t\n            \n                Nombre de Usuario\n                \n                \n                    Este campo es obligatorio.\n                \n                \n                    Debes ingresar un nombre de usuario.\n                \n            \n            \n                Contraseña\n                \n                \n                    Este campo es obligatorio.\n                \n                \n                    Debes ingresar una contraseña.\n                \n            \n            \n                Entrar\n            \n            \n                ¿Olvidaste tu contraseña?\n            \n            \n                ¿No tienes una cuenta? Regístrate aquí\n            \n        \n\t\n\n    \n\n    \n                \n                    ./login.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '\t\t\tIniciar Sesión\t\t\t\t                            Nombre de Usuario                                                    Este campo es obligatorio.                                                    Debes ingresar un nombre de usuario.                                                        Contraseña                                                    Este campo es obligatorio.                                                    Debes ingresar una contraseña.                                                        Entrar                                        ¿Olvidaste tu contraseña?                                        ¿No tienes una cuenta? Regístrate aquí                    \t'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CategoryComponent', 'selector': 'app-category'},{'name': 'ConfirmationModalComponent', 'selector': 'app-confirmation-modal'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'GameCardComponent', 'selector': 'app-game-card'},{'name': 'GameDetailModalComponent', 'selector': 'app-game-detail-modal'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MyLibraryComponent', 'selector': 'app-my-library'},{'name': 'RecoverPasswordComponent', 'selector': 'app-recover-password'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'UserProfileComponent', 'selector': 'app-user-profile'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'LoginComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MyLibraryComponent.html":{"url":"components/MyLibraryComponent.html","title":"component - MyLibraryComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  MyLibraryComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/features/my-library/my-library.component.ts\n\n\n\n    \n        Description\n    \n    \n        Componente para mostrar y gestionar la biblioteca personal de videojuegos del usuario.\nPermite a los usuarios ver sus juegos, filtrarlos por estado (jugado/pendiente) y favorito,\nactualizar horas jugadas, marcar como favorito/no favorito, y eliminar juegos de su biblioteca.\nTambién integra modales para ver detalles del juego y confirmar eliminaciones.\nExample :\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n                OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-my-library\n            \n\n\n\n            \n                styleUrls\n                ./my-library.component.css\n            \n\n\n\n            \n                templateUrl\n                ./my-library.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                allUserGames\n                            \n                            \n                                    Private\n                                authSubscription\n                            \n                            \n                                    \n                                confirmationModal\n                            \n                            \n                                confirmationModalConfirmText\n                            \n                            \n                                confirmationModalMessage\n                            \n                            \n                                confirmationModalTitle\n                            \n                            \n                                currentUser\n                            \n                            \n                                error\n                            \n                            \n                                filteredGames\n                            \n                            \n                                    \n                                gameDetailModal\n                            \n                            \n                                gameIdToDelete\n                            \n                            \n                                message\n                            \n                            \n                                searchTerm\n                            \n                            \n                                selectedFavorite\n                            \n                            \n                                selectedGameForModal\n                            \n                            \n                                selectedStatus\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                filterAndRenderGames\n                            \n                            \n                                handleDeleteGameConfirmation\n                            \n                            \n                                handleToggleFavorite\n                            \n                            \n                                handleTogglePlayed\n                            \n                            \n                                handleUpdateHoursPlayed\n                            \n                            \n                                loadUserGames\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onDeleteConfirmation\n                            \n                            \n                                openGameDetailModal\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService, gameService: GameService, rawgApiService: ApiService)\n                    \n                \n                        \n                            \n                                Defined in src/app/features/my-library/my-library.component.ts:49\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        gameService\n                                                  \n                                                        \n                                                                        GameService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        rawgApiService\n                                                  \n                                                        \n                                                                        ApiService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        filterAndRenderGames\n                        \n                    \n                \n            \n            \n                \nfilterAndRenderGames()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/my-library/my-library.component.ts:79\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        handleDeleteGameConfirmation\n                        \n                    \n                \n            \n            \n                \nhandleDeleteGameConfirmation(gameId: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/my-library/my-library.component.ts:149\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                gameId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        handleToggleFavorite\n                        \n                    \n                \n            \n            \n                \nhandleToggleFavorite(gameId: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/my-library/my-library.component.ts:108\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                gameId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        handleTogglePlayed\n                        \n                    \n                \n            \n            \n                \nhandleTogglePlayed(gameId: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/my-library/my-library.component.ts:119\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                gameId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        handleUpdateHoursPlayed\n                        \n                    \n                \n            \n            \n                \nhandleUpdateHoursPlayed(gameId: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/my-library/my-library.component.ts:130\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                gameId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loadUserGames\n                        \n                    \n                \n            \n            \n                \nloadUserGames()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/my-library/my-library.component.ts:71\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/my-library/my-library.component.ts:192\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/my-library/my-library.component.ts:57\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onDeleteConfirmation\n                        \n                    \n                \n            \n            \n                \nonDeleteConfirmation(confirmed: boolean)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/my-library/my-library.component.ts:165\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                confirmed\n                                            \n                                                            boolean\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        openGameDetailModal\n                        \n                    \n                \n            \n            \n                \nopenGameDetailModal(game: Game)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/my-library/my-library.component.ts:175\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                game\n                                            \n                                                            Game\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        allUserGames\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Game[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/features/my-library/my-library.component.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        authSubscription\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription\n\n                    \n                \n                    \n                        \n                                Defined in src/app/features/my-library/my-library.component.ts:46\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        confirmationModal\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ConfirmationModalComponent\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild(ConfirmationModalComponent)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/features/my-library/my-library.component.ts:49\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        confirmationModalConfirmText\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/features/my-library/my-library.component.ts:44\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        confirmationModalMessage\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/features/my-library/my-library.component.ts:43\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        confirmationModalTitle\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/features/my-library/my-library.component.ts:42\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        currentUser\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/features/my-library/my-library.component.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        error\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/features/my-library/my-library.component.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        filteredGames\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Game[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/features/my-library/my-library.component.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        gameDetailModal\n                        \n                    \n                \n            \n                \n                    \n                        Type :         GameDetailModalComponent\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild(GameDetailModalComponent)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/features/my-library/my-library.component.ts:48\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        gameIdToDelete\n                        \n                    \n                \n            \n                \n                    \n                        Type :     number | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/features/my-library/my-library.component.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        message\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/features/my-library/my-library.component.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        searchTerm\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/features/my-library/my-library.component.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectedFavorite\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/features/my-library/my-library.component.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectedGameForModal\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Game | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/features/my-library/my-library.component.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectedStatus\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/features/my-library/my-library.component.ts:35\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnDestroy, OnInit, ViewChild } from '@angular/core';\nimport { catchError, of, Subscription } from 'rxjs';\nimport { ApiService } from 'src/app/core/api/api.service';\nimport { AuthService, User } from 'src/app/core/auth/auth.service';\nimport { Game, GameService } from 'src/app/core/game/game.service';\nimport { ConfirmationModalComponent } from 'src/app/shared/confirmation-modal/confirmation-modal.component';\nimport { GameDetailModalComponent } from 'src/app/shared/game-detail-modal/game-detail-modal.component';\n\n/**\n * @description \n * Componente para mostrar y gestionar la biblioteca personal de videojuegos del usuario.\n * @summary \n * Permite a los usuarios ver sus juegos, filtrarlos por estado (jugado/pendiente) y favorito,\n * actualizar horas jugadas, marcar como favorito/no favorito, y eliminar juegos de su biblioteca.\n * También integra modales para ver detalles del juego y confirmar eliminaciones.\n * @usageNotes\n * ```html\n * \n * ```\n */\n@Component({\n\tselector: 'app-my-library',\n\ttemplateUrl: './my-library.component.html',\n\tstyleUrls: ['./my-library.component.css']\n})\nexport class MyLibraryComponent implements OnInit, OnDestroy {\n\tmessage = '';\n\terror = '';\n\n\tcurrentUser: User | null = null;\n\tallUserGames: Game[] = [];\n\tfilteredGames: Game[] = [];\n\n\tsearchTerm: string = '';\n\tselectedStatus: string = '';\n\tselectedFavorite: string = '';\n\n\tselectedGameForModal: Game | null = null;\n\tgameIdToDelete: number | null = null;\n\n\t// Propiedades para el modal de confirmación\n\tconfirmationModalTitle: string = '';\n\tconfirmationModalMessage: string = '';\n\tconfirmationModalConfirmText: string = '';\n\n\tprivate authSubscription!: Subscription;\n\n\t@ViewChild(GameDetailModalComponent) gameDetailModal!: GameDetailModalComponent;\n\t@ViewChild(ConfirmationModalComponent) confirmationModal!: ConfirmationModalComponent;\n\n\tconstructor(\n\t\tprivate readonly authService: AuthService,\n\t\tprivate readonly gameService: GameService,\n\t\tprivate readonly rawgApiService: ApiService\n\t) { }\n\n\tngOnInit(): void {\n\t\t// Suscribe al estado de autenticación para cargar los juegos del usuario\n\t\tthis.authSubscription = this.authService.currentUser.subscribe(user => {\n\t\t\tthis.currentUser = user;\n\t\t\tif (this.currentUser) {\n\t\t\t\tthis.loadUserGames();\n\t\t\t} else {\n\t\t\t\tthis.allUserGames = [];\n\t\t\t\tthis.filteredGames = [];\n\t\t\t}\n\t\t});\n\t}\n\n\t// Carga los juegos del usuario desde el GameService\n\tloadUserGames(): void {\n\t\tif (this.currentUser) {\n\t\t\tthis.allUserGames = this.gameService.getUserGames(this.currentUser.username);\n\t\t\tthis.filterAndRenderGames();\n\t\t}\n\t}\n\n\t// Filtra y renderiza los juegos en la vista\n\tfilterAndRenderGames(): void {\n\t\tif (!this.currentUser) {\n\t\t\tthis.filteredGames = [];\n\t\t\treturn;\n\t\t}\n\n\t\tconst searchTermLower = this.searchTerm.toLowerCase();\n\t\tconst selectedStatusValue = this.selectedStatus;\n\t\tconst selectedFavoriteValue = this.selectedFavorite;\n\n\t\tthis.filteredGames = this.allUserGames.filter(game => {\n\t\t\tconst matchesSearch = game.title.toLowerCase().includes(searchTermLower) ||\n\t\t\t\tgame.description.toLowerCase().includes(searchTermLower) ||\n\t\t\t\tgame.platform.toLowerCase().includes(searchTermLower) ||\n\t\t\t\tgame.genre.toLowerCase().includes(searchTermLower);\n\n\t\t\tconst matchesStatus = selectedStatusValue === '' ||\n\t\t\t\t(selectedStatusValue === 'jugado' && game.played) ||\n\t\t\t\t(selectedStatusValue === 'pendiente' && !game.played);\n\n\t\t\tconst matchesFavorite = selectedFavoriteValue === '' ||\n\t\t\t\t(selectedFavoriteValue === 'favorito' && game.isFavorite) ||\n\t\t\t\t(selectedFavoriteValue === 'no-favorito' && !game.isFavorite);\n\n\t\t\treturn matchesSearch && matchesStatus && matchesFavorite;\n\t\t});\n\t}\n\n\t// Maneja el toggle de favorito\n\thandleToggleFavorite(gameId: number): void {\n\t\tif (!this.currentUser) { this.error = 'Debes iniciar sesión para marcar favoritos.'; return; }\n\t\tconst gameToUpdate = this.allUserGames.find(game => game.id === gameId);\n\t\tif (gameToUpdate) {\n\t\t\tgameToUpdate.isFavorite = !gameToUpdate.isFavorite;\n\t\t\tthis.gameService.updateGame(this.currentUser.username, gameToUpdate);\n\t\t\tthis.filterAndRenderGames();\n\t\t}\n\t}\n\n\t// Maneja el toggle de jugado/pendiente\n\thandleTogglePlayed(gameId: number): void {\n\t\tif (!this.currentUser) { this.error = 'Debes iniciar sesión para actualizar el estado.'; return; }\n\t\tconst gameToUpdate = this.allUserGames.find(game => game.id === gameId);\n\t\tif (gameToUpdate) {\n\t\t\tgameToUpdate.played = !gameToUpdate.played;\n\t\t\tthis.gameService.updateGame(this.currentUser.username, gameToUpdate);\n\t\t\tthis.filterAndRenderGames();\n\t\t}\n\t}\n\n\t// Maneja la actualización de horas jugadas\n\thandleUpdateHoursPlayed(gameId: number): void {\n\t\tif (!this.currentUser) { this.error = 'Debes iniciar sesión para actualizar las horas.'; return; }\n\t\tconst gameToUpdate = this.allUserGames.find(game => game.id === gameId);\n\t\tif (gameToUpdate) {\n\t\t\tconst newHoursStr = prompt(`Introduce las horas jugadas para \"${gameToUpdate.title}\":`, String(gameToUpdate.hoursPlayed));\n\t\t\tif (newHoursStr !== null) {\n\t\t\t\tconst parsedHours = parseFloat(newHoursStr);\n\t\t\t\tif (!isNaN(parsedHours) && parsedHours >= 0) {\n\t\t\t\t\tgameToUpdate.hoursPlayed = parsedHours;\n\t\t\t\t\tthis.gameService.updateGame(this.currentUser.username, gameToUpdate);\n\t\t\t\t\tthis.filterAndRenderGames();\n\t\t\t\t} else {\n\t\t\t\t\tthis.error = 'Entrada no válida. Por favor, introduce un número positivo.';\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t// Prepara y muestra el modal de confirmación para eliminar un juego\n\thandleDeleteGameConfirmation(gameId: number): void {\n\t\tif (!this.currentUser) {\n\t\t\tthis.error = 'Debes iniciar sesión para eliminar juegos.';\n\t\t\treturn;\n\t\t}\n\t\tconst gameToDelete = this.allUserGames.find(game => game.id === gameId);\n\t\tif (gameToDelete) {\n\t\t\tthis.gameIdToDelete = gameId; // Almacena el ID del juego a eliminar\n\t\t\tthis.confirmationModalTitle = 'Eliminar Juego';\n\t\t\tthis.confirmationModalMessage = `¿Estás seguro de que quieres eliminar \"${gameToDelete.title}\" de tu biblioteca? Esta acción no se puede deshacer.`;\n\t\t\tthis.confirmationModalConfirmText = 'Eliminar';\n\t\t\tthis.confirmationModal.show(); // Muestra el modal de confirmación\n\t\t}\n\t}\n\n\t// Maneja la respuesta del modal de confirmación\n\tonDeleteConfirmation(confirmed: boolean): void {\n\t\tif (confirmed && this.gameIdToDelete !== null) {\n\t\t\tif (!this.currentUser) { /* Esto no debería pasar si el guardián de arriba funciona */ return; }\n\t\t\tthis.gameService.deleteGame(this.currentUser.username, this.gameIdToDelete);\n\t\t\tthis.loadUserGames(); // Vuelve a cargar y renderizar los juegos\n\t\t}\n\t\tthis.gameIdToDelete = null; // Limpia el ID del juego a eliminar\n\t}\n\n\t// Abre el modal de detalles del juego utilizando el componente modal hijo\n\topenGameDetailModal(game: Game): void {\n\t\tthis.rawgApiService.getGameDetails(game.id).pipe(\n\t\t\tcatchError(err => {\n\t\t\t\tconsole.error('Error al obtener detalles completos del juego de RAWG API:', err);\n\t\t\t\treturn of(game);\n\t\t\t})\n\t\t).subscribe(fullDetailsGame => {\n\t\t\tthis.selectedGameForModal = {\n\t\t\t\t...fullDetailsGame,\n\t\t\t\tachievements: game.achievements\n\t\t\t};\n\t\t\tif (this.gameDetailModal) {\n\t\t\t\tthis.gameDetailModal.show();\n\t\t\t}\n\t\t});\n\t}\n\n\tngOnDestroy(): void {\n\t\tif (this.authSubscription) {\n\t\t\tthis.authSubscription.unsubscribe();\n\t\t}\n\t}\n}\n\n    \n\n    \n        \n    Mi Biblioteca Personal\n    {{ message }}\n\t{{ error }}\n    \n        \n            \n        \n        \n            \n                Todos los estados\n                Jugado\n                Pendiente\n            \n        \n        \n            \n                Todos los favoritos\n                Favorito\n                No Favorito\n            \n        \n    \n    \n        \n             0; else noGamesFound\">\n                \n                    \n                        \n                        \n                    \n                \n            \n            \n                \n                    No se encontraron juegos con los filtros aplicados.\n                    Intenta ajustar tus criterios de búsqueda o filtro.\n                \n            \n        \n        \n            \n                ¡Bienvenido a la Biblioteca de Videojuegos!\n                Inicia sesión o regístrate para gestionar tu propia biblioteca personal.\n                Puedes usar admin / Admin123! o user1 / User123!.\n                Iniciar Sesión\n            \n        \n    \n\n\n\n\n\n\n\n\n    \n\n    \n                \n                    ./my-library.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    Mi Biblioteca Personal    {{ message }}\t{{ error }}                                                                    Todos los estados                Jugado                Pendiente                                                        Todos los favoritos                Favorito                No Favorito                                                 0; else noGamesFound\">                                                                                                                                                                                    No se encontraron juegos con los filtros aplicados.                    Intenta ajustar tus criterios de búsqueda o filtro.                                                                        ¡Bienvenido a la Biblioteca de Videojuegos!                Inicia sesión o regístrate para gestionar tu propia biblioteca personal.                Puedes usar admin / Admin123! o user1 / User123!.                Iniciar Sesión                        '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CategoryComponent', 'selector': 'app-category'},{'name': 'ConfirmationModalComponent', 'selector': 'app-confirmation-modal'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'GameCardComponent', 'selector': 'app-game-card'},{'name': 'GameDetailModalComponent', 'selector': 'app-game-detail-modal'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MyLibraryComponent', 'selector': 'app-my-library'},{'name': 'RecoverPasswordComponent', 'selector': 'app-recover-password'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'UserProfileComponent', 'selector': 'app-user-profile'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'MyLibraryComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/RawgAchievementApi.html":{"url":"interfaces/RawgAchievementApi.html","title":"interface - RawgAchievementApi","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  RawgAchievementApi\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/api/api.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            description\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            image\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            percent\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        description:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        image\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        image:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        percent\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        percent:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient, HttpParams } from '@angular/common/http';\nimport { Observable, of } from 'rxjs';\nimport { map, catchError } from 'rxjs/operators';\nimport { Game, GameAchievement } from '../game/game.service';\n\n// Define la estructura de una respuesta de la API de RAWG para la lista de juegos\ninterface RawgApiResponse {\n  count: number;\n  next: string | null;\n  previous: string | null;\n  results: RawgGame[];\n}\n\n// Define la estructura simplificada de un juego de RAWG (ajusta según necesites más campos)\ninterface RawgGame {\n  id: number;\n  name: string;\n  background_image: string;\n  genres: { id: number; name: string; slug: string }[];\n  platforms: { platform: { id: number; name: string; slug: string } }[];\n  released: string;\n  description_raw?: string;\n  achievements_count?: number;\n}\n\n// Interfaz para la respuesta de la API de logros de RAWG\ninterface RawgAchievementsApiResponse {\n  count: number;\n  results: RawgAchievementApi[];\n}\n\n// Interfaz para la estructura de un logro individual de la API de RAWG\ninterface RawgAchievementApi {\n  id: number;\n  name: string;\n  description: string;\n  image: string;\n  percent: string;\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ApiService {\n  private readonly BASE_URL = 'https://api.rawg.io/api';\n  private readonly API_KEY = 'e8efc69ecead49639193319812de4f90';\n\n  constructor(private readonly http: HttpClient) { }\n\n  /**\n   * Obtiene una lista de juegos de la API de RAWG.\n   * @param searchQuery Término de búsqueda para juegos.\n   * @param genres IDs o slugs de géneros (separados por coma).\n   * @param platforms IDs o slugs de plataformas (separados por coma).\n   * @param page_size Número de resultados por página.\n   * @returns Un Observable de un array de objetos Game (transformado desde RawgGame).\n   */\n  getGames(searchQuery: string = '', genres: string = '', platforms: string = '', page_size: number = 20): Observable {\n    let params = new HttpParams().set('key', this.API_KEY).set('page_size', page_size.toString());\n\n    if (searchQuery) {\n      params = params.set('search', searchQuery);\n    }\n    if (genres) {\n      params = params.set('genres', genres);\n    }\n    if (platforms) {\n      params = params.set('platforms', platforms);\n    }\n\n    // Realiza la petición HTTP y mapea la respuesta al formato Game[]\n    return this.http.get(`${this.BASE_URL}/games`, { params }).pipe(\n      map(response => response.results.map(rawgGame => this.mapRawgGameToGame(rawgGame))),\n      catchError(error => {\n        console.error('Error fetching games from RAWG API:', error);\n        return of([]); // Retorna un observable de array vacío en caso de error\n      })\n    );\n  }\n\n  /**\n   * Obtiene los detalles completos de un juego específico por su ID.\n   * @param id El ID del juego en RAWG.\n   * @returns Un Observable de un objeto Game. Incluye la descripción completa si está disponible.\n   */\n  getGameDetails(id: number): Observable {\n    const params = new HttpParams().set('key', this.API_KEY);\n    return this.http.get(`${this.BASE_URL}/games/${id}`, { params }).pipe(\n      map(rawgGame => this.mapRawgGameToGame(rawgGame, true)), // Pasar true para indicar que es un detalle\n      catchError(error => {\n        console.error(`Error fetching details for game ID ${id} from RAWG API:`, error);\n        throw error; // Propaga el error para que el componente lo maneje\n      })\n    );\n  }\n\n  /**\n   * Obtiene la lista de logros para un juego específico por su ID.\n   * @param gameId El ID del juego en RAWG.\n   * @returns Un Observable de un array de objetos GameAchievement.\n   */\n  getGameAchievements(gameId: number): Observable {\n    const params = new HttpParams().set('key', this.API_KEY);\n    return this.http.get(`${this.BASE_URL}/games/${gameId}/achievements`, { params }).pipe(\n      map(response => response.results.map(rawgAchievement => this.mapRawgAchievementToGameAchievement(rawgAchievement))),\n      catchError(error => {\n        console.error(`Error fetching achievements for game ID ${gameId} from RAWG API:`, error);\n        return of([]); // Retorna un observable de array vacío en caso de error\n      })\n    );\n  }\n\n  /**\n   * Mapea un objeto RawgGame a la interfaz Game de nuestra aplicación.\n   * Esta función NO mapea los logros, ya que se obtienen de un endpoint separado.\n   * @param rawgGame El objeto RawgGame de la API.\n   * @param includeFullDescription Indica si se debe incluir la descripción completa (description_raw).\n   * @returns Un objeto Game compatible con tu aplicación.\n   */\n  private mapRawgGameToGame(rawgGame: RawgGame, includeFullDescription: boolean = false): Game {\n    // description_raw solo viene en la respuesta del endpoint de detalle de un juego (/games/{id})\n    const description = rawgGame.description_raw || rawgGame.name;\n    return {\n      id: rawgGame.id,\n      title: rawgGame.name,\n      description: includeFullDescription ? description : description.substring(0, 150) + (description.length > 150 ? '...' : ''),\n      platform: rawgGame.platforms.map(p => p.platform.name).join(', '),\n      genre: rawgGame.genres.map(g => g.name).join(', '),\n      hoursPlayed: 0,\n      image: rawgGame.background_image || 'https://placehold.co/400x250/374151/D1D5DB?text=No+Image',\n      isFavorite: false,\n      played: false,\n      achievements: [] \n    };\n  }\n\n  /**\n   * Mapea un objeto RawgAchievementApi a la interfaz GameAchievement de nuestra aplicación.\n   * @param rawgAchievement El objeto de logro de la API.\n   * @returns Un objeto GameAchievement compatible con tu aplicación (con 'completed' en false por defecto).\n   */\n  private mapRawgAchievementToGameAchievement(rawgAchievement: RawgAchievementApi): GameAchievement {\n    return {\n      id: rawgAchievement.id,\n      name: rawgAchievement.name,\n      description: rawgAchievement.description,\n      image: rawgAchievement.image || 'https://placehold.co/100x100/374151/D1D5DB?text=Ach',\n      percent: rawgAchievement.percent,\n      completed: false\n    };\n  }\n\n  /**\n   * Obtiene la lista de géneros disponibles de la API de RAWG.\n   * @returns Un Observable de un array de strings con los nombres de los géneros.\n   */\n  getGenres(): Observable {\n    const params = new HttpParams().set('key', this.API_KEY);\n    return this.http.get(`${this.BASE_URL}/genres`, { params }).pipe(\n      map(response => response.results.map((genre: any) => genre.name)),\n      catchError(error => {\n        console.error('Error fetching genres from RAWG API:', error);\n        return of([]);\n      })\n    );\n  }\n\n  /**\n   * Obtiene la lista de plataformas disponibles de la API de RAWG.\n   * @returns Un Observable de un array de strings con los nombres de las plataformas.\n   */\n  getPlatforms(): Observable {\n    const params = new HttpParams().set('key', this.API_KEY);\n    return this.http.get(`${this.BASE_URL}/platforms`, { params }).pipe(\n      map(response => response.results.map((platform: any) => platform.name)),\n      catchError(error => {\n        console.error('Error fetching platforms from RAWG API:', error);\n        return of([]);\n      })\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/RawgAchievementsApiResponse.html":{"url":"interfaces/RawgAchievementsApiResponse.html","title":"interface - RawgAchievementsApiResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  RawgAchievementsApiResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/api/api.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            count\n                                        \n                                \n                                \n                                        \n                                            results\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        count\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        count:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        results\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        results:         RawgAchievementApi[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         RawgAchievementApi[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient, HttpParams } from '@angular/common/http';\nimport { Observable, of } from 'rxjs';\nimport { map, catchError } from 'rxjs/operators';\nimport { Game, GameAchievement } from '../game/game.service';\n\n// Define la estructura de una respuesta de la API de RAWG para la lista de juegos\ninterface RawgApiResponse {\n  count: number;\n  next: string | null;\n  previous: string | null;\n  results: RawgGame[];\n}\n\n// Define la estructura simplificada de un juego de RAWG (ajusta según necesites más campos)\ninterface RawgGame {\n  id: number;\n  name: string;\n  background_image: string;\n  genres: { id: number; name: string; slug: string }[];\n  platforms: { platform: { id: number; name: string; slug: string } }[];\n  released: string;\n  description_raw?: string;\n  achievements_count?: number;\n}\n\n// Interfaz para la respuesta de la API de logros de RAWG\ninterface RawgAchievementsApiResponse {\n  count: number;\n  results: RawgAchievementApi[];\n}\n\n// Interfaz para la estructura de un logro individual de la API de RAWG\ninterface RawgAchievementApi {\n  id: number;\n  name: string;\n  description: string;\n  image: string;\n  percent: string;\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ApiService {\n  private readonly BASE_URL = 'https://api.rawg.io/api';\n  private readonly API_KEY = 'e8efc69ecead49639193319812de4f90';\n\n  constructor(private readonly http: HttpClient) { }\n\n  /**\n   * Obtiene una lista de juegos de la API de RAWG.\n   * @param searchQuery Término de búsqueda para juegos.\n   * @param genres IDs o slugs de géneros (separados por coma).\n   * @param platforms IDs o slugs de plataformas (separados por coma).\n   * @param page_size Número de resultados por página.\n   * @returns Un Observable de un array de objetos Game (transformado desde RawgGame).\n   */\n  getGames(searchQuery: string = '', genres: string = '', platforms: string = '', page_size: number = 20): Observable {\n    let params = new HttpParams().set('key', this.API_KEY).set('page_size', page_size.toString());\n\n    if (searchQuery) {\n      params = params.set('search', searchQuery);\n    }\n    if (genres) {\n      params = params.set('genres', genres);\n    }\n    if (platforms) {\n      params = params.set('platforms', platforms);\n    }\n\n    // Realiza la petición HTTP y mapea la respuesta al formato Game[]\n    return this.http.get(`${this.BASE_URL}/games`, { params }).pipe(\n      map(response => response.results.map(rawgGame => this.mapRawgGameToGame(rawgGame))),\n      catchError(error => {\n        console.error('Error fetching games from RAWG API:', error);\n        return of([]); // Retorna un observable de array vacío en caso de error\n      })\n    );\n  }\n\n  /**\n   * Obtiene los detalles completos de un juego específico por su ID.\n   * @param id El ID del juego en RAWG.\n   * @returns Un Observable de un objeto Game. Incluye la descripción completa si está disponible.\n   */\n  getGameDetails(id: number): Observable {\n    const params = new HttpParams().set('key', this.API_KEY);\n    return this.http.get(`${this.BASE_URL}/games/${id}`, { params }).pipe(\n      map(rawgGame => this.mapRawgGameToGame(rawgGame, true)), // Pasar true para indicar que es un detalle\n      catchError(error => {\n        console.error(`Error fetching details for game ID ${id} from RAWG API:`, error);\n        throw error; // Propaga el error para que el componente lo maneje\n      })\n    );\n  }\n\n  /**\n   * Obtiene la lista de logros para un juego específico por su ID.\n   * @param gameId El ID del juego en RAWG.\n   * @returns Un Observable de un array de objetos GameAchievement.\n   */\n  getGameAchievements(gameId: number): Observable {\n    const params = new HttpParams().set('key', this.API_KEY);\n    return this.http.get(`${this.BASE_URL}/games/${gameId}/achievements`, { params }).pipe(\n      map(response => response.results.map(rawgAchievement => this.mapRawgAchievementToGameAchievement(rawgAchievement))),\n      catchError(error => {\n        console.error(`Error fetching achievements for game ID ${gameId} from RAWG API:`, error);\n        return of([]); // Retorna un observable de array vacío en caso de error\n      })\n    );\n  }\n\n  /**\n   * Mapea un objeto RawgGame a la interfaz Game de nuestra aplicación.\n   * Esta función NO mapea los logros, ya que se obtienen de un endpoint separado.\n   * @param rawgGame El objeto RawgGame de la API.\n   * @param includeFullDescription Indica si se debe incluir la descripción completa (description_raw).\n   * @returns Un objeto Game compatible con tu aplicación.\n   */\n  private mapRawgGameToGame(rawgGame: RawgGame, includeFullDescription: boolean = false): Game {\n    // description_raw solo viene en la respuesta del endpoint de detalle de un juego (/games/{id})\n    const description = rawgGame.description_raw || rawgGame.name;\n    return {\n      id: rawgGame.id,\n      title: rawgGame.name,\n      description: includeFullDescription ? description : description.substring(0, 150) + (description.length > 150 ? '...' : ''),\n      platform: rawgGame.platforms.map(p => p.platform.name).join(', '),\n      genre: rawgGame.genres.map(g => g.name).join(', '),\n      hoursPlayed: 0,\n      image: rawgGame.background_image || 'https://placehold.co/400x250/374151/D1D5DB?text=No+Image',\n      isFavorite: false,\n      played: false,\n      achievements: [] \n    };\n  }\n\n  /**\n   * Mapea un objeto RawgAchievementApi a la interfaz GameAchievement de nuestra aplicación.\n   * @param rawgAchievement El objeto de logro de la API.\n   * @returns Un objeto GameAchievement compatible con tu aplicación (con 'completed' en false por defecto).\n   */\n  private mapRawgAchievementToGameAchievement(rawgAchievement: RawgAchievementApi): GameAchievement {\n    return {\n      id: rawgAchievement.id,\n      name: rawgAchievement.name,\n      description: rawgAchievement.description,\n      image: rawgAchievement.image || 'https://placehold.co/100x100/374151/D1D5DB?text=Ach',\n      percent: rawgAchievement.percent,\n      completed: false\n    };\n  }\n\n  /**\n   * Obtiene la lista de géneros disponibles de la API de RAWG.\n   * @returns Un Observable de un array de strings con los nombres de los géneros.\n   */\n  getGenres(): Observable {\n    const params = new HttpParams().set('key', this.API_KEY);\n    return this.http.get(`${this.BASE_URL}/genres`, { params }).pipe(\n      map(response => response.results.map((genre: any) => genre.name)),\n      catchError(error => {\n        console.error('Error fetching genres from RAWG API:', error);\n        return of([]);\n      })\n    );\n  }\n\n  /**\n   * Obtiene la lista de plataformas disponibles de la API de RAWG.\n   * @returns Un Observable de un array de strings con los nombres de las plataformas.\n   */\n  getPlatforms(): Observable {\n    const params = new HttpParams().set('key', this.API_KEY);\n    return this.http.get(`${this.BASE_URL}/platforms`, { params }).pipe(\n      map(response => response.results.map((platform: any) => platform.name)),\n      catchError(error => {\n        console.error('Error fetching platforms from RAWG API:', error);\n        return of([]);\n      })\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/RawgApiResponse.html":{"url":"interfaces/RawgApiResponse.html","title":"interface - RawgApiResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  RawgApiResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/api/api.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            count\n                                        \n                                \n                                \n                                        \n                                            next\n                                        \n                                \n                                \n                                        \n                                            previous\n                                        \n                                \n                                \n                                        \n                                            results\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        count\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        count:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        next\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        next:     string | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        previous\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        previous:     string | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        results\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        results:     RawgGame[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     RawgGame[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient, HttpParams } from '@angular/common/http';\nimport { Observable, of } from 'rxjs';\nimport { map, catchError } from 'rxjs/operators';\nimport { Game, GameAchievement } from '../game/game.service';\n\n// Define la estructura de una respuesta de la API de RAWG para la lista de juegos\ninterface RawgApiResponse {\n  count: number;\n  next: string | null;\n  previous: string | null;\n  results: RawgGame[];\n}\n\n// Define la estructura simplificada de un juego de RAWG (ajusta según necesites más campos)\ninterface RawgGame {\n  id: number;\n  name: string;\n  background_image: string;\n  genres: { id: number; name: string; slug: string }[];\n  platforms: { platform: { id: number; name: string; slug: string } }[];\n  released: string;\n  description_raw?: string;\n  achievements_count?: number;\n}\n\n// Interfaz para la respuesta de la API de logros de RAWG\ninterface RawgAchievementsApiResponse {\n  count: number;\n  results: RawgAchievementApi[];\n}\n\n// Interfaz para la estructura de un logro individual de la API de RAWG\ninterface RawgAchievementApi {\n  id: number;\n  name: string;\n  description: string;\n  image: string;\n  percent: string;\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ApiService {\n  private readonly BASE_URL = 'https://api.rawg.io/api';\n  private readonly API_KEY = 'e8efc69ecead49639193319812de4f90';\n\n  constructor(private readonly http: HttpClient) { }\n\n  /**\n   * Obtiene una lista de juegos de la API de RAWG.\n   * @param searchQuery Término de búsqueda para juegos.\n   * @param genres IDs o slugs de géneros (separados por coma).\n   * @param platforms IDs o slugs de plataformas (separados por coma).\n   * @param page_size Número de resultados por página.\n   * @returns Un Observable de un array de objetos Game (transformado desde RawgGame).\n   */\n  getGames(searchQuery: string = '', genres: string = '', platforms: string = '', page_size: number = 20): Observable {\n    let params = new HttpParams().set('key', this.API_KEY).set('page_size', page_size.toString());\n\n    if (searchQuery) {\n      params = params.set('search', searchQuery);\n    }\n    if (genres) {\n      params = params.set('genres', genres);\n    }\n    if (platforms) {\n      params = params.set('platforms', platforms);\n    }\n\n    // Realiza la petición HTTP y mapea la respuesta al formato Game[]\n    return this.http.get(`${this.BASE_URL}/games`, { params }).pipe(\n      map(response => response.results.map(rawgGame => this.mapRawgGameToGame(rawgGame))),\n      catchError(error => {\n        console.error('Error fetching games from RAWG API:', error);\n        return of([]); // Retorna un observable de array vacío en caso de error\n      })\n    );\n  }\n\n  /**\n   * Obtiene los detalles completos de un juego específico por su ID.\n   * @param id El ID del juego en RAWG.\n   * @returns Un Observable de un objeto Game. Incluye la descripción completa si está disponible.\n   */\n  getGameDetails(id: number): Observable {\n    const params = new HttpParams().set('key', this.API_KEY);\n    return this.http.get(`${this.BASE_URL}/games/${id}`, { params }).pipe(\n      map(rawgGame => this.mapRawgGameToGame(rawgGame, true)), // Pasar true para indicar que es un detalle\n      catchError(error => {\n        console.error(`Error fetching details for game ID ${id} from RAWG API:`, error);\n        throw error; // Propaga el error para que el componente lo maneje\n      })\n    );\n  }\n\n  /**\n   * Obtiene la lista de logros para un juego específico por su ID.\n   * @param gameId El ID del juego en RAWG.\n   * @returns Un Observable de un array de objetos GameAchievement.\n   */\n  getGameAchievements(gameId: number): Observable {\n    const params = new HttpParams().set('key', this.API_KEY);\n    return this.http.get(`${this.BASE_URL}/games/${gameId}/achievements`, { params }).pipe(\n      map(response => response.results.map(rawgAchievement => this.mapRawgAchievementToGameAchievement(rawgAchievement))),\n      catchError(error => {\n        console.error(`Error fetching achievements for game ID ${gameId} from RAWG API:`, error);\n        return of([]); // Retorna un observable de array vacío en caso de error\n      })\n    );\n  }\n\n  /**\n   * Mapea un objeto RawgGame a la interfaz Game de nuestra aplicación.\n   * Esta función NO mapea los logros, ya que se obtienen de un endpoint separado.\n   * @param rawgGame El objeto RawgGame de la API.\n   * @param includeFullDescription Indica si se debe incluir la descripción completa (description_raw).\n   * @returns Un objeto Game compatible con tu aplicación.\n   */\n  private mapRawgGameToGame(rawgGame: RawgGame, includeFullDescription: boolean = false): Game {\n    // description_raw solo viene en la respuesta del endpoint de detalle de un juego (/games/{id})\n    const description = rawgGame.description_raw || rawgGame.name;\n    return {\n      id: rawgGame.id,\n      title: rawgGame.name,\n      description: includeFullDescription ? description : description.substring(0, 150) + (description.length > 150 ? '...' : ''),\n      platform: rawgGame.platforms.map(p => p.platform.name).join(', '),\n      genre: rawgGame.genres.map(g => g.name).join(', '),\n      hoursPlayed: 0,\n      image: rawgGame.background_image || 'https://placehold.co/400x250/374151/D1D5DB?text=No+Image',\n      isFavorite: false,\n      played: false,\n      achievements: [] \n    };\n  }\n\n  /**\n   * Mapea un objeto RawgAchievementApi a la interfaz GameAchievement de nuestra aplicación.\n   * @param rawgAchievement El objeto de logro de la API.\n   * @returns Un objeto GameAchievement compatible con tu aplicación (con 'completed' en false por defecto).\n   */\n  private mapRawgAchievementToGameAchievement(rawgAchievement: RawgAchievementApi): GameAchievement {\n    return {\n      id: rawgAchievement.id,\n      name: rawgAchievement.name,\n      description: rawgAchievement.description,\n      image: rawgAchievement.image || 'https://placehold.co/100x100/374151/D1D5DB?text=Ach',\n      percent: rawgAchievement.percent,\n      completed: false\n    };\n  }\n\n  /**\n   * Obtiene la lista de géneros disponibles de la API de RAWG.\n   * @returns Un Observable de un array de strings con los nombres de los géneros.\n   */\n  getGenres(): Observable {\n    const params = new HttpParams().set('key', this.API_KEY);\n    return this.http.get(`${this.BASE_URL}/genres`, { params }).pipe(\n      map(response => response.results.map((genre: any) => genre.name)),\n      catchError(error => {\n        console.error('Error fetching genres from RAWG API:', error);\n        return of([]);\n      })\n    );\n  }\n\n  /**\n   * Obtiene la lista de plataformas disponibles de la API de RAWG.\n   * @returns Un Observable de un array de strings con los nombres de las plataformas.\n   */\n  getPlatforms(): Observable {\n    const params = new HttpParams().set('key', this.API_KEY);\n    return this.http.get(`${this.BASE_URL}/platforms`, { params }).pipe(\n      map(response => response.results.map((platform: any) => platform.name)),\n      catchError(error => {\n        console.error('Error fetching platforms from RAWG API:', error);\n        return of([]);\n      })\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/RawgGame.html":{"url":"interfaces/RawgGame.html","title":"interface - RawgGame","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  RawgGame\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/api/api.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            achievements_count\n                                        \n                                \n                                \n                                        \n                                            background_image\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            description_raw\n                                        \n                                \n                                \n                                        \n                                            genres\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            platforms\n                                        \n                                \n                                \n                                        \n                                            released\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        achievements_count\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        achievements_count:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        background_image\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        background_image:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        description_raw\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        description_raw:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        genres\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        genres:     literal type[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        platforms\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        platforms:     literal type[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        released\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        released:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient, HttpParams } from '@angular/common/http';\nimport { Observable, of } from 'rxjs';\nimport { map, catchError } from 'rxjs/operators';\nimport { Game, GameAchievement } from '../game/game.service';\n\n// Define la estructura de una respuesta de la API de RAWG para la lista de juegos\ninterface RawgApiResponse {\n  count: number;\n  next: string | null;\n  previous: string | null;\n  results: RawgGame[];\n}\n\n// Define la estructura simplificada de un juego de RAWG (ajusta según necesites más campos)\ninterface RawgGame {\n  id: number;\n  name: string;\n  background_image: string;\n  genres: { id: number; name: string; slug: string }[];\n  platforms: { platform: { id: number; name: string; slug: string } }[];\n  released: string;\n  description_raw?: string;\n  achievements_count?: number;\n}\n\n// Interfaz para la respuesta de la API de logros de RAWG\ninterface RawgAchievementsApiResponse {\n  count: number;\n  results: RawgAchievementApi[];\n}\n\n// Interfaz para la estructura de un logro individual de la API de RAWG\ninterface RawgAchievementApi {\n  id: number;\n  name: string;\n  description: string;\n  image: string;\n  percent: string;\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ApiService {\n  private readonly BASE_URL = 'https://api.rawg.io/api';\n  private readonly API_KEY = 'e8efc69ecead49639193319812de4f90';\n\n  constructor(private readonly http: HttpClient) { }\n\n  /**\n   * Obtiene una lista de juegos de la API de RAWG.\n   * @param searchQuery Término de búsqueda para juegos.\n   * @param genres IDs o slugs de géneros (separados por coma).\n   * @param platforms IDs o slugs de plataformas (separados por coma).\n   * @param page_size Número de resultados por página.\n   * @returns Un Observable de un array de objetos Game (transformado desde RawgGame).\n   */\n  getGames(searchQuery: string = '', genres: string = '', platforms: string = '', page_size: number = 20): Observable {\n    let params = new HttpParams().set('key', this.API_KEY).set('page_size', page_size.toString());\n\n    if (searchQuery) {\n      params = params.set('search', searchQuery);\n    }\n    if (genres) {\n      params = params.set('genres', genres);\n    }\n    if (platforms) {\n      params = params.set('platforms', platforms);\n    }\n\n    // Realiza la petición HTTP y mapea la respuesta al formato Game[]\n    return this.http.get(`${this.BASE_URL}/games`, { params }).pipe(\n      map(response => response.results.map(rawgGame => this.mapRawgGameToGame(rawgGame))),\n      catchError(error => {\n        console.error('Error fetching games from RAWG API:', error);\n        return of([]); // Retorna un observable de array vacío en caso de error\n      })\n    );\n  }\n\n  /**\n   * Obtiene los detalles completos de un juego específico por su ID.\n   * @param id El ID del juego en RAWG.\n   * @returns Un Observable de un objeto Game. Incluye la descripción completa si está disponible.\n   */\n  getGameDetails(id: number): Observable {\n    const params = new HttpParams().set('key', this.API_KEY);\n    return this.http.get(`${this.BASE_URL}/games/${id}`, { params }).pipe(\n      map(rawgGame => this.mapRawgGameToGame(rawgGame, true)), // Pasar true para indicar que es un detalle\n      catchError(error => {\n        console.error(`Error fetching details for game ID ${id} from RAWG API:`, error);\n        throw error; // Propaga el error para que el componente lo maneje\n      })\n    );\n  }\n\n  /**\n   * Obtiene la lista de logros para un juego específico por su ID.\n   * @param gameId El ID del juego en RAWG.\n   * @returns Un Observable de un array de objetos GameAchievement.\n   */\n  getGameAchievements(gameId: number): Observable {\n    const params = new HttpParams().set('key', this.API_KEY);\n    return this.http.get(`${this.BASE_URL}/games/${gameId}/achievements`, { params }).pipe(\n      map(response => response.results.map(rawgAchievement => this.mapRawgAchievementToGameAchievement(rawgAchievement))),\n      catchError(error => {\n        console.error(`Error fetching achievements for game ID ${gameId} from RAWG API:`, error);\n        return of([]); // Retorna un observable de array vacío en caso de error\n      })\n    );\n  }\n\n  /**\n   * Mapea un objeto RawgGame a la interfaz Game de nuestra aplicación.\n   * Esta función NO mapea los logros, ya que se obtienen de un endpoint separado.\n   * @param rawgGame El objeto RawgGame de la API.\n   * @param includeFullDescription Indica si se debe incluir la descripción completa (description_raw).\n   * @returns Un objeto Game compatible con tu aplicación.\n   */\n  private mapRawgGameToGame(rawgGame: RawgGame, includeFullDescription: boolean = false): Game {\n    // description_raw solo viene en la respuesta del endpoint de detalle de un juego (/games/{id})\n    const description = rawgGame.description_raw || rawgGame.name;\n    return {\n      id: rawgGame.id,\n      title: rawgGame.name,\n      description: includeFullDescription ? description : description.substring(0, 150) + (description.length > 150 ? '...' : ''),\n      platform: rawgGame.platforms.map(p => p.platform.name).join(', '),\n      genre: rawgGame.genres.map(g => g.name).join(', '),\n      hoursPlayed: 0,\n      image: rawgGame.background_image || 'https://placehold.co/400x250/374151/D1D5DB?text=No+Image',\n      isFavorite: false,\n      played: false,\n      achievements: [] \n    };\n  }\n\n  /**\n   * Mapea un objeto RawgAchievementApi a la interfaz GameAchievement de nuestra aplicación.\n   * @param rawgAchievement El objeto de logro de la API.\n   * @returns Un objeto GameAchievement compatible con tu aplicación (con 'completed' en false por defecto).\n   */\n  private mapRawgAchievementToGameAchievement(rawgAchievement: RawgAchievementApi): GameAchievement {\n    return {\n      id: rawgAchievement.id,\n      name: rawgAchievement.name,\n      description: rawgAchievement.description,\n      image: rawgAchievement.image || 'https://placehold.co/100x100/374151/D1D5DB?text=Ach',\n      percent: rawgAchievement.percent,\n      completed: false\n    };\n  }\n\n  /**\n   * Obtiene la lista de géneros disponibles de la API de RAWG.\n   * @returns Un Observable de un array de strings con los nombres de los géneros.\n   */\n  getGenres(): Observable {\n    const params = new HttpParams().set('key', this.API_KEY);\n    return this.http.get(`${this.BASE_URL}/genres`, { params }).pipe(\n      map(response => response.results.map((genre: any) => genre.name)),\n      catchError(error => {\n        console.error('Error fetching genres from RAWG API:', error);\n        return of([]);\n      })\n    );\n  }\n\n  /**\n   * Obtiene la lista de plataformas disponibles de la API de RAWG.\n   * @returns Un Observable de un array de strings con los nombres de las plataformas.\n   */\n  getPlatforms(): Observable {\n    const params = new HttpParams().set('key', this.API_KEY);\n    return this.http.get(`${this.BASE_URL}/platforms`, { params }).pipe(\n      map(response => response.results.map((platform: any) => platform.name)),\n      catchError(error => {\n        console.error('Error fetching platforms from RAWG API:', error);\n        return of([]);\n      })\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/RecoverPasswordComponent.html":{"url":"components/RecoverPasswordComponent.html","title":"component - RecoverPasswordComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  RecoverPasswordComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/features/recover-password/recover-password.component.ts\n\n\n\n    \n        Description\n    \n    \n        Componente para la recuperación de contraseña de usuarios.\nPermite a los usuarios actualizar su contraseña proporcionando su correo electrónico\ny una nueva contraseña que cumpla con los requisitos de seguridad. Utiliza formularios reactivos\ny validadores personalizados.\nExample :\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n                OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-recover-password\n            \n\n\n\n            \n                styleUrls\n                ./recover-password.component.css\n            \n\n\n\n            \n                templateUrl\n                ./recover-password.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                authSubscription\n                            \n                            \n                                recoveryForm\n                            \n                            \n                                recoveryMessage\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onSubmit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService, router: Router, fb: FormBuilder)\n                    \n                \n                        \n                            \n                                Defined in src/app/features/recover-password/recover-password.component.ts:28\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        fb\n                                                  \n                                                        \n                                                                    FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/recover-password/recover-password.component.ts:72\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/recover-password/recover-password.component.ts:36\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onSubmit\n                        \n                    \n                \n            \n            \n                \nonSubmit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/recover-password/recover-password.component.ts:54\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        authSubscription\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription\n\n                    \n                \n                    \n                        \n                                Defined in src/app/features/recover-password/recover-password.component.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        recoveryForm\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FormGroup\n\n                    \n                \n                    \n                        \n                                Defined in src/app/features/recover-password/recover-password.component.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        recoveryMessage\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/features/recover-password/recover-password.component.ts:27\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { Subscription } from 'rxjs';\nimport { AuthService } from 'src/app/core/auth/auth.service';\nimport { emailValidator, passwordStrengthValidator, passwordsMatchValidator } from 'src/app/utils/validator';\n\n/**\n * @description \n * Componente para la recuperación de contraseña de usuarios.\n * @summary \n * Permite a los usuarios actualizar su contraseña proporcionando su correo electrónico\n * y una nueva contraseña que cumpla con los requisitos de seguridad. Utiliza formularios reactivos\n * y validadores personalizados.\n * @usageNotes\n * ```html\n * \n * ```\n */\n@Component({\n\tselector: 'app-recover-password',\n\ttemplateUrl: './recover-password.component.html',\n\tstyleUrls: ['./recover-password.component.css']\n})\nexport class RecoverPasswordComponent implements OnInit, OnDestroy {\n\trecoveryForm!: FormGroup;\n\trecoveryMessage: string = '';\n\tprivate authSubscription!: Subscription;\n\n\tconstructor(\n\t\tprivate readonly authService: AuthService,\n\t\tprivate readonly router: Router,\n\t\tprivate readonly fb: FormBuilder\n\t) { }\n\n\tngOnInit(): void {\n\t\t// Inicializa el formulario reactivo para la recuperación de contraseña\n\t\tthis.recoveryForm = this.fb.group({\n\t\t\temail: ['', [Validators.required, emailValidator()]],\n\t\t\tnewPassword: ['', [Validators.required, passwordStrengthValidator()]],\n\t\t\tconfirmPassword: ['', [Validators.required]]\n\t\t}, {\n\t\t\tvalidators: passwordsMatchValidator('newPassword', 'confirmPassword')\n\t\t});\n\n\t\t// Si el usuario ya está logueado, redirige al inicio\n\t\tthis.authSubscription = this.authService.currentUser.subscribe(user => {\n\t\t\tif (user) {\n\t\t\t\tthis.router.navigate(['/inicio']);\n\t\t\t}\n\t\t});\n\t}\n\n\tonSubmit(): void {\n\t\tif (this.recoveryForm.invalid) {\n\t\t\tthis.recoveryForm.markAllAsTouched();\n\t\t\tthis.recoveryMessage = 'Error al enviar formulario. Por favor, revisa los campos.';\n\t\t\treturn;\n\t\t}\n\n\t\tconst { email, newPassword } = this.recoveryForm.value;\n\t\tconst result = this.authService.updatePassword(email, newPassword);\n\n\t\tif (result.success) {\n\t\t\tthis.recoveryMessage = `${result.message}`;\n\t\t\tsetTimeout(() => { this.router.navigate(['/login']); }, 1000);\n\t\t} else {\n\t\t\tthis.recoveryMessage = `${result.message}`;\n\t\t}\n\t}\n\n\tngOnDestroy(): void {\n\t\tif (this.authSubscription) {\n\t\t\tthis.authSubscription.unsubscribe();\n\t\t}\n\t}\n}\n\n    \n\n    \n        \n    \n        \n            Recuperar Contraseña\n            \n            \n                \n                    Correo Electrónico\n                    \n                    Este campo es obligatorio.\n                    Correo inválido.\n                \n                \n                    Nueva Contraseña\n                    \n                    Este campo es obligatorio.\n                    Debe tener mínimo 8 caracteres, 1 número, 1 mayúscula y 1 caracter especial.\n                \n                \n                    Confirmar Nueva Contraseña\n                    \n                    Este campo es obligatorio.\n                    Las contraseñas no coinciden.\n                \n                \n                    Cambiar contraseña\n                \n                \n                    Volver al Login\n                \n            \n        \n    \n\n    \n\n    \n                \n                    ./recover-password.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                        Recuperar Contraseña                                                            Correo Electrónico                                        Este campo es obligatorio.                    Correo inválido.                                                    Nueva Contraseña                                        Este campo es obligatorio.                    Debe tener mínimo 8 caracteres, 1 número, 1 mayúscula y 1 caracter especial.                                                    Confirmar Nueva Contraseña                                        Este campo es obligatorio.                    Las contraseñas no coinciden.                                                    Cambiar contraseña                                                    Volver al Login                                        '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CategoryComponent', 'selector': 'app-category'},{'name': 'ConfirmationModalComponent', 'selector': 'app-confirmation-modal'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'GameCardComponent', 'selector': 'app-game-card'},{'name': 'GameDetailModalComponent', 'selector': 'app-game-detail-modal'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MyLibraryComponent', 'selector': 'app-my-library'},{'name': 'RecoverPasswordComponent', 'selector': 'app-recover-password'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'UserProfileComponent', 'selector': 'app-user-profile'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'RecoverPasswordComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/RegisterComponent.html":{"url":"components/RegisterComponent.html","title":"component - RegisterComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  RegisterComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/features/register/register.component.ts\n\n\n\n    \n        Description\n    \n    \n        Componente para el registro de nuevos usuarios.\nPermite a los usuarios crear una nueva cuenta proporcionando sus datos personales\ny una contraseña segura. Incluye validación de formularios reactivos con validadores personalizados.\nExample :\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n                OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-register\n            \n\n\n\n            \n                styleUrls\n                ./register.component.css\n            \n\n\n\n            \n                templateUrl\n                ./register.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                authSubscription\n                            \n                            \n                                birthDay\n                            \n                            \n                                confirmPassword\n                            \n                            \n                                email\n                            \n                            \n                                error\n                            \n                            \n                                fullName\n                            \n                            \n                                message\n                            \n                            \n                                password\n                            \n                            \n                                registerForm\n                            \n                            \n                                registerMessage\n                            \n                            \n                                username\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onSubmit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService, router: Router, fb: FormBuilder)\n                    \n                \n                        \n                            \n                                Defined in src/app/features/register/register.component.ts:36\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        fb\n                                                  \n                                                        \n                                                                    FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/register/register.component.ts:86\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/register/register.component.ts:44\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onSubmit\n                        \n                    \n                \n            \n            \n                \nonSubmit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/register/register.component.ts:67\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        authSubscription\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription\n\n                    \n                \n                    \n                        \n                                Defined in src/app/features/register/register.component.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        birthDay\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/features/register/register.component.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        confirmPassword\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/features/register/register.component.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/features/register/register.component.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        error\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/features/register/register.component.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        fullName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/features/register/register.component.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        message\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/features/register/register.component.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/features/register/register.component.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        registerForm\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FormGroup\n\n                    \n                \n                    \n                        \n                                Defined in src/app/features/register/register.component.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        registerMessage\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/features/register/register.component.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        username\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/features/register/register.component.ts:30\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { AuthService, User } from 'src/app/core/auth/auth.service';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { emptyStringValidator, emailValidator, minAgeValidator, passwordStrengthValidator, passwordsMatchValidator } from '../../utils/validator';\nimport { Subscription } from 'rxjs';\n\n/**\n * @description \n * Componente para el registro de nuevos usuarios.\n * @summary \n * Permite a los usuarios crear una nueva cuenta proporcionando sus datos personales\n * y una contraseña segura. Incluye validación de formularios reactivos con validadores personalizados.\n * @usageNotes\n * ```html\n * \n * ```\n */\n@Component({\n\tselector: 'app-register',\n\ttemplateUrl: './register.component.html',\n\tstyleUrls: ['./register.component.css']\n})\nexport class RegisterComponent implements OnInit, OnDestroy {\n\tregisterMessage: string = '';\n\tregisterForm!: FormGroup;\n\tprivate authSubscription!: Subscription;\n\n\tfullName = '';\n\tusername = '';\n\temail = '';\n\tbirthDay = '';\n\tpassword = '';\n\tconfirmPassword = '';\n\tmessage = '';\n\terror = '';\n\n\tconstructor(\n\t\tprivate readonly authService: AuthService,\n\t\tprivate readonly router: Router,\n\t\tprivate readonly fb: FormBuilder\n\t) { }\n\n\tngOnInit(): void {\n\t\t// Inicializa el formulario reactivo para el registro con validaciones personalizadas\n\t\tthis.registerForm = this.fb.group({\n\t\t\tfullName: ['', [Validators.required, emptyStringValidator()]],\n\t\t\tusername: ['', [Validators.required, emptyStringValidator()]],\n\t\t\temail: ['', [Validators.required, emailValidator()]],\n\t\t\tbirthDay: ['', [Validators.required, minAgeValidator(13)]],\n\t\t\tpassword: ['', [Validators.required, passwordStrengthValidator()]],\n\t\t\tconfirmPassword: ['', [Validators.required]]\n\t\t}, {\n\t\t\tvalidators: passwordsMatchValidator('password', 'confirmPassword')\n\t\t});\n\n\t\t// Si el usuario ya está logueado, redirige al inicio para evitar que se registre de nuevo\n\t\tthis.authSubscription = this.authService.currentUser.subscribe(user => {\n\t\t\tif (user) {\n\t\t\t\tthis.router.navigate(['/inicio']);\n\t\t\t}\n\t\t});\n\t\tconsole.log(this.registerForm.invalid);\n\t\t\n\t}\n\n\tonSubmit(): void {\n\t\tif (this.registerForm.invalid) {\n\t\t\tthis.registerForm.markAllAsTouched();\n\t\t\tthis.registerMessage = 'Error al enviar formulario. Por favor, revisa los campos.';\n\t\t\treturn;\n\t\t}\n\n\t\tconst newUser = this.registerForm.value;\n\t\tconst result = this.authService.register(newUser);\n\n\t\tif (result.success) {\n\t\t\tthis.registerMessage = 'Registro exitoso. Redirigiendo a Login...';\n\t\t\tsetTimeout(() => { this.router.navigate(['/login']); }, 1000);\n\t\t} else {\n\t\t\tthis.registerMessage = `${result.message}`;\n\t\t}\n\n\t}\n\n\tngOnDestroy(): void {\n\t\tif (this.authSubscription) {\n\t\t\tthis.authSubscription.unsubscribe();\n\t\t}\n\t}\n}\n\n    \n\n    \n        \n    \n        Registro\n        \n        \n            \n                Nombre completo\n                \n                Este campo es obligatorio.\n                Debes ingresar tu nombre completo.\n            \n            \n                Usuario\n                \n                Debes ingresar un nombre de usuario.\n                Debes ingresar un nombre de usuario.\n            \n\n            \n                Correo electrónico\n                \n                Este campo es obligatorio.\n                Correo inválido.\n            \n\n            \n                Fecha de nacimiento\n                \n                Este campo es obligatorio.\n                Debes tener al menos 13 años.\n            \n\n            \n                Contraseña\n                \n                Este campo es obligatorio.\n                Debe tener mínimo 8 caracteres, 1 número, 1 mayúscula y 1 caracter especial.\n            \n\n            \n                Confirmar contraseña\n                \n                Este campo es obligatorio.\n                Las contraseñas no coinciden.\n            \n            \n                Enviar\n                Limpiar\n            \n            \n                    ¿Ya tienes una cuenta? Inicia sesión aquí\n                \n        \n    \n\n\n\n    \n\n    \n                \n                    ./register.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            Registro                                            Nombre completo                                Este campo es obligatorio.                Debes ingresar tu nombre completo.                                        Usuario                                Debes ingresar un nombre de usuario.                Debes ingresar un nombre de usuario.                                        Correo electrónico                                Este campo es obligatorio.                Correo inválido.                                        Fecha de nacimiento                                Este campo es obligatorio.                Debes tener al menos 13 años.                                        Contraseña                                Este campo es obligatorio.                Debe tener mínimo 8 caracteres, 1 número, 1 mayúscula y 1 caracter especial.                                        Confirmar contraseña                                Este campo es obligatorio.                Las contraseñas no coinciden.                                        Enviar                Limpiar                                            ¿Ya tienes una cuenta? Inicia sesión aquí                            '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CategoryComponent', 'selector': 'app-category'},{'name': 'ConfirmationModalComponent', 'selector': 'app-confirmation-modal'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'GameCardComponent', 'selector': 'app-game-card'},{'name': 'GameDetailModalComponent', 'selector': 'app-game-detail-modal'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MyLibraryComponent', 'selector': 'app-my-library'},{'name': 'RecoverPasswordComponent', 'selector': 'app-recover-password'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'UserProfileComponent', 'selector': 'app-user-profile'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'RegisterComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/User.html":{"url":"interfaces/User.html","title":"interface - User","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/auth/auth.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            birthDay\n                                        \n                                \n                                \n                                        \n                                            email\n                                        \n                                \n                                \n                                        \n                                            fullName\n                                        \n                                \n                                \n                                        \n                                            password\n                                        \n                                \n                                \n                                        \n                                            role\n                                        \n                                \n                                \n                                        \n                                            username\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        birthDay\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        birthDay:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        fullName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        fullName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        password\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        password:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        role\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        role:     \"admin\" | \"normal\"\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     \"admin\" | \"normal\"\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        username\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        username:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { BehaviorSubject, Observable } from 'rxjs';\n\n// Claves de almacenamiento\nconst AUTH_STORAGE_KEY = 'my_game_library_users';\nconst CURRENT_USER_KEY = 'my_game_library_currentUser';\nconst USER_GAMES_KEY = 'my_game_library_userGames';\n\nexport interface User {\n\tfullName: string;\n\tusername: string;\n\temail: string;\n\tbirthDay: string;\n\tpassword: string;\n\trole: 'admin' | 'normal';\n}\n\n@Injectable({\n\tprovidedIn: 'root'\n})\nexport class AuthService {\n\tprivate readonly currentUserSubject: BehaviorSubject;\n  \tpublic currentUser: Observable;\n\n\tconstructor() {\n\t\tthis.init();\n\t\tconst storedUser = localStorage.getItem(CURRENT_USER_KEY);\n\t\tthis.currentUserSubject = new BehaviorSubject(\n\t\t\tstoredUser ? JSON.parse(storedUser) : null\n\t\t);\n\t\tthis.currentUser = this.currentUserSubject.asObservable();\n\t}\n\n\t// Inicializa algunos usuarios de prueba\n\tpublic init(): void {\n\t\tif (!localStorage.getItem(AUTH_STORAGE_KEY)) {\n\t\t\tlocalStorage.setItem(AUTH_STORAGE_KEY, JSON.stringify([\n\t\t\t\t{\n\t\t\t\t\tfullName: \"Oscar Sanzana\",\n\t\t\t\t\tusername: 'admin',\n\t\t\t\t\temail: \"oscar.sanzana.97@gmail.com\",\n\t\t\t\t\tbirthDay: \"1997-11-17\",\n\t\t\t\t\tpassword: 'Admin123!',\n\t\t\t\t\trole: 'admin'\n\t\t\t\t}\n\t\t\t]));\n\t\t}\n\t}\n\n\t// Obtener usuario actual\n\tpublic get getCurrentUser(): User | null {\n\t\treturn this.currentUserSubject.value;\n\t}\n\n\t// Iniciar sesión\n  \tlogin(username: string, password: string): { success: boolean; message?: string } {\n\t\tconst users: User[] = JSON.parse(localStorage.getItem(AUTH_STORAGE_KEY) ?? '[]');\n\t\tconst user = users.find(u => u.username === username && u.password === password);\n\t\tif (user) {\n            localStorage.setItem(CURRENT_USER_KEY, JSON.stringify(user));\n\t\t\tthis.currentUserSubject.next(user);\n            return { success: true };\n        }\n\n\t\treturn { success: false, message: 'Nombre de usuario o contraseña incorrectos.' };\n\t}\n\n\t// Registrar usuario\n\tregister(newUser: User): { success: boolean; message?: string } {\n        const users = JSON.parse(localStorage.getItem(AUTH_STORAGE_KEY) ?? '[]');\n        if (users.some((u: { username: string; }) => u.username === newUser.username)) {\n            return { success: false, message: 'El nombre de usuario ya existe.' };\n        }\n        users.push(newUser);\n        localStorage.setItem(AUTH_STORAGE_KEY, JSON.stringify(users));\n\n        return { success: true, message: 'Registro exitoso. ¡Ahora puedes iniciar sesión!' };\n    }\n\n\t// Función para actualizar la contrasena de un usuario\n\tupdatePassword (userEmail: string, newPassword: string): { success: boolean; message?: string } {\n        let users = JSON.parse(localStorage.getItem(AUTH_STORAGE_KEY) ?? '[]');\n        const userIndex = users.findIndex((u: { email: string; }) => u.email === userEmail);\n\n        if (userIndex === -1) {\n            return { success: false, message: 'Usuario no encontrado.' };\n        }\n\n        users[userIndex].password = newPassword;\n        localStorage.setItem(AUTH_STORAGE_KEY, JSON.stringify(users));\n\n\t\tconst currentUser = this.getCurrentUser;\n        if (currentUser && currentUser.email === userEmail) {\n            localStorage.setItem(CURRENT_USER_KEY, JSON.stringify(users[userIndex]));\n        }\n\n        return { success: true, message: 'Contraseña actualizada correctamente. Redirigiendo a Login...' };\n    }\n\n\t// Función para actualizar el perfil de un usuario\n\tupdateProfile(originalUsername: string, newUserData: User): { success: boolean; message?: string } {\n\t\tlet users = JSON.parse(localStorage.getItem(AUTH_STORAGE_KEY) ?? '[]');\n        const userIndex = users.findIndex((u: { username: string; }) => u.username === originalUsername);\n\n\t\tif (userIndex === -1) {\n            return { success: false, message: 'Usuario no encontrado.' };\n        }\n\n\t\t// Si el nuevo nombre de usuario es diferente y ya existe\n        if (newUserData.username && newUserData.username !== originalUsername && users.some((u: { username: string; }) => u.username === newUserData.username)) {\n            return { success: false, message: 'El nuevo nombre de usuario ya está en uso.' };\n        }\n\n\t\tusers[userIndex] = { ...users[userIndex], ...newUserData };\n        localStorage.setItem(AUTH_STORAGE_KEY, JSON.stringify(users));\n\t\t\n\t\tconst currentUser = this.getCurrentUser;\n        if (currentUser && currentUser.username === originalUsername) {\n            localStorage.setItem(CURRENT_USER_KEY, JSON.stringify(users[userIndex]));\n        }\n\n\t\treturn { success: true, message: 'Perfil actualizado correctamente.' };\n\t}\n\n\tlogout(): void {\n        localStorage.removeItem(CURRENT_USER_KEY);\n\t\tthis.currentUserSubject.next(null);\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/UserProfileComponent.html":{"url":"components/UserProfileComponent.html","title":"component - UserProfileComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  UserProfileComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/features/user-profile/user-profile.component.ts\n\n\n\n    \n        Description\n    \n    \n        Componente para mostrar y permitir la edición del perfil de usuario.\nEste componente carga los datos del usuario autenticado, los muestra en un formulario\nreactivo y permite al usuario actualizar su nombre completo, nombre de usuario y contraseña.\nIncluye validaciones y mensajes de estado.\nExample :\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n                OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-user-profile\n            \n\n\n\n            \n                styleUrls\n                ./user-profile.component.css\n            \n\n\n\n            \n                templateUrl\n                ./user-profile.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                authSubscription\n                            \n                            \n                                currentUser\n                            \n                            \n                                profileForm\n                            \n                            \n                                profileMessage\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                handleProfileUpdate\n                            \n                            \n                                initProfileForm\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService, fb: FormBuilder, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/features/user-profile/user-profile.component.ts:29\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        fb\n                                                  \n                                                        \n                                                                    FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        handleProfileUpdate\n                        \n                    \n                \n            \n            \n                \nhandleProfileUpdate()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/user-profile/user-profile.component.ts:59\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        initProfileForm\n                        \n                    \n                \n            \n            \n                \ninitProfileForm(user: User)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/user-profile/user-profile.component.ts:48\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                user\n                                            \n                                                            User\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/user-profile/user-profile.component.ts:91\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/user-profile/user-profile.component.ts:37\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        authSubscription\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription\n\n                    \n                \n                    \n                        \n                                Defined in src/app/features/user-profile/user-profile.component.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        currentUser\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/features/user-profile/user-profile.component.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        profileForm\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FormGroup\n\n                    \n                \n                    \n                        \n                                Defined in src/app/features/user-profile/user-profile.component.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        profileMessage\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/features/user-profile/user-profile.component.ts:28\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { Subscription } from 'rxjs';\nimport { AuthService, User } from 'src/app/core/auth/auth.service';\nimport { emailValidator, emptyStringValidator, minAgeValidator, passwordStrengthValidator } from 'src/app/utils/validator';\n\n/**\n * @description \n * Componente para mostrar y permitir la edición del perfil de usuario.\n * @summary \n * Este componente carga los datos del usuario autenticado, los muestra en un formulario\n * reactivo y permite al usuario actualizar su nombre completo, nombre de usuario y contraseña.\n * Incluye validaciones y mensajes de estado.\n * @usageNotes\n * ```html\n * \n * ```\n */\n@Component({\n\tselector: 'app-user-profile',\n\ttemplateUrl: './user-profile.component.html',\n\tstyleUrls: ['./user-profile.component.css']\n})\nexport class UserProfileComponent implements OnInit, OnDestroy {\n\tcurrentUser: User | null = null;\n\tprofileForm!: FormGroup;\n\tprofileMessage: string = '';\n\tprivate authSubscription!: Subscription;\n\n\tconstructor(\n\t\tprivate readonly authService: AuthService,\n\t\tprivate readonly fb: FormBuilder,\n\t\tprivate readonly router: Router\n\t) { }\n\n\tngOnInit(): void {\n\t\t// Suscribe al estado del usuario. Cuando cambie, actualiza el formulario.\n\t\tthis.authSubscription = this.authService.currentUser.subscribe(user => {\n\t\t\tthis.currentUser = user;\n\t\t\tif (user) {\n\t\t\t\tthis.initProfileForm(user);\n\t\t\t}\n\t\t});\n\t}\n\n\t// Inicializa el formulario de perfil con los datos del usuario actual\n\tinitProfileForm(user: User): void {\n\t\tthis.profileForm = this.fb.group({\n\t\t\tfullName: [user.fullName, [Validators.required, emptyStringValidator()]],\n\t\t\tusername: [user.username, [Validators.required, emptyStringValidator()]],\n\t\t\temail: [{ value: user.email, disabled: true }, [Validators.required, emailValidator()]],\n\t\t\tbirthDay: [Date.parse(user.birthDay), [Validators.required, minAgeValidator(13)]],\n\t\t\tpassword: [user.password, [Validators.required, passwordStrengthValidator()]]\n\t\t});\n\t}\n\n\t// Maneja la actualización del perfil\n\thandleProfileUpdate(): void {\n\t\tif (this.profileForm.invalid) {\n\t\t\tthis.profileForm.markAllAsTouched();\n\t\t\tthis.profileMessage = 'Error al actualizar perfil. Por favor, revisa los campos.';\n\t\t\treturn;\n\t\t}\n\n\t\tif (!this.currentUser) {\n\t\t\tthis.profileMessage = 'Error: No hay usuario autenticado.';\n\t\t\treturn;\n\t\t}\n\n\t\tconst updatedData: User = {\n\t\t\tfullName: this.profileForm.get('fullName')?.value,\n\t\t\tusername: this.profileForm.get('username')?.value,\n\t\t\temail: this.currentUser.email,\n\t\t\tbirthDay: this.profileForm.get('birthDay')?.value,\n\t\t\tpassword: this.profileForm.get('password')?.value,\n\t\t\trole: this.currentUser.role\n\t\t};\n\n\t\tconst result = this.authService.updateProfile(this.currentUser.username, updatedData);\n\n\t\tif (result.success) {\n\t\t\tthis.profileMessage = `${result.message}`;\n\t\t\tsetTimeout(() => { this.router.navigate(['/inicio']); }, 1000); // Redirige al inicio\n\t\t} else {\n\t\t\tthis.profileMessage = `${result.message}`;\n\t\t}\n\t}\n\n\t// Desuscribe para evitar fugas de memoria\n\tngOnDestroy(): void {\n\t\tif (this.authSubscription) {\n\t\t\tthis.authSubscription.unsubscribe();\n\t\t}\n\t}\n}\n\n    \n\n    \n        \n    \n        \n            \n                Mi Perfil\n                \n                \n                    \n                        Nombre completo\n                        \n                        Este campo es obligatorio.\n                        Este campo es obligatorio.\n                    \n                    \n                        Nombre de Usuario\n                        \n                        Este campo es obligatorio.\n                        Debes ingresar un nombre de usuario.\n                    \n                    \n                        Correo Electrónico\n                        \n                    \n                    \n                        Fecha de nacimiento\n                        \n                        Este campo es obligatorio.\n                        Debes tener al menos 13 años.\n                    \n                    \n                        Contraseña\n                        \n                        Este campo es obligatorio.\n                        Debe tener mínimo 8 caracteres, 1 número, 1 mayúscula y 1 caracter especial.\n                    \n                    \n                        Rol\n                        \n                    \n                    \n                        Guardar Cambios\n                    \n                \n            \n            \n                \n                    Acceso Requerido\n                    Inicia sesión para ver y editar tu perfil.\n                    Ir a Login\n                \n            \n        \n    \n\n    \n\n    \n                \n                    ./user-profile.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                        Mi Perfil                                                                            Nombre completo                                                Este campo es obligatorio.                        Este campo es obligatorio.                                                                Nombre de Usuario                                                Este campo es obligatorio.                        Debes ingresar un nombre de usuario.                                                                Correo Electrónico                                                                                        Fecha de nacimiento                                                Este campo es obligatorio.                        Debes tener al menos 13 años.                                                                Contraseña                                                Este campo es obligatorio.                        Debe tener mínimo 8 caracteres, 1 número, 1 mayúscula y 1 caracter especial.                                                                Rol                                                                                        Guardar Cambios                                                                                                Acceso Requerido                    Inicia sesión para ver y editar tu perfil.                    Ir a Login                                        '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CategoryComponent', 'selector': 'app-category'},{'name': 'ConfirmationModalComponent', 'selector': 'app-confirmation-modal'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'GameCardComponent', 'selector': 'app-game-card'},{'name': 'GameDetailModalComponent', 'selector': 'app-game-detail-modal'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MyLibraryComponent', 'selector': 'app-my-library'},{'name': 'RecoverPasswordComponent', 'selector': 'app-recover-password'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'UserProfileComponent', 'selector': 'app-user-profile'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'UserProfileComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app/app.component.ts\n            \n            component\n            AppComponent\n            \n                20 %\n                (1/5)\n            \n        \n        \n            \n                \n                src/app/core/api/api.service.ts\n            \n            injectable\n            ApiService\n            \n                63 %\n                (7/11)\n            \n        \n        \n            \n                \n                src/app/core/api/api.service.ts\n            \n            interface\n            RawgAchievementApi\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/core/api/api.service.ts\n            \n            interface\n            RawgAchievementsApiResponse\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/core/api/api.service.ts\n            \n            interface\n            RawgApiResponse\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/core/api/api.service.ts\n            \n            interface\n            RawgGame\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/app/core/auth/auth.service.ts\n            \n            injectable\n            AuthService\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/app/core/auth/auth.service.ts\n            \n            interface\n            User\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                        src/app/core/auth/auth.service.ts\n            \n            variable\n            AUTH_STORAGE_KEY\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app/core/auth/auth.service.ts\n            \n            variable\n            CURRENT_USER_KEY\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app/core/auth/auth.service.ts\n            \n            variable\n            USER_GAMES_KEY\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/core/game/game.service.ts\n            \n            injectable\n            GameService\n            \n                14 %\n                (1/7)\n            \n        \n        \n            \n                \n                src/app/core/game/game.service.ts\n            \n            interface\n            Game\n            \n                9 %\n                (1/11)\n            \n        \n        \n            \n                \n                src/app/core/game/game.service.ts\n            \n            interface\n            GameAchievement\n            \n                14 %\n                (1/7)\n            \n        \n        \n            \n                \n                        src/app/core/game/game.service.ts\n            \n            variable\n            USER_GAMES_KEY\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/features/category/category.component.ts\n            \n            component\n            CategoryComponent\n            \n                3 %\n                (1/27)\n            \n        \n        \n            \n                \n                        src/app/features/category/category.component.ts\n            \n            variable\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/features/home/home.component.ts\n            \n            component\n            HomeComponent\n            \n                14 %\n                (1/7)\n            \n        \n        \n            \n                \n                src/app/features/login/login.component.ts\n            \n            component\n            LoginComponent\n            \n                10 %\n                (1/10)\n            \n        \n        \n            \n                \n                src/app/features/my-library/my-library.component.ts\n            \n            component\n            MyLibraryComponent\n            \n                3 %\n                (1/28)\n            \n        \n        \n            \n                \n                src/app/features/recover-password/recover-password.component.ts\n            \n            component\n            RecoverPasswordComponent\n            \n                12 %\n                (1/8)\n            \n        \n        \n            \n                \n                src/app/features/register/register.component.ts\n            \n            component\n            RegisterComponent\n            \n                6 %\n                (1/16)\n            \n        \n        \n            \n                \n                src/app/features/user-profile/user-profile.component.ts\n            \n            component\n            UserProfileComponent\n            \n                10 %\n                (1/10)\n            \n        \n        \n            \n                \n                        src/app/guards/auth.guard.ts\n            \n            variable\n            authGuard\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/shared/confirmation-modal/confirmation-modal.component.ts\n            \n            component\n            ConfirmationModalComponent\n            \n                7 %\n                (1/13)\n            \n        \n        \n            \n                \n                        src/app/shared/confirmation-modal/confirmation-modal.component.ts\n            \n            variable\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/shared/footer/footer.component.ts\n            \n            component\n            FooterComponent\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/shared/game-card/game-card.component.ts\n            \n            component\n            GameCardComponent\n            \n                10 %\n                (1/10)\n            \n        \n        \n            \n                \n                src/app/shared/game-detail-modal/game-detail-modal.component.ts\n            \n            component\n            GameDetailModalComponent\n            \n                33 %\n                (4/12)\n            \n        \n        \n            \n                \n                        src/app/shared/game-detail-modal/game-detail-modal.component.ts\n            \n            variable\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/shared/header/header.component.ts\n            \n            component\n            HeaderComponent\n            \n                25 %\n                (1/4)\n            \n        \n        \n            \n                \n                        src/app/utils/validator.ts\n            \n            function\n            emailValidator\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app/utils/validator.ts\n            \n            function\n            emptyStringValidator\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app/utils/validator.ts\n            \n            function\n            minAgeValidator\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app/utils/validator.ts\n            \n            function\n            passwordsMatchValidator\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app/utils/validator.ts\n            \n            function\n            passwordStrengthValidator\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ^16.2.0\n        \n            @angular/common : ^16.2.0\n        \n            @angular/compiler : ^16.2.0\n        \n            @angular/core : ^16.2.0\n        \n            @angular/forms : ^16.2.0\n        \n            @angular/material : ^16.2.14\n        \n            @angular/platform-browser : ^16.2.0\n        \n            @angular/platform-browser-dynamic : ^16.2.0\n        \n            @angular/router : ^16.2.0\n        \n            @fortawesome/fontawesome-free : ^6.7.2\n        \n            bootstrap : ^5.3.6\n        \n            rxjs : ~7.8.0\n        \n            tslib : ^2.3.0\n        \n            zone.js : ~0.13.0\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            emailValidator   (src/.../validator.ts)\n                        \n                        \n                            emptyStringValidator   (src/.../validator.ts)\n                        \n                        \n                            minAgeValidator   (src/.../validator.ts)\n                        \n                        \n                            passwordsMatchValidator   (src/.../validator.ts)\n                        \n                        \n                            passwordStrengthValidator   (src/.../validator.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/utils/validator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        emailValidator\n                        \n                    \n                \n            \n            \n                \nemailValidator()\n                \n            \n\n\n\n\n            \n                \n\n                        \n                            Returns :     ValidatorFn\n\n                        \n                            \n                                Una función validadora.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        emptyStringValidator\n                        \n                    \n                \n            \n            \n                \nemptyStringValidator()\n                \n            \n\n\n\n\n            \n                \n\n                        \n                            Returns :     ValidatorFn\n\n                        \n                            \n                                Una función validadora.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        minAgeValidator\n                        \n                    \n                \n            \n            \n                \nminAgeValidator(minAge: number)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                minAge\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    La edad mínima requerida.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     ValidatorFn\n\n                        \n                            \n                                Una función validadora.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        passwordsMatchValidator\n                        \n                    \n                \n            \n            \n                \npasswordsMatchValidator(passwordControlName: string, confirmPasswordControlName: string)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                passwordControlName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    El nombre del control de la contraseña principal.\n\n                                            \n                                        \n                                        \n                                                confirmPasswordControlName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    El nombre del control de la contraseña de confirmación.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     ValidatorFn\n\n                        \n                            \n                                Una función validadora que se aplica a un FormGroup.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        passwordStrengthValidator\n                        \n                    \n                \n            \n            \n                \npasswordStrengthValidator()\n                \n            \n\n\n\n\n            \n                \n\n                        \n                            Returns :     ValidatorFn\n\n                        \n                            \n                                Una función validadora.\n\n                            \n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nReGamesCreativeAngular\nThis project was generated with Angular CLI version 16.2.16.\nDevelopment server\nRun ng serve for a dev server. Navigate to http://localhost:4200/. The application will automatically reload if you change any of the source files.\nCode scaffolding\nRun ng generate component component-name to generate a new component. You can also use ng generate directive|pipe|service|class|guard|interface|enum|module.\nBuild\nRun ng build to build the project. The build artifacts will be stored in the dist/ directory.\nRunning unit tests\nRun ng test to execute the unit tests via Karma.\nRunning end-to-end tests\nRun ng e2e to execute the end-to-end tests via a platform of your choice. To use this command, you need to first add a package that implements end-to-end testing capabilities.\nFurther help\nTo get more help on the Angular CLI use ng help or go check out the Angular CLI Overview and Command Reference page.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_providers\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nCategoryComponent\n\nCategoryComponent\n\nAppModule -->\n\nCategoryComponent->AppModule\n\n\n\n\n\nConfirmationModalComponent\n\nConfirmationModalComponent\n\nAppModule -->\n\nConfirmationModalComponent->AppModule\n\n\n\n\n\nFooterComponent\n\nFooterComponent\n\nAppModule -->\n\nFooterComponent->AppModule\n\n\n\n\n\nGameCardComponent\n\nGameCardComponent\n\nAppModule -->\n\nGameCardComponent->AppModule\n\n\n\n\n\nGameDetailModalComponent\n\nGameDetailModalComponent\n\nAppModule -->\n\nGameDetailModalComponent->AppModule\n\n\n\n\n\nHeaderComponent\n\nHeaderComponent\n\nAppModule -->\n\nHeaderComponent->AppModule\n\n\n\n\n\nHomeComponent\n\nHomeComponent\n\nAppModule -->\n\nHomeComponent->AppModule\n\n\n\n\n\nLoginComponent\n\nLoginComponent\n\nAppModule -->\n\nLoginComponent->AppModule\n\n\n\n\n\nMyLibraryComponent\n\nMyLibraryComponent\n\nAppModule -->\n\nMyLibraryComponent->AppModule\n\n\n\n\n\nRecoverPasswordComponent\n\nRecoverPasswordComponent\n\nAppModule -->\n\nRecoverPasswordComponent->AppModule\n\n\n\n\n\nRegisterComponent\n\nRegisterComponent\n\nAppModule -->\n\nRegisterComponent->AppModule\n\n\n\n\n\nUserProfileComponent\n\nUserProfileComponent\n\nAppModule -->\n\nUserProfileComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nAuthService\n\nAuthService\n\nAppModule -->\n\nAuthService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        2 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    13 Components\n                \n            \n        \n        \n            \n                \n                    \n                    3 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    7 Interfaces\n                \n            \n        \n        \n            \n                \n                    \n                    \n                        9 Routes\n                    \n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.0\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"routes.html":{"url":"routes.html","title":"routes - routes","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Routes\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            AUTH_STORAGE_KEY   (src/.../auth.service.ts)\n                        \n                        \n                            authGuard   (src/.../auth.guard.ts)\n                        \n                        \n                            bootstrap   (src/.../category.component.ts)\n                        \n                        \n                            bootstrap   (src/.../confirmation-modal.component.ts)\n                        \n                        \n                            bootstrap   (src/.../game-detail-modal.component.ts)\n                        \n                        \n                            CURRENT_USER_KEY   (src/.../auth.service.ts)\n                        \n                        \n                            USER_GAMES_KEY   (src/.../auth.service.ts)\n                        \n                        \n                            USER_GAMES_KEY   (src/.../game.service.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/core/auth/auth.service.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        AUTH_STORAGE_KEY\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'my_game_library_users'\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        CURRENT_USER_KEY\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'my_game_library_currentUser'\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        USER_GAMES_KEY\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'my_game_library_userGames'\n                    \n                \n\n\n        \n    \n\n    src/app/guards/auth.guard.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        authGuard\n                        \n                    \n                \n            \n                \n                    \n                        Type :     CanActivateFn\n\n                    \n                \n                \n                    \n                        Default value : (route, state) => {\n\tconst authService = inject(AuthService);\n\tconst router = inject(Router);\n\n\treturn authService.currentUser.pipe(\n\t\tmap(user => {\n\t\t\tif (user) {\n\t\t\t\tif (route.data && route.data['role'] === 'admin' && user.role !== 'admin') {\n\t\t\t\t\talert('Acceso denegado. Solo administradores pueden acceder a esta página.');\n\t\t\t\t\treturn router.createUrlTree(['/inicio']);\n\t\t\t\t}\n\t\t\t\treturn true;\n\t\t\t} else {\n\t\t\t\talert('Debes iniciar sesión para acceder a esta página.');\n\t\t\t\treturn router.createUrlTree(['/login']);\n\t\t\t}\n\t\t})\n\t);\n}\n                    \n                \n\n\n        \n    \n\n    src/app/features/category/category.component.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n\n\n        \n    \n\n    src/app/shared/confirmation-modal/confirmation-modal.component.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n\n\n        \n    \n\n    src/app/shared/game-detail-modal/game-detail-modal.component.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n\n\n        \n    \n\n    src/app/core/game/game.service.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        USER_GAMES_KEY\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'my_game_library_userGames'\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
